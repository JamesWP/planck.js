{"version":3,"file":"planck.min.js","sources":["../lib/util/options.js","../lib/util/common.js","../lib/common/Math.js","../lib/common/Vec2.js","../lib/Settings.js","../lib/collision/AABB.js","../lib/util/Pool.js","../lib/collision/DynamicTree.js","../lib/collision/BroadPhase.js","../lib/common/Rot.js","../lib/common/Transform.js","../lib/common/Sweep.js","../lib/common/Velocity.js","../lib/common/Position.js","../lib/Shape.js","../lib/Fixture.js","../lib/Body.js","../lib/common/Mat22.js","../lib/Manifold.js","../lib/util/stats.js","../lib/common/Vec3.js","../lib/common/Mat33.js","../lib/collision/Distance.js","../lib/Contact.js","../lib/Joint.js","../lib/util/Timer.js","../lib/collision/TimeOfImpact.js","../lib/Solver.js","../lib/World.js","../lib/serializer/index.js","../lib/shape/CircleShape.js","../lib/shape/EdgeShape.js","../lib/shape/PolygonShape.js","../lib/shape/ChainShape.js","../lib/shape/BoxShape.js","../lib/shape/CollideCircle.js","../lib/shape/CollideEdgeCircle.js","../lib/shape/CollidePolygon.js","../lib/shape/CollideCirclePolygone.js","../lib/shape/CollideEdgePolygon.js","../lib/joint/DistanceJoint.js","../lib/joint/FrictionJoint.js","../lib/joint/RevoluteJoint.js","../lib/joint/PrismaticJoint.js","../lib/joint/GearJoint.js","../lib/joint/MotorJoint.js","../lib/joint/MouseJoint.js","../lib/joint/PulleyJoint.js","../lib/joint/RopeJoint.js","../lib/joint/WeldJoint.js","../lib/joint/WheelJoint.js","../lib/index.js"],"sourcesContent":["var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nexport default function(input, defaults) {\n  if (input === null || typeof input === 'undefined') {\n    input = {};\n  }\n\n  var output = Object.assign({}, input);\n\n  for ( var key in defaults) {\n    if (defaults.hasOwnProperty(key) && typeof input[key] === 'undefined') {\n      output[key] = defaults[key];\n    }\n  }\n\n  if (typeof Object.getOwnPropertySymbols === 'function') {\n    var symbols = Object.getOwnPropertySymbols(defaults);\n    for (var i = 0; i < symbols.length; i++) {\n      var symbol = symbols[i];\n      if (defaults.propertyIsEnumerable(symbol) && typeof input[key] === 'undefined') {\n        output[symbol] = defaults[symbol];\n      }\n    }\n  }\n\n  return output;\n};\n","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport const debug = function() {\n  if (!_DEBUG) return;\n  console.log.apply(console, arguments);\n};\n\nexport const assert = function(statement, err, log) {\n  if (!_ASSERT) return;\n  if (statement) return;\n  log && console.log(log);\n  throw new Error(err);\n};\n\nexport default {\n  assert,\n  debug,\n};\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nimport common from '../util/common';\n\nvar native = Math;\nvar math = Object.create(native);\n\nexport default math;\n\nmath.EPSILON = 1e-9; // TODO\n\n/**\n * This function is used to ensure that a floating point number is not a NaN or\n * infinity.\n */\nmath.isFinite = function(x) {\n  return (typeof x === 'number') && isFinite(x) && !isNaN(x);\n}\n\nmath.assert = function(x) {\n  if (!_ASSERT) return;\n  if (!math.isFinite(x)) {\n    _DEBUG && common.debug(x);\n    throw new Error('Invalid Number!');\n  }\n}\n\n/**\n * TODO: This is a approximate yet fast inverse square-root.\n */\nmath.invSqrt = function(x) {\n  // TODO\n  return 1 / native.sqrt(x);\n}\n\n/**\n * Next Largest Power of 2 Given a binary integer value x, the next largest\n * power of 2 can be computed by a SWAR algorithm that recursively \"folds\" the\n * upper bits into the lower bits. This process yields a bit vector with the\n * same most significant 1 as x, but all 1's below it. Adding 1 to that value\n * yields the next largest power of 2. For a 32-bit value:\n */\nmath.nextPowerOfTwo = function(x) {\n  // TODO\n  x |= (x >> 1);\n  x |= (x >> 2);\n  x |= (x >> 4);\n  x |= (x >> 8);\n  x |= (x >> 16);\n  return x + 1;\n}\n\nmath.isPowerOfTwo = function(x) {\n  return x > 0 && (x & (x - 1)) == 0;\n}\n\nmath.mod = function(num, min, max) {\n  if (typeof min === 'undefined') {\n    max = 1, min = 0;\n  } else if (typeof max === 'undefined') {\n    max = min, min = 0;\n  }\n  if (max > min) {\n    num = (num - min) % (max - min);\n    return num + (num < 0 ? max : min);\n  } else {\n    num = (num - max) % (min - max);\n    return num + (num <= 0 ? min : max);\n  }\n};\n\nmath.clamp = function(num, min, max) {\n  if (num < min) {\n    return min;\n  } else if (num > max) {\n    return max;\n  } else {\n    return num;\n  }\n};\n\nmath.random = function(min, max) {\n  if (typeof min === 'undefined') {\n    max = 1;\n    min = 0;\n  } else if (typeof max === 'undefined') {\n    max = min;\n    min = 0;\n  }\n  return min == max ? min : native.random() * (max - min) + min;\n};\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default Vec2;\n\nimport common from '../util/common';\nimport Math from './Math';\n\nfunction Vec2(x, y) {\n  if (!(this instanceof Vec2)) {\n    return new Vec2(x, y);\n  }\n  if (typeof x === 'undefined') {\n    this.x = 0;\n    this.y = 0;\n  } else if (typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n  } else {\n    this.x = x;\n    this.y = y;\n  }\n  _ASSERT && Vec2.assert(this);\n}\n\nVec2.prototype._serialize = function() {\n  return {\n    x: this.x,\n    y: this.y\n  };\n};\n\nVec2._deserialize = function(data) {\n  var obj = Object.create(Vec2.prototype);\n  obj.x = data.x;\n  obj.y = data.y;\n  return obj;\n};\n\nVec2.zero = function() {\n  var obj = Object.create(Vec2.prototype);\n  obj.x = 0;\n  obj.y = 0;\n  return obj;\n};\n\nVec2.neo = function(x, y) {\n  var obj = Object.create(Vec2.prototype);\n  obj.x = x;\n  obj.y = y;\n  return obj;\n};\n\nVec2.clone = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(v.x, v.y);\n};\n\nVec2.prototype.toString = function() {\n  return JSON.stringify(this);\n};\n\n/**\n * Does this vector contain finite coordinates?\n */\nVec2.isValid = function(v) {\n  return v && Math.isFinite(v.x) && Math.isFinite(v.y);\n}\n\nVec2.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Vec2.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Vec2!');\n  }\n}\n\nVec2.prototype.clone = function() {\n  return Vec2.clone(this);\n}\n\n/**\n * Set this vector to all zeros.\n * \n * @returns this\n */\nVec2.prototype.setZero = function() {\n  this.x = 0.0;\n  this.y = 0.0;\n  return this;\n}\n\n/**\n * Set this vector to some specified coordinates.\n * \n * @returns this\n */\nVec2.prototype.set = function(x, y) {\n  if (typeof x === 'object') {\n    _ASSERT && Vec2.assert(x);\n    this.x = x.x;\n    this.y = x.y;\n  } else {\n    _ASSERT && Math.assert(x);\n    _ASSERT && Math.assert(y);\n    this.x = x;\n    this.y = y;\n  }\n  return this;\n}\n\n/**\n * @deprecated Use setCombine or setMul\n */\nVec2.prototype.wSet = function(a, v, b, w) {\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    return this.setCombine(a, v, b, w);\n  } else {\n    return this.setMul(a, v);\n  }\n}\n\n/**\n * Set linear combination of v and w: `a * v + b * w`\n */\nVec2.prototype.setCombine = function(a, v, b, w) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Math.assert(b);\n  _ASSERT && Vec2.assert(w);\n  var x = a * v.x + b * w.x;\n  var y = a * v.y + b * w.y;\n\n  // `this` may be `w`\n  this.x = x;\n  this.y = y;\n  return this;\n}\n\nVec2.prototype.setMul = function(a, v) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  var x = a * v.x;\n  var y = a * v.y;\n\n  this.x = x;\n  this.y = y;\n  return this;\n}\n\n/**\n * Add a vector to this vector.\n * \n * @returns this\n */\nVec2.prototype.add = function(w) {\n  _ASSERT && Vec2.assert(w);\n  this.x += w.x;\n  this.y += w.y;\n  return this;\n}\n\n/**\n * @deprecated Use addCombine or addMul\n */\nVec2.prototype.wAdd = function(a, v, b, w) {\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    return this.addCombine(a, v, b, w);\n  } else {\n    return this.addMul(a, v);\n  }\n}\n\n/**\n * Add linear combination of v and w: `a * v + b * w`\n */\nVec2.prototype.addCombine = function(a, v, b, w) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Math.assert(b);\n  _ASSERT && Vec2.assert(w);\n\n  var x = a * v.x + b * w.x;\n  var y = a * v.y + b * w.y;\n\n  // `this` may be `w`\n  this.x += x;\n  this.y += y;\n  return this;\n}\n\nVec2.prototype.addMul = function(a, v) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  var x = a * v.x;\n  var y = a * v.y;\n\n  this.x += x;\n  this.y += y;\n  return this;\n}\n\n/**\n * @deprecated Use subCombine or subMul\n */\nVec2.prototype.wSub = function(a, v, b, w) {\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    return this.subCombine(a, v, b, w);\n  } else {\n    return this.subMul(a, v);\n  }}\n\n/**\n * Subtract linear combination of v and w: `a * v + b * w`\n */\nVec2.prototype.subCombine = function(a, v, b, w) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Math.assert(b);\n  _ASSERT && Vec2.assert(w);\n  var x = a * v.x + b * w.x;\n  var y = a * v.y + b * w.y;\n\n  // `this` may be `w`\n  this.x -= x;\n  this.y -= y;\n  return this;\n}\n\nVec2.prototype.subMul = function(a, v) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  var x = a * v.x;\n  var y = a * v.y;\n\n  this.x -= x;\n  this.y -= y;\n  return this;\n}\n\n/**\n * Subtract a vector from this vector\n * \n * @returns this\n */\nVec2.prototype.sub = function(w) {\n  _ASSERT && Vec2.assert(w);\n  this.x -= w.x;\n  this.y -= w.y;\n  return this;\n}\n\n/**\n * Multiply this vector by a scalar.\n * \n * @returns this\n */\nVec2.prototype.mul = function(m) {\n  _ASSERT && Math.assert(m);\n  this.x *= m;\n  this.y *= m;\n  return this;\n}\n\n/**\n * Get the length of this vector (the norm).\n * \n * For performance, use this instead of lengthSquared (if possible).\n */\nVec2.prototype.length = function() {\n  return Vec2.lengthOf(this);\n}\n\n/**\n * Get the length squared.\n */\nVec2.prototype.lengthSquared = function() {\n  return Vec2.lengthSquared(this);\n}\n\n/**\n * Convert this vector into a unit vector.\n * \n * @returns old length\n */\nVec2.prototype.normalize = function() {\n  var length = this.length();\n  if (length < Math.EPSILON) {\n    return 0.0;\n  }\n  var invLength = 1.0 / length;\n  this.x *= invLength;\n  this.y *= invLength;\n  return length;\n}\n\n/**\n * Get the length of this vector (the norm).\n *\n * For performance, use this instead of lengthSquared (if possible).\n */\nVec2.lengthOf = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Math.sqrt(v.x * v.x + v.y * v.y);\n}\n\n/**\n * Get the length squared.\n */\nVec2.lengthSquared = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return v.x * v.x + v.y * v.y;\n}\n\nVec2.distance = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  var dx = v.x - w.x, dy = v.y - w.y;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nVec2.distanceSquared = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  var dx = v.x - w.x, dy = v.y - w.y;\n  return dx * dx + dy * dy;\n}\n\nVec2.areEqual = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return v == w || typeof w === 'object' && w !== null && v.x === w.x && v.y === w.y;\n}\n\n/**\n * Get the skew vector such that dot(skew_vec, other) == cross(vec, other)\n */\nVec2.skew = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(-v.y, v.x);\n}\n\n/**\n * Perform the dot product on two vectors.\n */\nVec2.dot = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return v.x * w.x + v.y * w.y;\n}\n\n/**\n * Perform the cross product on two vectors. In 2D this produces a scalar.\n * \n * Perform the cross product on a vector and a scalar. In 2D this produces a\n * vector.\n */\nVec2.cross = function(v, w) {\n  if (typeof w === 'number') {\n    _ASSERT && Vec2.assert(v);\n    _ASSERT && Math.assert(w);\n    return Vec2.neo(w * v.y, -w * v.x);\n\n  } else if (typeof v === 'number') {\n    _ASSERT && Math.assert(v);\n    _ASSERT && Vec2.assert(w);\n    return Vec2.neo(-v * w.y, v * w.x);\n\n  } else {\n    _ASSERT && Vec2.assert(v);\n    _ASSERT && Vec2.assert(w);\n    return v.x * w.y - v.y * w.x\n  }\n}\n\n/**\n * Returns `a + (v x w)`\n */\nVec2.addCross = function(a, v, w) {\n  if (typeof w === 'number') {\n    _ASSERT && Vec2.assert(v);\n    _ASSERT && Math.assert(w);\n    return Vec2.neo(w * v.y + a.x, -w * v.x + a.y);\n\n  } else if (typeof v === 'number') {\n    _ASSERT && Math.assert(v);\n    _ASSERT && Vec2.assert(w);\n    return Vec2.neo(-v * w.y + a.x, v * w.x + a.y);\n  }\n\n  _ASSERT && common.assert(false);\n}\n\nVec2.add = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(v.x + w.x, v.y + w.y);\n}\n\n/**\n * @deprecated Use combine\n */\nVec2.wAdd = function(a, v, b, w) {\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    return Vec2.combine(a, v, b, w);\n  } else {\n    return Vec2.mul(a, v);\n  }\n}\n\nVec2.combine = function(a, v, b, w) {\n  return Vec2.zero().setCombine(a, v, b, w);\n}\n\nVec2.sub = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(v.x - w.x, v.y - w.y);\n}\n\nVec2.mul = function(a, b) {\n  if (typeof a === 'object') {\n    _ASSERT && Vec2.assert(a);\n    _ASSERT && Math.assert(b);\n    return Vec2.neo(a.x * b, a.y * b);\n\n  } else if (typeof b === 'object') {\n    _ASSERT && Math.assert(a);\n    _ASSERT && Vec2.assert(b);\n    return Vec2.neo(a * b.x, a * b.y);\n  }\n}\n\nVec2.prototype.neg = function() {\n  this.x = -this.x;\n  this.y = -this.y;\n  return this;\n}\n\nVec2.neg = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(-v.x, -v.y);\n}\n\nVec2.abs = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(Math.abs(v.x), Math.abs(v.y));\n}\n\nVec2.mid = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo((v.x + w.x) * 0.5, (v.y + w.y) * 0.5);\n}\n\nVec2.upper = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(Math.max(v.x, w.x), Math.max(v.y, w.y));\n}\n\nVec2.lower = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(Math.min(v.x, w.x), Math.min(v.y, w.y));\n}\n\nVec2.prototype.clamp = function(max) {\n  var lengthSqr = this.x * this.x + this.y * this.y;\n  if (lengthSqr > max * max) {\n    var invLength = Math.invSqrt(lengthSqr);\n    this.x *= invLength * max;\n    this.y *= invLength * max;\n  }\n  return this;\n}\n\nVec2.clamp = function(v, max) {\n  v = Vec2.neo(v.x, v.y);\n  v.clamp(max);\n  return v;\n}\n\n/**\n * @experimental\n */\nVec2.scaleFn = function (x, y) {\n  return function (v) {\n    return Vec2.neo(v.x * x, v.y * y);\n  };\n}\n\n/**\n * @experimental\n */\nVec2.translateFn = function(x, y) {\n  return function (v) {\n    return Vec2.neo(v.x + x, v.y + y);\n  };\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\n// TODO merge with World options?\n\nconst Settings = {};\n\nexport default Settings;\n\n/**\n * Tuning constants based on meters-kilograms-seconds (MKS) units.\n */\n\n// Collision\n/**\n * The maximum number of contact points between two convex shapes. Do not change\n * this value.\n */\nSettings.maxManifoldPoints = 2;\n\n/**\n * The maximum number of vertices on a convex polygon. You cannot increase this\n * too much because BlockAllocator has a maximum object size.\n */\nSettings.maxPolygonVertices = 12;\n\n/**\n * This is used to fatten AABBs in the dynamic tree. This allows proxies to move\n * by a small amount without triggering a tree adjustment. This is in meters.\n */\nSettings.aabbExtension = 0.1;\n\n/**\n * This is used to fatten AABBs in the dynamic tree. This is used to predict the\n * future position based on the current displacement. This is a dimensionless\n * multiplier.\n */\nSettings.aabbMultiplier = 2.0;\n\n/**\n * A small length used as a collision and constraint tolerance. Usually it is\n * chosen to be numerically significant, but visually insignificant.\n */\nSettings.linearSlop = 0.005;\nSettings.linearSlopSquared = Settings.linearSlop * Settings.linearSlop;\n\n/**\n * A small angle used as a collision and constraint tolerance. Usually it is\n * chosen to be numerically significant, but visually insignificant.\n */\nSettings.angularSlop = (2.0 / 180.0 * Math.PI);\n\n/**\n * The radius of the polygon/edge shape skin. This should not be modified.\n * Making this smaller means polygons will have an insufficient buffer for\n * continuous collision. Making it larger may create artifacts for vertex\n * collision.\n */\nSettings.polygonRadius = (2.0 * Settings.linearSlop);\n\n/**\n * Maximum number of sub-steps per contact in continuous physics simulation.\n */\nSettings.maxSubSteps = 8;\n\n// Dynamics\n\n/**\n * Maximum number of contacts to be handled to solve a TOI impact.\n */\nSettings.maxTOIContacts = 32;\n\n/**\n * Maximum iterations to solve a TOI.\n */\nSettings.maxTOIIterations = 20;\n\n/**\n * Maximum iterations to find Distance.\n */\nSettings.maxDistnceIterations = 20;\n\n/**\n * A velocity threshold for elastic collisions. Any collision with a relative\n * linear velocity below this threshold will be treated as inelastic.\n */\nSettings.velocityThreshold = 1.0;\n\n/**\n * The maximum linear position correction used when solving constraints. This\n * helps to prevent overshoot.\n */\nSettings.maxLinearCorrection = 0.2;\n\n/**\n * The maximum angular position correction used when solving constraints. This\n * helps to prevent overshoot.\n */\nSettings.maxAngularCorrection = (8.0 / 180.0 * Math.PI);\n\n/**\n * The maximum linear velocity of a body. This limit is very large and is used\n * to prevent numerical problems. You shouldn't need to adjust this.\n */\nSettings.maxTranslation = 2.0;\nSettings.maxTranslationSquared = (Settings.maxTranslation * Settings.maxTranslation);\n\n/**\n * The maximum angular velocity of a body. This limit is very large and is used\n * to prevent numerical problems. You shouldn't need to adjust this.\n */\nSettings.maxRotation = (0.5 * Math.PI)\nSettings.maxRotationSquared = (Settings.maxRotation * Settings.maxRotation)\n\n/**\n * This scale factor controls how fast overlap is resolved. Ideally this would\n * be 1 so that overlap is removed in one time step. However using values close\n * to 1 often lead to overshoot.\n */\nSettings.baumgarte = 0.2;\nSettings.toiBaugarte = 0.75;\n\n// Sleep\n\n/**\n * The time that a body must be still before it will go to sleep.\n */\nSettings.timeToSleep = 0.5;\n\n/**\n * A body cannot sleep if its linear velocity is above this tolerance.\n */\nSettings.linearSleepTolerance = 0.01;\n\nSettings.linearSleepToleranceSqr = Math.pow(Settings.linearSleepTolerance, 2);\n\n/**\n * A body cannot sleep if its angular velocity is above this tolerance.\n */\nSettings.angularSleepTolerance = (2.0 / 180.0 * Math.PI);\n\nSettings.angularSleepToleranceSqr = Math.pow(Settings.angularSleepTolerance, 2);\n\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nimport Settings from '../Settings';\nimport common from '../util/common';\nimport Math from '../common/Math';\nimport Vec2 from '../common/Vec2';\n\nexport default AABB;\n\nfunction AABB(lower, upper) {\n  if (!(this instanceof AABB)) {\n    return new AABB(lower, upper);\n  }\n\n  this.lowerBound = Vec2.zero();\n  this.upperBound = Vec2.zero();\n\n  if (typeof lower === 'object') {\n    this.lowerBound.set(lower);\n  }\n  if (typeof upper === 'object') {\n    this.upperBound.set(upper);\n  } else if (typeof lower === 'object') {\n    this.upperBound.set(lower);\n  }\n};\n\n/**\n * Verify that the bounds are sorted.\n */\nAABB.prototype.isValid = function() {\n  return AABB.isValid(this);\n}\n\nAABB.isValid = function(aabb) {\n  var d = Vec2.sub(aabb.upperBound, aabb.lowerBound);\n  var valid = d.x >= 0.0 && d.y >= 0.0 && Vec2.isValid(aabb.lowerBound) && Vec2.isValid(aabb.upperBound);\n  return valid;\n}\n\nAABB.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!AABB.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid AABB!');\n  }\n}\n\n/**\n * Get the center of the AABB.\n */\nAABB.prototype.getCenter = function() {\n  return Vec2.neo((this.lowerBound.x + this.upperBound.x) * 0.5, (this.lowerBound.y + this.upperBound.y) * 0.5);\n}\n\n/**\n * Get the extents of the AABB (half-widths).\n */\nAABB.prototype.getExtents = function() {\n  return Vec2.neo((this.upperBound.x - this.lowerBound.x) * 0.5, (this.upperBound.y - this.lowerBound.y) * 0.5);\n}\n\n/**\n * Get the perimeter length.\n */\nAABB.prototype.getPerimeter = function() {\n  return 2.0 * (this.upperBound.x - this.lowerBound.x + this.upperBound.y - this.lowerBound.y);\n}\n\n/**\n * Combine one or two AABB into this one.\n */\nAABB.prototype.combine = function(a, b) {\n  b = b || this;\n\n  var lowerA = a.lowerBound;\n  var upperA = a.upperBound;\n  var lowerB = b.lowerBound;\n  var upperB = b.upperBound;\n\n  var lowerX = Math.min(lowerA.x, lowerB.x);\n  var lowerY = Math.min(lowerA.y, lowerB.y);\n  var upperX = Math.max(upperB.x, upperA.x);\n  var upperY = Math.max(upperB.y, upperA.y);\n\n  this.lowerBound.set(lowerX, lowerY);\n  this.upperBound.set(upperX, upperY);\n}\n\nAABB.prototype.combinePoints = function(a, b) {\n  this.lowerBound.set(Math.min(a.x, b.x), Math.min(a.y, b.y));\n  this.upperBound.set(Math.max(a.x, b.x), Math.max(a.y, b.y));\n}\n\nAABB.prototype.set = function(aabb) {\n  this.lowerBound.set(aabb.lowerBound.x, aabb.lowerBound.y);\n  this.upperBound.set(aabb.upperBound.x, aabb.upperBound.y);\n}\n\nAABB.prototype.contains = function(aabb) {\n  var result = true;\n  result = result && this.lowerBound.x <= aabb.lowerBound.x;\n  result = result && this.lowerBound.y <= aabb.lowerBound.y;\n  result = result && aabb.upperBound.x <= this.upperBound.x;\n  result = result && aabb.upperBound.y <= this.upperBound.y;\n  return result;\n}\n\nAABB.prototype.extend = function(value) {\n  AABB.extend(this, value);\n  return this;\n}\n\nAABB.extend = function(aabb, value) {\n  aabb.lowerBound.x -= value;\n  aabb.lowerBound.y -= value;\n  aabb.upperBound.x += value;\n  aabb.upperBound.y += value;\n}\n\nAABB.testOverlap = function(a, b) {\n  var d1x = b.lowerBound.x - a.upperBound.x;\n  var d2x = a.lowerBound.x - b.upperBound.x;\n\n  var d1y = b.lowerBound.y - a.upperBound.y;\n  var d2y = a.lowerBound.y - b.upperBound.y;\n\n  if (d1x > 0 || d1y > 0 || d2x > 0 || d2y > 0) {\n    return false;\n  }\n  return true;\n}\n\nAABB.areEqual = function(a, b) {\n  return Vec2.areEqual(a.lowerBound, b.lowerBound) && Vec2.areEqual(a.upperBound, b.upperBound);\n}\n\nAABB.diff = function(a, b) {\n  var wD = Math.max(0, Math.min(a.upperBound.x, b.upperBound.x) - Math.max(b.lowerBound.x, a.lowerBound.x))\n  var hD = Math.max(0, Math.min(a.upperBound.y, b.upperBound.y) - Math.max(b.lowerBound.y, a.lowerBound.y));\n\n  var wA = a.upperBound.x - a.lowerBound.x;\n  var hA = a.upperBound.y - a.lowerBound.y;\n\n  var wB = b.upperBound.x - b.lowerBound.x;\n  var hB = b.upperBound.y - b.lowerBound.y;\n\n  return wA * hA + wB * hB - wD * hD;\n};\n\n/**\n * @typedef RayCastInput\n *\n * Ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1).\n *\n * @prop {Vec2} p1\n * @prop {Vec2} p2\n * @prop {number} maxFraction\n */\n\n/**\n * @typedef RayCastInput\n *\n * Ray-cast output data. The ray hits at p1 + fraction * (p2 - p1), where p1 and\n * p2 come from RayCastInput.\n *\n * @prop {Vec2} normal\n * @prop {number} fraction\n */\n\n/**\n * @param {RayCastOutput} output\n * @param {RayCastInput} input\n * @returns {boolean}\n */\nAABB.prototype.rayCast = function(output, input) {\n  // From Real-time Collision Detection, p179.\n\n  var tmin = -Infinity;\n  var tmax = Infinity;\n\n  var p = input.p1;\n  var d = Vec2.sub(input.p2, input.p1);\n  var absD = Vec2.abs(d);\n\n  var normal = Vec2.zero();\n\n  for (var f = 'x'; f !== null; f = (f === 'x' ? 'y' : null)) {\n    if (absD.x < Math.EPSILON) {\n      // Parallel.\n      if (p[f] < this.lowerBound[f] || this.upperBound[f] < p[f]) {\n        return false;\n      }\n    } else {\n      var inv_d = 1.0 / d[f];\n      var t1 = (this.lowerBound[f] - p[f]) * inv_d;\n      var t2 = (this.upperBound[f] - p[f]) * inv_d;\n\n      // Sign of the normal vector.\n      var s = -1.0;\n\n      if (t1 > t2) {\n        var temp = t1;\n        t1 = t2, t2 = temp;\n        s = 1.0;\n      }\n\n      // Push the min up\n      if (t1 > tmin) {\n        normal.setZero();\n        normal[f] = s;\n        tmin = t1;\n      }\n\n      // Pull the max down\n      tmax = Math.min(tmax, t2);\n\n      if (tmin > tmax) {\n        return false;\n      }\n    }\n  }\n\n  // Does the ray start inside the box?\n  // Does the ray intersect beyond the max fraction?\n  if (tmin < 0.0 || input.maxFraction < tmin) {\n    return false;\n  }\n\n  // Intersection.\n  output.fraction = tmin;\n  output.normal = normal;\n  return true;\n}\n\nAABB.prototype.toString = function() {\n  return JSON.stringify(this);\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default Pool;\n\nfunction Pool(opts) {\n  var _list = [];\n  var _max = opts.max || Infinity;\n\n  var _createFn = opts.create;\n  var _outFn = opts.allocate;\n  var _inFn = opts.release;\n  var _discardFn = opts.discard;\n\n  var _createCount = 0;\n  var _outCount = 0;\n  var _inCount = 0;\n  var _discardCount = 0;\n\n  this.max = function(n) {\n    if (typeof n === 'number') {\n      _max = n;\n      return this;\n    }\n    return _max;\n  };\n\n  this.size = function() {\n    return _list.length;\n  };\n\n  this.allocate = function() {\n    var item;\n    if (_list.length > 0) {\n      item = _list.shift();\n    } else {\n      _createCount++;\n      if (typeof _createFn === 'function') {\n        item = _createFn();\n      } else {\n        item = {};\n      }\n    }\n    _outCount++;\n    if (typeof _outFn === 'function') {\n      _outFn(item);\n    }\n    return item;\n  };\n\n  this.release = function(item) {\n    if (_list.length < _max) {\n      _inCount++;\n      if (typeof _inFn === 'function') {\n        _inFn(item);\n      }\n      _list.push(item);\n    } else {\n      _discardCount++;\n      if (typeof _discardFn === 'function') {\n        item = _discardFn(item);\n      }\n    }\n  };\n\n  this.toString = function() {\n    return \" +\" + _createCount + \" >\" + _outCount + \" <\" + _inCount + \" -\"\n        + _discardCount + \" =\" + _list.length + \"/\" + _max;\n  };\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nimport Settings from '../Settings';\nimport common from '../util/common';\nimport Pool from '../util/Pool';\nimport Vec2 from '../common/Vec2';\nimport Math from '../common/Math';\nimport AABB from './AABB';\n\nexport default DynamicTree;\n\n/**\n * A node in the dynamic tree. The client does not interact with this directly.\n * \n * @prop {AABB} aabb Enlarged AABB\n * @prop {integer} height 0: leaf, -1: free node\n */\nfunction TreeNode(id) {\n  this.id = id;\n  this.aabb = new AABB();\n  this.userData = null;\n  this.parent = null;\n  this.child1 = null;\n  this.child2 = null;\n  this.height = -1;\n\n  this.toString = function() {\n    return this.id + \": \" + this.userData;\n  }\n};\n\nTreeNode.prototype.isLeaf = function() {\n  return this.child1 == null;\n}\n/**\n * A dynamic AABB tree broad-phase, inspired by Nathanael Presson's btDbvt. A\n * dynamic tree arranges data in a binary tree to accelerate queries such as\n * volume queries and ray casts. Leafs are proxies with an AABB. In the tree we\n * expand the proxy AABB by `aabbExtension` so that the proxy AABB is bigger\n * than the client object. This allows the client object to move by small\n * amounts without triggering a tree update.\n * \n * Nodes are pooled and relocatable, so we use node indices rather than\n * pointers.\n */\nfunction DynamicTree() {\n  this.m_root = null;\n  this.m_nodes = {}\n  this.m_lastProxyId = 0;\n\n  this.m_pool = new Pool({\n    create : function() {\n      return new TreeNode();\n    }\n  });\n};\n\n/**\n * Get proxy user data.\n * \n * @return the proxy user data or 0 if the id is invalid.\n */\nDynamicTree.prototype.getUserData = function(id) {\n  var node = this.m_nodes[id];\n  _ASSERT && common.assert(!!node);\n  return node.userData;\n}\n\n/**\n * Get the fat AABB for a node id.\n * \n * @return the proxy user data or 0 if the id is invalid.\n */\nDynamicTree.prototype.getFatAABB = function(id) {\n  var node = this.m_nodes[id];\n  _ASSERT && common.assert(!!node);\n  return node.aabb;\n}\n\nDynamicTree.prototype.allocateNode = function() {\n  var node = this.m_pool.allocate();\n  node.id = ++this.m_lastProxyId;\n  node.userData = null;\n  node.parent = null;\n  node.child1 = null;\n  node.child2 = null;\n  node.height = -1;\n  this.m_nodes[node.id] = node;\n  return node;\n}\n\nDynamicTree.prototype.freeNode = function(node) {\n  this.m_pool.release(node);\n  node.height = -1;\n  delete this.m_nodes[node.id];\n}\n\n/**\n * Create a proxy in the tree as a leaf node. We return the index of the node\n * instead of a pointer so that we can grow the node pool.\n * \n * Create a proxy. Provide a tight fitting AABB and a userData pointer.\n */\nDynamicTree.prototype.createProxy = function(aabb, userData) {\n  _ASSERT && common.assert(AABB.isValid(aabb))\n\n  var node = this.allocateNode()\n\n  node.aabb.set(aabb);\n\n  // Fatten the aabb.\n  AABB.extend(node.aabb, Settings.aabbExtension);\n\n  node.userData = userData;\n  node.height = 0;\n\n  this.insertLeaf(node);\n\n  return node.id;\n}\n\n/**\n * Destroy a proxy. This asserts if the id is invalid.\n */\nDynamicTree.prototype.destroyProxy = function(id) {\n  var node = this.m_nodes[id];\n\n  _ASSERT && common.assert(!!node);\n  _ASSERT && common.assert(node.isLeaf());\n\n  this.removeLeaf(node);\n  this.freeNode(node);\n}\n\n/**\n * Move a proxy with a swepted AABB. If the proxy has moved outside of its\n * fattened AABB, then the proxy is removed from the tree and re-inserted.\n * Otherwise the function returns immediately.\n * \n * @param id\n * @param aabb\n * @param {Vec2} d Displacement\n * \n * @return true if the proxy was re-inserted.\n */\nDynamicTree.prototype.moveProxy = function(id, aabb, d) {\n  _ASSERT && common.assert(AABB.isValid(aabb));\n  _ASSERT && common.assert(!d || Vec2.isValid(d));\n\n  var node = this.m_nodes[id];\n\n  _ASSERT && common.assert(!!node);\n  _ASSERT && common.assert(node.isLeaf());\n\n  if (node.aabb.contains(aabb)) {\n    return false;\n  }\n\n  this.removeLeaf(node);\n\n  node.aabb.set(aabb)\n\n  // Extend AABB.\n  aabb = node.aabb;\n  AABB.extend(aabb, Settings.aabbExtension);\n\n  // Predict AABB displacement.\n  // var d = Vec2.mul(Settings.aabbMultiplier, displacement);\n\n  if (d.x < 0.0) {\n    aabb.lowerBound.x += d.x * Settings.aabbMultiplier;\n  } else {\n    aabb.upperBound.x += d.x * Settings.aabbMultiplier;\n  }\n\n  if (d.y < 0.0) {\n    aabb.lowerBound.y += d.y * Settings.aabbMultiplier;\n  } else {\n    aabb.upperBound.y += d.y * Settings.aabbMultiplier;\n  }\n\n  this.insertLeaf(node);\n\n  return true;\n}\n\nDynamicTree.prototype.insertLeaf = function(leaf) {\n  _ASSERT && common.assert(AABB.isValid(leaf.aabb));\n\n  if (this.m_root == null) {\n    this.m_root = leaf;\n    this.m_root.parent = null;\n    return;\n  }\n\n  // Find the best sibling for this node\n  var leafAABB = leaf.aabb;\n  var index = this.m_root;\n  while (index.isLeaf() == false) {\n    var child1 = index.child1;\n    var child2 = index.child2;\n\n    var area = index.aabb.getPerimeter();\n\n    var combinedAABB = new AABB();\n    combinedAABB.combine(index.aabb, leafAABB);\n    var combinedArea = combinedAABB.getPerimeter();\n\n    // Cost of creating a new parent for this node and the new leaf\n    var cost = 2.0 * combinedArea;\n\n    // Minimum cost of pushing the leaf further down the tree\n    var inheritanceCost = 2.0 * (combinedArea - area);\n\n    // Cost of descending into child1\n    var cost1;\n    if (child1.isLeaf()) {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child1.aabb);\n      cost1 = aabb.getPerimeter() + inheritanceCost;\n    } else {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child1.aabb);\n      var oldArea = child1.aabb.getPerimeter();\n      var newArea = aabb.getPerimeter();\n      cost1 = (newArea - oldArea) + inheritanceCost;\n    }\n\n    // Cost of descending into child2\n    var cost2;\n    if (child2.isLeaf()) {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child2.aabb);\n      cost2 = aabb.getPerimeter() + inheritanceCost;\n    } else {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child2.aabb);\n      var oldArea = child2.aabb.getPerimeter();\n      var newArea = aabb.getPerimeter();\n      cost2 = newArea - oldArea + inheritanceCost;\n    }\n\n    // Descend according to the minimum cost.\n    if (cost < cost1 && cost < cost2) {\n      break;\n    }\n\n    // Descend\n    if (cost1 < cost2) {\n      index = child1;\n    } else {\n      index = child2;\n    }\n  }\n\n  var sibling = index;\n\n  // Create a new parent.\n  var oldParent = sibling.parent;\n  var newParent = this.allocateNode();\n  newParent.parent = oldParent;\n  newParent.userData = null;\n  newParent.aabb.combine(leafAABB, sibling.aabb);\n  newParent.height = sibling.height + 1;\n\n  if (oldParent != null) {\n    // The sibling was not the root.\n    if (oldParent.child1 == sibling) {\n      oldParent.child1 = newParent;\n    } else {\n      oldParent.child2 = newParent;\n    }\n\n    newParent.child1 = sibling;\n    newParent.child2 = leaf;\n    sibling.parent = newParent;\n    leaf.parent = newParent;\n  } else {\n    // The sibling was the root.\n    newParent.child1 = sibling;\n    newParent.child2 = leaf;\n    sibling.parent = newParent;\n    leaf.parent = newParent;\n    this.m_root = newParent;\n  }\n\n  // Walk back up the tree fixing heights and AABBs\n  index = leaf.parent;\n  while (index != null) {\n    index = this.balance(index);\n\n    var child1 = index.child1;\n    var child2 = index.child2;\n\n    _ASSERT && common.assert(child1 != null);\n    _ASSERT && common.assert(child2 != null);\n\n    index.height = 1 + Math.max(child1.height, child2.height);\n    index.aabb.combine(child1.aabb, child2.aabb);\n\n    index = index.parent;\n  }\n\n  // validate();\n}\n\nDynamicTree.prototype.removeLeaf = function(leaf) {\n  if (leaf == this.m_root) {\n    this.m_root = null;\n    return;\n  }\n\n  var parent = leaf.parent;\n  var grandParent = parent.parent;\n  var sibling;\n  if (parent.child1 == leaf) {\n    sibling = parent.child2;\n  } else {\n    sibling = parent.child1;\n  }\n\n  if (grandParent != null) {\n    // Destroy parent and connect sibling to grandParent.\n    if (grandParent.child1 == parent) {\n      grandParent.child1 = sibling;\n    } else {\n      grandParent.child2 = sibling;\n    }\n    sibling.parent = grandParent;\n    this.freeNode(parent);\n\n    // Adjust ancestor bounds.\n    var index = grandParent;\n    while (index != null) {\n      index = this.balance(index);\n\n      var child1 = index.child1;\n      var child2 = index.child2;\n\n      index.aabb.combine(child1.aabb, child2.aabb);\n      index.height = 1 + Math.max(child1.height, child2.height);\n\n      index = index.parent;\n    }\n  } else {\n    this.m_root = sibling;\n    sibling.parent = null;\n    this.freeNode(parent);\n  }\n\n  // validate();\n}\n\n/**\n * Perform a left or right rotation if node A is imbalanced. Returns the new\n * root index.\n */\nDynamicTree.prototype.balance = function(iA) {\n  _ASSERT && common.assert(iA != null);\n\n  var A = iA;\n  if (A.isLeaf() || A.height < 2) {\n    return iA;\n  }\n\n  var B = A.child1;\n  var C = A.child2;\n\n  var balance = C.height - B.height;\n\n  // Rotate C up\n  if (balance > 1) {\n    var F = C.child1;\n    var G = C.child2;\n\n    // Swap A and C\n    C.child1 = A;\n    C.parent = A.parent;\n    A.parent = C;\n\n    // A's old parent should point to C\n    if (C.parent != null) {\n      if (C.parent.child1 == iA) {\n        C.parent.child1 = C;\n      } else {\n        C.parent.child2 = C;\n      }\n    } else {\n      this.m_root = C;\n    }\n\n    // Rotate\n    if (F.height > G.height) {\n      C.child2 = F;\n      A.child2 = G;\n      G.parent = A;\n      A.aabb.combine(B.aabb, G.aabb);\n      C.aabb.combine(A.aabb, F.aabb);\n\n      A.height = 1 + Math.max(B.height, G.height);\n      C.height = 1 + Math.max(A.height, F.height);\n    } else {\n      C.child2 = G;\n      A.child2 = F;\n      F.parent = A;\n      A.aabb.combine(B.aabb, F.aabb);\n      C.aabb.combine(A.aabb, G.aabb);\n\n      A.height = 1 + Math.max(B.height, F.height);\n      C.height = 1 + Math.max(A.height, G.height);\n    }\n\n    return C;\n  }\n\n  // Rotate B up\n  if (balance < -1) {\n    var D = B.child1;\n    var E = B.child2;\n\n    // Swap A and B\n    B.child1 = A;\n    B.parent = A.parent;\n    A.parent = B;\n\n    // A's old parent should point to B\n    if (B.parent != null) {\n      if (B.parent.child1 == A) {\n        B.parent.child1 = B;\n      } else {\n        B.parent.child2 = B;\n      }\n    } else {\n      this.m_root = B;\n    }\n\n    // Rotate\n    if (D.height > E.height) {\n      B.child2 = D;\n      A.child1 = E;\n      E.parent = A;\n      A.aabb.combine(C.aabb, E.aabb);\n      B.aabb.combine(A.aabb, D.aabb);\n\n      A.height = 1 + Math.max(C.height, E.height);\n      B.height = 1 + Math.max(A.height, D.height);\n    } else {\n      B.child2 = E;\n      A.child1 = D;\n      D.parent = A;\n      A.aabb.combine(C.aabb, D.aabb);\n      B.aabb.combine(A.aabb, E.aabb);\n\n      A.height = 1 + Math.max(C.height, D.height);\n      B.height = 1 + Math.max(A.height, E.height);\n    }\n\n    return B;\n  }\n\n  return A;\n}\n\n/**\n * Compute the height of the binary tree in O(N) time. Should not be called\n * often.\n */\nDynamicTree.prototype.getHeight = function() {\n  if (this.m_root == null) {\n    return 0;\n  }\n\n  return this.m_root.height;\n}\n\n/**\n * Get the ratio of the sum of the node areas to the root area.\n */\nDynamicTree.prototype.getAreaRatio = function() {\n  if (this.m_root == null) {\n    return 0.0;\n  }\n\n  var root = this.m_root;\n  var rootArea = root.aabb.getPerimeter();\n\n  var totalArea = 0.0;\n  var node, it = iteratorPool.allocate().preorder(this.m_root);\n  while (node = it.next()) {\n    if (node.height < 0) {\n      // Free node in pool\n      continue;\n    }\n\n    totalArea += node.aabb.getPerimeter();\n  }\n\n  iteratorPool.release(it);\n\n  return totalArea / rootArea;\n}\n\n/**\n * Compute the height of a sub-tree.\n */\nDynamicTree.prototype.computeHeight = function(id) {\n  var node;\n  if (typeof id !== 'undefined') {\n    node = this.m_nodes[id];\n  } else {\n    node = this.m_root;\n  }\n\n  // _ASSERT && common.assert(0 <= id && id < this.m_nodeCapacity);\n\n  if (node.isLeaf()) {\n    return 0;\n  }\n\n  var height1 = this.computeHeight(node.child1.id);\n  var height2 = this.computeHeight(node.child2.id);\n  return 1 + Math.max(height1, height2);\n}\n\nDynamicTree.prototype.validateStructure = function(node) {\n  if (node == null) {\n    return;\n  }\n\n  if (node == this.m_root) {\n    _ASSERT && common.assert(node.parent == null);\n  }\n\n  var child1 = node.child1;\n  var child2 = node.child2;\n\n  if (node.isLeaf()) {\n    _ASSERT && common.assert(child1 == null);\n    _ASSERT && common.assert(child2 == null);\n    _ASSERT && common.assert(node.height == 0);\n    return;\n  }\n\n  // _ASSERT && common.assert(0 <= child1 && child1 < this.m_nodeCapacity);\n  // _ASSERT && common.assert(0 <= child2 && child2 < this.m_nodeCapacity);\n\n  _ASSERT && common.assert(child1.parent == node);\n  _ASSERT && common.assert(child2.parent == node);\n\n  this.validateStructure(child1);\n  this.validateStructure(child2);\n}\n\nDynamicTree.prototype.validateMetrics = function(node) {\n  if (node == null) {\n    return;\n  }\n\n  var child1 = node.child1;\n  var child2 = node.child2;\n\n  if (node.isLeaf()) {\n    _ASSERT && common.assert(child1 == null);\n    _ASSERT && common.assert(child2 == null);\n    _ASSERT && common.assert(node.height == 0);\n    return;\n  }\n\n  // _ASSERT && common.assert(0 <= child1 && child1 < this.m_nodeCapacity);\n  // _ASSERT && common.assert(0 <= child2 && child2 < this.m_nodeCapacity);\n\n  var height1 = child1.height;\n  var height2 = child2.height;\n  var height = 1 + Math.max(height1, height2);\n  _ASSERT && common.assert(node.height == height);\n\n  var aabb = new AABB();\n  aabb.combine(child1.aabb, child2.aabb);\n\n  _ASSERT && common.assert(AABB.areEqual(aabb, node.aabb));\n\n  this.validateMetrics(child1);\n  this.validateMetrics(child2);\n}\n\n// Validate this tree. For testing.\nDynamicTree.prototype.validate = function() {\n  this.validateStructure(this.m_root);\n  this.validateMetrics(this.m_root);\n\n  _ASSERT && common.assert(this.getHeight() == this.computeHeight());\n}\n\n/**\n * Get the maximum balance of an node in the tree. The balance is the difference\n * in height of the two children of a node.\n */\nDynamicTree.prototype.getMaxBalance = function() {\n  var maxBalance = 0;\n  var node, it = iteratorPool.allocate().preorder(this.m_root);\n  while (node = it.next()) {\n    if (node.height <= 1) {\n      continue;\n    }\n\n    _ASSERT && common.assert(node.isLeaf() == false);\n\n    var balance = Math.abs(node.child2.height - node.child1.height);\n    maxBalance = Math.max(maxBalance, balance);\n  }\n  iteratorPool.release(it);\n\n  return maxBalance;\n}\n\n/**\n * Build an optimal tree. Very expensive. For testing.\n */\nDynamicTree.prototype.rebuildBottomUp = function() {\n  var nodes = [];\n  var count = 0;\n\n  // Build array of leaves. Free the rest.\n  var node, it = iteratorPool.allocate().preorder(this.m_root);\n  while (node = it.next()) {\n    if (node.height < 0) {\n      // free node in pool\n      continue;\n    }\n\n    if (node.isLeaf()) {\n      node.parent = null;\n      nodes[count] = node;\n      ++count;\n    } else {\n      this.freeNode(node);\n    }\n  }\n  iteratorPool.release(it);\n\n  while (count > 1) {\n    var minCost = Infinity;\n    var iMin = -1, jMin = -1;\n    for (var i = 0; i < count; ++i) {\n      var aabbi = nodes[i].aabb;\n      for (var j = i + 1; j < count; ++j) {\n        var aabbj = nodes[j].aabb;\n        var b = new AABB();\n        b.combine(aabbi, aabbj);\n        var cost = b.getPerimeter();\n        if (cost < minCost) {\n          iMin = i;\n          jMin = j;\n          minCost = cost;\n        }\n      }\n    }\n\n    var child1 = nodes[iMin];\n    var child2 = nodes[jMin];\n\n    var parent = this.allocateNode();\n    parent.child1 = child1;\n    parent.child2 = child2;\n    parent.height = 1 + Math.max(child1.height, child2.height);\n    parent.aabb.combine(child1.aabb, child2.aabb);\n    parent.parent = null;\n\n    child1.parent = parent;\n    child2.parent = parent;\n\n    nodes[jMin] = nodes[count - 1];\n    nodes[iMin] = parent;\n    --count;\n  }\n\n  this.m_root = nodes[0];\n\n  this.validate();\n}\n\n/**\n * Shift the world origin. Useful for large worlds. The shift formula is:\n * position -= newOrigin\n * \n * @param newOrigin The new origin with respect to the old origin\n */\nDynamicTree.prototype.shiftOrigin = function(newOrigin) {\n  // Build array of leaves. Free the rest.\n  var node, it = iteratorPool.allocate().preorder(this.m_root);\n  while (node = it.next()) {\n    var aabb = node.aabb;\n    aabb.lowerBound.x -= newOrigin.x;\n    aabb.lowerBound.y -= newOrigin.y;\n    aabb.upperBound.x -= newOrigin.x;\n    aabb.upperBound.y -= newOrigin.y;\n  }\n  iteratorPool.release(it);\n}\n\n/**\n * @function {DynamicTree~queryCallback}\n * \n * @param id Node id.\n */\n\n/**\n * Query an AABB for overlapping proxies. The callback class is called for each\n * proxy that overlaps the supplied AABB.\n * \n * @param {DynamicTree~queryCallback} queryCallback\n */\nDynamicTree.prototype.query = function(aabb, queryCallback) {\n  _ASSERT && common.assert(typeof queryCallback === 'function')\n  var stack = stackPool.allocate();\n\n  stack.push(this.m_root);\n  while (stack.length > 0) {\n    var node = stack.pop();\n    if (node == null) {\n      continue;\n    }\n\n    if (AABB.testOverlap(node.aabb, aabb)) {\n      if (node.isLeaf()) {\n        var proceed = queryCallback(node.id);\n        if (proceed == false) {\n          return;\n        }\n      } else {\n        stack.push(node.child1);\n        stack.push(node.child2);\n      }\n    }\n  }\n\n  stackPool.release(stack);\n}\n\n/**\n * Ray-cast against the proxies in the tree. This relies on the callback to\n * perform a exact ray-cast in the case were the proxy contains a shape. The\n * callback also performs the any collision filtering. This has performance\n * roughly equal to k * log(n), where k is the number of collisions and n is the\n * number of proxies in the tree.\n * \n * @param input The ray-cast input data. The ray extends from p1 to p1 +\n *          maxFraction * (p2 - p1).\n * @param rayCastCallback A function that is called for each proxy that is hit by\n *          the ray.\n */\nDynamicTree.prototype.rayCast = function(input, rayCastCallback) { // TODO GC\n  _ASSERT && common.assert(typeof rayCastCallback === 'function')\n  var p1 = input.p1;\n  var p2 = input.p2;\n  var r = Vec2.sub(p2, p1);\n  _ASSERT && common.assert(r.lengthSquared() > 0.0);\n  r.normalize();\n\n  // v is perpendicular to the segment.\n  var v = Vec2.cross(1.0, r);\n  var abs_v = Vec2.abs(v);\n\n  // Separating axis for segment (Gino, p80).\n  // |dot(v, p1 - c)| > dot(|v|, h)\n\n  var maxFraction = input.maxFraction;\n\n  // Build a bounding box for the segment.\n  var segmentAABB = new AABB();\n  var t = Vec2.combine((1 - maxFraction), p1, maxFraction, p2);\n  segmentAABB.combinePoints(p1, t);\n\n  var stack = stackPool.allocate();\n  var subInput = inputPool.allocate();\n\n  stack.push(this.m_root);\n  while (stack.length > 0) {\n    var node = stack.pop();\n    if (node == null) {\n      continue;\n    }\n\n    if (AABB.testOverlap(node.aabb, segmentAABB) == false) {\n      continue;\n    }\n\n    // Separating axis for segment (Gino, p80).\n    // |dot(v, p1 - c)| > dot(|v|, h)\n    var c = node.aabb.getCenter();\n    var h = node.aabb.getExtents();\n    var separation = Math.abs(Vec2.dot(v, Vec2.sub(p1, c)))\n        - Vec2.dot(abs_v, h);\n    if (separation > 0.0) {\n      continue;\n    }\n\n    if (node.isLeaf()) {\n      subInput.p1 = Vec2.clone(input.p1);\n      subInput.p2 = Vec2.clone(input.p2);\n      subInput.maxFraction = maxFraction;\n\n      var value = rayCastCallback(subInput, node.id);\n\n      if (value == 0.0) {\n        // The client has terminated the ray cast.\n        return;\n      }\n\n      if (value > 0.0) {\n        // update segment bounding box.\n        maxFraction = value;\n        t = Vec2.combine((1 - maxFraction), p1, maxFraction, p2);\n        segmentAABB.combinePoints(p1, t);\n      }\n    } else {\n      stack.push(node.child1);\n      stack.push(node.child2);\n    }\n  }\n\n  stackPool.release(stack);\n  inputPool.release(subInput);\n}\n\nvar inputPool = new Pool({\n  create : function() {\n    return {};\n  },\n  release : function(stack) {\n  }\n});\n\nvar stackPool = new Pool({\n  create : function() {\n    return [];\n  },\n  release : function(stack) {\n    stack.length = 0;\n  }\n});\n\nvar iteratorPool = new Pool({\n  create : function() {\n    return new Iterator();\n  },\n  release : function(iterator) {\n    iterator.close();\n  }\n});\n\nfunction Iterator() {\n  var parents = [];\n  var states = [];\n  return {\n    preorder : function(root) {\n      parents.length = 0;\n      parents.push(root);\n      states.length = 0;\n      states.push(0);\n      return this;\n    },\n    next : function() {\n      while (parents.length > 0) {\n        var i = parents.length - 1;\n        var node = parents[i];\n        if (states[i] === 0) {\n          states[i] = 1;\n          return node;\n        }\n        if (states[i] === 1) {\n          states[i] = 2;\n          if (node.child1) {\n            parents.push(node.child1);\n            states.push(1);\n            return node.child1;\n          }\n        }\n        if (states[i] === 2) {\n          states[i] = 3;\n          if (node.child2) {\n            parents.push(node.child2);\n            states.push(1);\n            return node.child2;\n          }\n        }\n        parents.pop();\n        states.pop();\n      }\n    },\n    close : function() {\n      parents.length = 0;\n    }\n  };\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nimport Settings from '../Settings';\nimport common from '../util/common';\nimport Math from '../common/Math';\nimport AABB from './AABB';\nimport DynamicTree from './DynamicTree';\n\nexport default BroadPhase;\n\n/**\n * The broad-phase wraps and extends a dynamic-tree to keep track of moved\n * objects and query them on update.\n */\nfunction BroadPhase() {\n  this.m_tree = new DynamicTree();\n  this.m_proxyCount = 0;\n  this.m_moveBuffer = [];\n  this.queryCallback = this.queryCallback.bind(this);\n};\n\n/**\n * Get user data from a proxy. Returns null if the id is invalid.\n */\nBroadPhase.prototype.getUserData = function(proxyId) {\n  return this.m_tree.getUserData(proxyId);\n}\n\n/**\n * Test overlap of fat AABBs.\n */\nBroadPhase.prototype.testOverlap = function(proxyIdA, proxyIdB) {\n  var aabbA = this.m_tree.getFatAABB(proxyIdA);\n  var aabbB = this.m_tree.getFatAABB(proxyIdB);\n  return AABB.testOverlap(aabbA, aabbB);\n}\n\n/**\n * Get the fat AABB for a proxy.\n */\nBroadPhase.prototype.getFatAABB = function(proxyId) {\n  return this.m_tree.getFatAABB(proxyId);\n}\n\n/**\n * Get the number of proxies.\n */\nBroadPhase.prototype.getProxyCount = function() {\n  return this.m_proxyCount;\n}\n\n/**\n * Get the height of the embedded tree.\n */\nBroadPhase.prototype.getTreeHeight = function() {\n  return this.m_tree.getHeight();\n}\n\n/**\n * Get the balance (integer) of the embedded tree.\n */\nBroadPhase.prototype.getTreeBalance = function() {\n  return this.m_tree.getMaxBalance();\n}\n\n/**\n * Get the quality metric of the embedded tree.\n */\nBroadPhase.prototype.getTreeQuality = function() {\n  return this.m_tree.getAreaRatio();\n}\n\n/**\n * Query an AABB for overlapping proxies. The callback class is called for each\n * proxy that overlaps the supplied AABB.\n */\nBroadPhase.prototype.query = function(aabb, queryCallback) {\n  this.m_tree.query(aabb, queryCallback);\n}\n\n/**\n * Ray-cast against the proxies in the tree. This relies on the callback to\n * perform a exact ray-cast in the case were the proxy contains a shape. The\n * callback also performs the any collision filtering. This has performance\n * roughly equal to k * log(n), where k is the number of collisions and n is the\n * number of proxies in the tree.\n * \n * @param input The ray-cast input data. The ray extends from p1 to p1 +\n *          maxFraction * (p2 - p1).\n * @param rayCastCallback A function that is called for each proxy that is hit by\n *          the ray.\n */\nBroadPhase.prototype.rayCast = function(input, rayCastCallback) {\n  this.m_tree.rayCast(input, rayCastCallback);\n}\n\n/**\n * Shift the world origin. Useful for large worlds. The shift formula is:\n * position -= newOrigin\n * \n * @param newOrigin The new origin with respect to the old origin\n */\nBroadPhase.prototype.shiftOrigin = function(newOrigin) {\n  this.m_tree.shiftOrigin(newOrigin);\n}\n\n/**\n * Create a proxy with an initial AABB. Pairs are not reported until UpdatePairs\n * is called.\n */\nBroadPhase.prototype.createProxy = function(aabb, userData) {\n  _ASSERT && common.assert(AABB.isValid(aabb));\n  var proxyId = this.m_tree.createProxy(aabb, userData);\n  this.m_proxyCount++;\n  this.bufferMove(proxyId);\n  return proxyId;\n}\n\n/**\n * Destroy a proxy. It is up to the client to remove any pairs.\n */\nBroadPhase.prototype.destroyProxy = function(proxyId) {\n  this.unbufferMove(proxyId);\n  this.m_proxyCount--;\n  this.m_tree.destroyProxy(proxyId);\n}\n\n/**\n * Call moveProxy as many times as you like, then when you are done call\n * UpdatePairs to finalized the proxy pairs (for your time step).\n */\nBroadPhase.prototype.moveProxy = function(proxyId, aabb, displacement) {\n  _ASSERT && common.assert(AABB.isValid(aabb));\n  var changed = this.m_tree.moveProxy(proxyId, aabb, displacement);\n  if (changed) {\n    this.bufferMove(proxyId);\n  }\n}\n\n/**\n * Call to trigger a re-processing of it's pairs on the next call to\n * UpdatePairs.\n */\nBroadPhase.prototype.touchProxy = function(proxyId) {\n  this.bufferMove(proxyId);\n}\n\nBroadPhase.prototype.bufferMove = function(proxyId) {\n  this.m_moveBuffer.push(proxyId);\n}\n\nBroadPhase.prototype.unbufferMove = function(proxyId) {\n  for (var i = 0; i < this.m_moveBuffer.length; ++i) {\n    if (this.m_moveBuffer[i] == proxyId) {\n      this.m_moveBuffer[i] = null;\n    }\n  }\n}\n\n/**\n * @function BroadPhase~addPair\n * @param {Object} userDataA\n * @param {Object} userDataB\n */\n\n/**\n * Update the pairs. This results in pair callbacks. This can only add pairs.\n * \n * @param {BroadPhase~AddPair} addPairCallback\n */\nBroadPhase.prototype.updatePairs = function(addPairCallback) {\n  _ASSERT && common.assert(typeof addPairCallback === 'function');\n  this.m_callback = addPairCallback;\n\n  // Perform tree queries for all moving proxies.\n  while (this.m_moveBuffer.length > 0) {\n    this.m_queryProxyId = this.m_moveBuffer.pop();\n    if (this.m_queryProxyId === null) {\n      continue;\n    }\n\n    // We have to query the tree with the fat AABB so that\n    // we don't fail to create a pair that may touch later.\n    var fatAABB = this.m_tree.getFatAABB(this.m_queryProxyId);\n\n    // Query tree, create pairs and add them pair buffer.\n    this.m_tree.query(fatAABB, this.queryCallback);\n  }\n\n  // Try to keep the tree balanced.\n  // this.m_tree.rebalance(4);\n}\n\nBroadPhase.prototype.queryCallback = function(proxyId) {\n  // A proxy cannot form a pair with itself.\n  if (proxyId == this.m_queryProxyId) {\n    return true;\n  }\n\n  var proxyIdA = Math.min(proxyId, this.m_queryProxyId);\n  var proxyIdB = Math.max(proxyId, this.m_queryProxyId);\n\n  // TODO: Skip any duplicate pairs.\n\n  var userDataA = this.m_tree.getUserData(proxyIdA);\n  var userDataB = this.m_tree.getUserData(proxyIdB);\n\n  // Send the pairs back to the client.\n  this.m_callback(userDataA, userDataB);\n\n  return true;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default Rot;\n\nimport common from '../util/common';\nimport Vec2 from './Vec2';\nimport Math from './Math';\n\n// TODO merge with Transform\n\n/**\n * Initialize from an angle in radians.\n */\nfunction Rot(angle) {\n  if (!(this instanceof Rot)) {\n    return new Rot(angle);\n  }\n  if (typeof angle === 'number') {\n    this.setAngle(angle);\n  } else if (typeof angle === 'object') {\n      this.set(angle);\n  } else {\n    this.setIdentity();\n  }\n}\n\nRot.neo = function(angle) {\n  var obj = Object.create(Rot.prototype);\n  obj.setAngle(angle);\n  return obj;\n};\n\nRot.clone = function(rot) {\n  _ASSERT && Rot.assert(rot);\n  var obj = Object.create(Rot.prototype);\n  obj.s = rot.s;\n  obj.c = rot.c;\n  return obj;\n};\n\nRot.identity = function() {\n  var obj = Object.create(Rot.prototype);\n  obj.s = 0.0;\n  obj.c = 1.0;\n  return obj;\n};\n\nRot.isValid = function(o) {\n  return o && Math.isFinite(o.s) && Math.isFinite(o.c);\n}\n\nRot.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Rot.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Rot!');\n  }\n}\n\n/**\n * Set to the identity rotation.\n */\nRot.prototype.setIdentity = function() {\n  this.s = 0.0;\n  this.c = 1.0;\n}\n\nRot.prototype.set = function(angle) {\n  if (typeof angle === 'object') {\n    _ASSERT && Rot.assert(angle);\n    this.s = angle.s;\n    this.c = angle.c;\n\n  } else {\n    _ASSERT && Math.assert(angle);\n    // TODO_ERIN optimize\n    this.s = Math.sin(angle);\n    this.c = Math.cos(angle);\n  }\n}\n\n/**\n * Set using an angle in radians.\n */\nRot.prototype.setAngle = function(angle) {\n  _ASSERT && Math.assert(angle);\n  // TODO_ERIN optimize\n  this.s = Math.sin(angle);\n  this.c = Math.cos(angle);\n};\n\n/**\n * Get the angle in radians.\n */\nRot.prototype.getAngle = function() {\n  return Math.atan2(this.s, this.c);\n}\n\n/**\n * Get the x-axis.\n */\nRot.prototype.getXAxis = function() {\n  return Vec2.neo(this.c, this.s);\n}\n\n/**\n * Get the u-axis.\n */\nRot.prototype.getYAxis = function() {\n  return Vec2.neo(-this.s, this.c);\n}\n\n/**\n * Multiply two rotations: q * r\n * \n * @returns Rot\n * \n * Rotate a vector\n * \n * @returns Vec2\n */\nRot.mul = function(rot, m) {\n  _ASSERT && Rot.assert(rot);\n  if ('c' in m && 's' in m) {\n    _ASSERT && Rot.assert(m);\n    // [qc -qs] * [rc -rs] = [qc*rc-qs*rs -qc*rs-qs*rc]\n    // [qs qc] [rs rc] [qs*rc+qc*rs -qs*rs+qc*rc]\n    // s = qs * rc + qc * rs\n    // c = qc * rc - qs * rs\n    var qr = Rot.identity();\n    qr.s = rot.s * m.c + rot.c * m.s;\n    qr.c = rot.c * m.c - rot.s * m.s;\n    return qr;\n\n  } else if ('x' in m && 'y' in m) {\n    _ASSERT && Vec2.assert(m);\n    return Vec2.neo(rot.c * m.x - rot.s * m.y, rot.s * m.x + rot.c * m.y);\n  }\n}\n\nRot.mulRot = function(rot, m) {\n  _ASSERT && Rot.assert(rot);\n  _ASSERT && Rot.assert(m);\n  // [qc -qs] * [rc -rs] = [qc*rc-qs*rs -qc*rs-qs*rc]\n  // [qs qc] [rs rc] [qs*rc+qc*rs -qs*rs+qc*rc]\n  // s = qs * rc + qc * rs\n  // c = qc * rc - qs * rs\n  var qr = Rot.identity();\n  qr.s = rot.s * m.c + rot.c * m.s;\n  qr.c = rot.c * m.c - rot.s * m.s;\n  return qr;\n}\n\nRot.mulVec2 = function(rot, m) {\n  _ASSERT && Rot.assert(rot);\n  _ASSERT && Vec2.assert(m);\n  return Vec2.neo(rot.c * m.x - rot.s * m.y, rot.s * m.x + rot.c * m.y);\n}\n\nRot.mulSub = function(rot, v, w) {\n  var x = rot.c * (v.x - w.x) - rot.s * (v.y - w.y);\n  var y = rot.s * (v.x - w.x) + rot.c * (v.y - w.y);\n  return Vec2.neo(x, y);\n}\n\n/**\n * Transpose multiply two rotations: qT * r\n * \n * @returns Rot\n * \n * Inverse rotate a vector\n * \n * @returns Vec2\n */\nRot.mulT = function(rot, m) {\n  if ('c' in m && 's' in m) {\n    _ASSERT && Rot.assert(m);\n    // [ qc qs] * [rc -rs] = [qc*rc+qs*rs -qc*rs+qs*rc]\n    // [-qs qc] [rs rc] [-qs*rc+qc*rs qs*rs+qc*rc]\n    // s = qc * rs - qs * rc\n    // c = qc * rc + qs * rs\n    var qr = Rot.identity();\n    qr.s = rot.c * m.s - rot.s * m.c;\n    qr.c = rot.c * m.c + rot.s * m.s;\n    return qr;\n\n  } else if ('x' in m && 'y' in m) {\n    _ASSERT && Vec2.assert(m);\n    return Vec2.neo(rot.c * m.x + rot.s * m.y, -rot.s * m.x + rot.c * m.y);\n  }\n}\n\nRot.mulTRot = function(rot, m) {\n  _ASSERT && Rot.assert(m);\n  // [ qc qs] * [rc -rs] = [qc*rc+qs*rs -qc*rs+qs*rc]\n  // [-qs qc] [rs rc] [-qs*rc+qc*rs qs*rs+qc*rc]\n  // s = qc * rs - qs * rc\n  // c = qc * rc + qs * rs\n  var qr = Rot.identity();\n  qr.s = rot.c * m.s - rot.s * m.c;\n  qr.c = rot.c * m.c + rot.s * m.s;\n  return qr;\n}\n\nRot.mulTVec2 = function(rot, m) {\n  _ASSERT && Vec2.assert(m);\n  return Vec2.neo(rot.c * m.x + rot.s * m.y, -rot.s * m.x + rot.c * m.y);\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default Transform;\n\nimport common from '../util/common';\nimport Vec2 from './Vec2';\nimport Rot from './Rot';\n\n// TODO merge with Rot\n\n/**\n * A transform contains translation and rotation. It is used to represent the\n * position and orientation of rigid frames. Initialize using a position vector\n * and a rotation.\n *\n * @prop {Vec2} position\n * @prop {Rot} rotation\n */\nfunction Transform(position, rotation) {\n  if (!(this instanceof Transform)) {\n    return new Transform(position, rotation);\n  }\n  this.p = Vec2.zero();\n  this.q = Rot.identity();\n  if (typeof position !== 'undefined') {\n    this.p.set(position);\n  }\n  if (typeof rotation !== 'undefined') {\n    this.q.set(rotation);\n  }\n};\n\nTransform.clone = function(xf) {\n  var obj = Object.create(Transform.prototype);\n  obj.p = Vec2.clone(xf.p);\n  obj.q = Rot.clone(xf.q);\n  return obj;\n};\n\nTransform.neo = function(position, rotation) {\n  var obj = Object.create(Transform.prototype);\n  obj.p = Vec2.clone(position);\n  obj.q = Rot.clone(rotation);\n  return obj;\n};\n\nTransform.identity = function() {\n  var obj = Object.create(Transform.prototype);\n  obj.p = Vec2.zero();\n  obj.q = Rot.identity();\n  return obj;\n};\n\n/**\n * Set this to the identity transform.\n */\nTransform.prototype.setIdentity = function() {\n  this.p.setZero();\n  this.q.setIdentity();\n}\n\n/**\n * Set this based on the position and angle.\n */\nTransform.prototype.set = function(a, b) {\n  if (typeof b === 'undefined') {\n    this.p.set(a.p);\n    this.q.set(a.q);\n  } else {\n    this.p.set(a);\n    this.q.set(b);\n  }\n}\n\nTransform.isValid = function(o) {\n  return o && Vec2.isValid(o.p) && Rot.isValid(o.q);\n}\n\nTransform.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Transform.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Transform!');\n  }\n}\n\n/**\n * @param {Transform} a\n * @param {Vec2} b\n * @returns {Vec2}\n *\n * @param {Transform} a\n * @param {Transform} b\n * @returns {Transform}\n */\nTransform.mul = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  if (Array.isArray(b)) {\n    var arr = [];\n    for (var i = 0; i < b.length; i++) {\n      arr[i] = Transform.mul(a, b[i]);\n    }\n    return arr;\n\n  } else if ('x' in b && 'y' in b) {\n    _ASSERT && Vec2.assert(b);\n    var x = (a.q.c * b.x - a.q.s * b.y) + a.p.x;\n    var y = (a.q.s * b.x + a.q.c * b.y) + a.p.y;\n    return Vec2.neo(x, y);\n\n  } else if ('p' in b && 'q' in b) {\n    _ASSERT && Transform.assert(b);\n    // v2 = A.q.Rot(B.q.Rot(v1) + B.p) + A.p\n    // = (A.q * B.q).Rot(v1) + A.q.Rot(B.p) + A.p\n    var xf = Transform.identity();\n    xf.q = Rot.mulRot(a.q, b.q);\n    xf.p = Vec2.add(Rot.mulVec2(a.q, b.p), a.p);\n    return xf;\n  }\n}\n\n/**\n * @deprecated Use mulFn instead.\n */\nTransform.mulAll = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  var arr = [];\n  for (var i = 0; i < b.length; i++) {\n    arr[i] = Transform.mul(a, b[i]);\n  }\n  return arr;\n}\n\n/**\n * @experimental\n */\nTransform.mulFn = function(a) {\n  _ASSERT && Transform.assert(a);\n  return function(b) {\n    return Transform.mul(a, b);\n  };\n}\n\nTransform.mulVec2 = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  _ASSERT && Vec2.assert(b);\n  var x = (a.q.c * b.x - a.q.s * b.y) + a.p.x;\n  var y = (a.q.s * b.x + a.q.c * b.y) + a.p.y;\n  return Vec2.neo(x, y);\n}\n\nTransform.mulXf = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  _ASSERT && Transform.assert(b);\n  // v2 = A.q.Rot(B.q.Rot(v1) + B.p) + A.p\n  // = (A.q * B.q).Rot(v1) + A.q.Rot(B.p) + A.p\n  var xf = Transform.identity();\n  xf.q = Rot.mulRot(a.q, b.q);\n  xf.p = Vec2.add(Rot.mulVec2(a.q, b.p), a.p);\n  return xf;\n}\n\n/**\n * @param {Transform} a\n * @param {Vec2} b\n * @returns {Vec2}\n *\n * @param {Transform} a\n * @param {Transform} b\n * @returns {Transform}\n */\nTransform.mulT = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  if ('x' in b && 'y' in b) {\n    _ASSERT && Vec2.assert(b)\n    var px = b.x - a.p.x;\n    var py = b.y - a.p.y;\n    var x = (a.q.c * px + a.q.s * py);\n    var y = (-a.q.s * px + a.q.c * py);\n    return Vec2.neo(x, y);\n\n  } else if ('p' in b && 'q' in b) {\n    _ASSERT && Transform.assert(b);\n    // v2 = A.q' * (B.q * v1 + B.p - A.p)\n    // = A.q' * B.q * v1 + A.q' * (B.p - A.p)\n    var xf = Transform.identity();\n    xf.q.set(Rot.mulTRot(a.q, b.q));\n    xf.p.set(Rot.mulTVec2(a.q, Vec2.sub(b.p, a.p)));\n    return xf;\n  }\n}\n\nTransform.mulTVec2 = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  _ASSERT && Vec2.assert(b)\n  var px = b.x - a.p.x;\n  var py = b.y - a.p.y;\n  var x = (a.q.c * px + a.q.s * py);\n  var y = (-a.q.s * px + a.q.c * py);\n  return Vec2.neo(x, y);\n}\n\nTransform.mulTXf = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  _ASSERT && Transform.assert(b);\n  // v2 = A.q' * (B.q * v1 + B.p - A.p)\n  // = A.q' * B.q * v1 + A.q' * (B.p - A.p)\n  var xf = Transform.identity();\n  xf.q.set(Rot.mulTRot(a.q, b.q));\n  xf.p.set(Rot.mulTVec2(a.q, Vec2.sub(b.p, a.p)));\n  return xf;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default Sweep;\n\nimport common from '../util/common';\nimport Math from './Math';\nimport Vec2 from './Vec2';\nimport Rot from './Rot';\nimport Transform from './Transform';\n\n/**\n * This describes the motion of a body/shape for TOI computation. Shapes are\n * defined with respect to the body origin, which may not coincide with the\n * center of mass. However, to support dynamics we must interpolate the center\n * of mass position.\n * \n * @prop {Vec2} localCenter Local center of mass position\n * @prop {Vec2} c World center position\n * @prop {float} a World angle\n * @prop {float} alpha0 Fraction of the current time step in the range [0,1], c0\n *       and a0 are c and a at alpha0.\n */\nfunction Sweep(c, a) {\n  _ASSERT && common.assert(typeof c === 'undefined');\n  _ASSERT && common.assert(typeof a === 'undefined');\n  this.localCenter = Vec2.zero();\n  this.c = Vec2.zero();\n  this.a = 0;\n  this.alpha0 = 0;\n  this.c0 = Vec2.zero();\n  this.a0 = 0;\n}\n\nSweep.prototype.setTransform = function(xf) {\n  var c = Transform.mulVec2(xf, this.localCenter);\n  this.c.set(c);\n  this.c0.set(c);\n\n  this.a = xf.q.getAngle();\n  this.a0 = xf.q.getAngle();\n};\n\nSweep.prototype.setLocalCenter = function(localCenter, xf) {\n  this.localCenter.set(localCenter);\n\n  var c = Transform.mulVec2(xf, this.localCenter);\n  this.c.set(c);\n  this.c0.set(c);\n};\n\n/**\n * Get the interpolated transform at a specific time.\n * \n * @param xf\n * @param beta A factor in [0,1], where 0 indicates alpha0\n */\nSweep.prototype.getTransform = function(xf, beta) {\n  beta = typeof beta === 'undefined' ? 0 : beta;\n  xf.q.setAngle((1.0 - beta) * this.a0 + beta * this.a);\n  xf.p.setCombine((1.0 - beta), this.c0, beta, this.c);\n\n  // shift to origin\n  xf.p.sub(Rot.mulVec2(xf.q, this.localCenter));\n};\n\n/**\n * Advance the sweep forward, yielding a new initial state.\n * \n * @param {float} alpha The new initial time\n */\nSweep.prototype.advance = function(alpha) {\n  _ASSERT && common.assert(this.alpha0 < 1.0);\n  var beta = (alpha - this.alpha0) / (1.0 - this.alpha0);\n  this.c0.setCombine(beta, this.c, 1 - beta, this.c0);\n  this.a0 = beta * this.a + (1 - beta) * this.a0;\n  this.alpha0 = alpha;\n};\n\nSweep.prototype.forward = function() {\n  this.a0 = this.a;\n  this.c0.set(this.c);\n};\n\n/**\n * normalize the angles in radians to be between -pi and pi.\n */\nSweep.prototype.normalize = function() {\n  var a0 = Math.mod(this.a0, -Math.PI, +Math.PI);\n  this.a -= this.a0 - a0;\n  this.a0 = a0;\n};\n\nSweep.prototype.clone = function() {\n  var clone = new Sweep();\n  clone.localCenter.set(this.localCenter);\n  clone.alpha0 = this.alpha0;\n  clone.a0 = this.a0;\n  clone.a = this.a;\n  clone.c0.set(this.c0);\n  clone.c.set(this.c);\n  return clone;\n};\n\nSweep.prototype.set = function(that) {\n  this.localCenter.set(that.localCenter);\n  this.alpha0 = that.alpha0;\n  this.a0 = that.a0;\n  this.a = that.a;\n  this.c0.set(that.c0);\n  this.c.set(that.c);\n};\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default Velocity;\n\nimport Vec2 from './Vec2';\n\n/**\n * @prop {Vec2} v linear\n * @prop {float} w angular\n */\nfunction Velocity() {\n  this.v = Vec2.zero();\n  this.w = 0;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default Position;\n\nimport Vec2 from './Vec2';\nimport Rot from './Rot';\n\n/**\n * @prop {Vec2} c location\n * @prop {float} a angle\n */\nfunction Position() {\n  this.c = Vec2.zero();\n  this.a = 0;\n}\n\nPosition.prototype.getTransform = function(xf, p) {\n  xf.q.set(this.a);\n  xf.p.set(Vec2.sub(this.c, Rot.mulVec2(xf.q, p)));\n  return xf;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default Shape;\n\nimport Math from './common/Math';\n\n/**\n * A shape is used for collision detection. You can create a shape however you\n * like. Shapes used for simulation in World are created automatically when a\n * Fixture is created. Shapes may encapsulate one or more child shapes.\n */\nfunction Shape() {\n  this.m_type;\n  this.m_radius;\n}\n\nShape.prototype._reset = function() {\n};\n\nShape.prototype._serialize = function() {\n  return {};\n};\n\nShape.TYPES = {};\n\nShape._deserialize = function(data, context, restore) {\n  var clazz = Shape.TYPES[data.type];\n  return clazz && restore(clazz, data);\n};\n\nShape.isValid = function(shape) {\n  return !!shape;\n};\n\nShape.prototype.getRadius = function() {\n  return this.m_radius;\n};\n\n/**\n * Get the type of this shape. You can use this to down cast to the concrete\n * shape.\n * \n * @return the shape type.\n */\nShape.prototype.getType = function() {\n  return this.m_type;\n};\n\n/**\n * @deprecated Shapes should be treated as immutable.\n *\n * clone the concrete shape.\n */\nShape.prototype._clone = function() {\n};\n\n/**\n * // Get the number of child primitives.\n */\nShape.prototype.getChildCount = function() {\n};\n\n/**\n * Test a point for containment in this shape. This only works for convex\n * shapes.\n * \n * @param {Transform} xf The shape world transform.\n * @param p A point in world coordinates.\n */\nShape.prototype.testPoint = function(xf, p) {\n};\n\n/**\n * Cast a ray against a child shape.\n * \n * @param {RayCastOutput} output The ray-cast results.\n * @param {RayCastInput} input The ray-cast input parameters.\n * @param {Transform} transform The transform to be applied to the shape.\n * @param childIndex The child shape index\n */\nShape.prototype.rayCast = function(output, input, transform, childIndex) {\n};\n\n/**\n * Given a transform, compute the associated axis aligned bounding box for a\n * child shape.\n * \n * @param {AABB} aabb Returns the axis aligned box.\n * @param {Transform} xf The world transform of the shape.\n * @param childIndex The child shape\n */\nShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n};\n\n/**\n * Compute the mass properties of this shape using its dimensions and density.\n * The inertia tensor is computed about the local origin.\n * \n * @param {MassData} massData Returns the mass data for this shape.\n * @param density The density in kilograms per meter squared.\n */\nShape.prototype.computeMass = function(massData, density) {\n};\n\n/**\n * @param {DistanceProxy} proxy\n */\nShape.prototype.computeDistanceProxy = function(proxy) {\n};\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default Fixture;\n\nimport common from './util/common';\nimport options from './util/options';\n\nimport Math from './common/Math';\nimport Vec2 from './common/Vec2';\n\nimport AABB from './collision/AABB';\n\nimport Shape from './Shape';\n\n/**\n * @typedef {Object} FixtureDef\n *\n * A fixture definition is used to create a fixture. This class defines an\n * abstract fixture definition. You can reuse fixture definitions safely.\n * \n * @prop friction The friction coefficient, usually in the range [0,1]\n * @prop restitution The restitution (elasticity) usually in the range [0,1]\n * @prop density The density, usually in kg/m^2\n * @prop isSensor A sensor shape collects contact information but never\n *       generates a collision response\n * @prop userData\n * @prop filterGroupIndex Zero, positive or negative collision group. Fixtures with same positive groupIndex always collide and fixtures with same\n * negative groupIndex never collide.\n * @prop filterCategoryBits Collision category bit or bits that this fixture belongs\n *       to. If groupIndex is zero or not matching, then at least one bit in this fixture\n * categoryBits should match other fixture maskBits and vice versa.\n * @prop filterMaskBits Collision category bit or bits that this fixture accept for\n *       collision.\n */\nvar FixtureDef = {\n  userData : null,\n  friction : 0.2,\n  restitution : 0.0,\n  density : 0.0,\n  isSensor : false,\n\n  filterGroupIndex : 0,\n  filterCategoryBits : 0x0001,\n  filterMaskBits : 0xFFFF\n};\n\n/**\n * This proxy is used internally to connect shape children to the broad-phase.\n */\nfunction FixtureProxy(fixture, childIndex) {\n  this.aabb = new AABB();\n  this.fixture = fixture;\n  this.childIndex = childIndex;\n  this.proxyId;\n};\n\n/**\n * A fixture is used to attach a shape to a body for collision detection. A\n * fixture inherits its transform from its parent. Fixtures hold additional\n * non-geometric data such as friction, collision filters, etc. Fixtures are\n * created via Body.createFixture.\n * \n * @param {Body} body\n * @param {Shape|FixtureDef} shape Shape of fixture definition.\n * @param {FixtureDef|number} def Fixture definition or number.\n */\nfunction Fixture(body, shape, def) {\n  if (shape.shape) {\n    def = shape;\n    shape = shape.shape;\n\n  } else if (typeof def === 'number') {\n    def = {density : def};\n  }\n\n  def = options(def, FixtureDef);\n\n  this.m_body = body;\n\n  this.m_friction = def.friction;\n  this.m_restitution = def.restitution;\n  this.m_density = def.density;\n  this.m_isSensor = def.isSensor;\n\n  this.m_filterGroupIndex = def.filterGroupIndex;\n  this.m_filterCategoryBits = def.filterCategoryBits;\n  this.m_filterMaskBits = def.filterMaskBits;\n\n  // TODO validate shape\n  this.m_shape = shape; //.clone();\n\n  this.m_next = null;\n\n  this.m_proxies = [];\n  this.m_proxyCount = 0;\n\n  var childCount = this.m_shape.getChildCount();\n  for (var i = 0; i < childCount; ++i) {\n    this.m_proxies[i] = new FixtureProxy(this, i);\n  }\n\n  this.m_userData = def.userData;\n};\n\n/**\n * Re-setup fixture.\n * @private\n */\nFixture.prototype._reset = function() {\n  var body = this.getBody();\n  var broadPhase = body.m_world.m_broadPhase;\n  this.destroyProxies(broadPhase);\n  if (this.m_shape._reset) {\n    this.m_shape._reset();\n  }\n  var childCount = this.m_shape.getChildCount();\n  for (var i = 0; i < childCount; ++i) {\n    this.m_proxies[i] = new FixtureProxy(this, i);\n  }\n  this.createProxies(broadPhase, body.m_xf);\n  body.resetMassData();\n};\n\nFixture.prototype._serialize = function() {\n  return {\n    friction: this.m_friction,\n    restitution: this.m_restitution,\n    density: this.m_density,\n    isSensor: this.m_isSensor,\n\n    filterGroupIndex: this.m_filterGroupIndex,\n    filterCategoryBits: this.m_filterCategoryBits,\n    filterMaskBits: this.m_filterMaskBits,\n\n    shape: this.m_shape,\n  };\n};\n\nFixture._deserialize = function(data, body, restore) {\n  var shape = restore(Shape, data.shape);\n  var fixture = shape && new Fixture(body, shape, data);\n  return fixture;\n};\n\n/**\n * Get the type of the child shape. You can use this to down cast to the\n * concrete shape.\n */\nFixture.prototype.getType = function() {\n  return this.m_shape.getType();\n}\n\n/**\n * Get the child shape. You can modify the child shape, however you should not\n * change the number of vertices because this will crash some collision caching\n * mechanisms. Manipulating the shape may lead to non-physical behavior.\n */\nFixture.prototype.getShape = function() {\n  return this.m_shape;\n}\n/**\n * A sensor shape collects contact information but never generates a collision\n * response.\n */\nFixture.prototype.isSensor = function() {\n  return this.m_isSensor;\n}\n\n/**\n * Set if this fixture is a sensor.\n */\nFixture.prototype.setSensor = function(sensor) {\n  if (sensor != this.m_isSensor) {\n    this.m_body.setAwake(true);\n    this.m_isSensor = sensor;\n  }\n}\n\n/**\n * Get the contact filtering data.\n */\n// Fixture.prototype.getFilterData = function() {\n//   return this.m_filter;\n// }\n\n/**\n * Get the user data that was assigned in the fixture definition. Use this to\n * store your application specific data.\n */\nFixture.prototype.getUserData = function() {\n  return this.m_userData;\n}\n\n/**\n * Set the user data. Use this to store your application specific data.\n */\nFixture.prototype.setUserData = function(data) {\n  this.m_userData = data;\n}\n\n/**\n * Get the parent body of this fixture. This is null if the fixture is not\n * attached.\n */\nFixture.prototype.getBody = function() {\n  return this.m_body;\n}\n\n/**\n * Get the next fixture in the parent body's fixture list.\n */\nFixture.prototype.getNext = function() {\n  return this.m_next;\n}\n\n/**\n * Get the density of this fixture.\n */\nFixture.prototype.getDensity = function() {\n  return this.m_density;\n}\n\n/**\n * Set the density of this fixture. This will _not_ automatically adjust the\n * mass of the body. You must call Body.resetMassData to update the body's mass.\n */\nFixture.prototype.setDensity = function(density) {\n  _ASSERT && common.assert(Math.isFinite(density) && density >= 0.0);\n  this.m_density = density;\n}\n\n/**\n * Get the coefficient of friction, usually in the range [0,1].\n */\nFixture.prototype.getFriction = function() {\n  return this.m_friction;\n}\n\n/**\n * Set the coefficient of friction. This will not change the friction of\n * existing contacts.\n */\nFixture.prototype.setFriction = function(friction) {\n  this.m_friction = friction;\n}\n\n/**\n * Get the coefficient of restitution.\n */\nFixture.prototype.getRestitution = function() {\n  return this.m_restitution;\n}\n\n/**\n * Set the coefficient of restitution. This will not change the restitution of\n * existing contacts.\n */\nFixture.prototype.setRestitution = function(restitution) {\n  this.m_restitution = restitution;\n}\n\n/**\n * Test a point in world coordinates for containment in this fixture.\n */\nFixture.prototype.testPoint = function(p) {\n  return this.m_shape.testPoint(this.m_body.getTransform(), p);\n}\n\n/**\n * Cast a ray against this shape.\n */\nFixture.prototype.rayCast = function(output, input, childIndex) {\n  return this.m_shape.rayCast(output, input, this.m_body.getTransform(), childIndex);\n}\n\n/**\n * Get the mass data for this fixture. The mass data is based on the density and\n * the shape. The rotational inertia is about the shape's origin. This operation\n * may be expensive.\n */\nFixture.prototype.getMassData = function(massData) {\n  this.m_shape.computeMass(massData, this.m_density);\n}\n\n/**\n * Get the fixture's AABB. This AABB may be enlarge and/or stale. If you need a\n * more accurate AABB, compute it using the shape and the body transform.\n */\nFixture.prototype.getAABB = function(childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_proxyCount);\n  return this.m_proxies[childIndex].aabb;\n}\n\n/**\n * These support body activation/deactivation.\n */\nFixture.prototype.createProxies = function(broadPhase, xf) {\n  _ASSERT && common.assert(this.m_proxyCount == 0);\n\n  // Create proxies in the broad-phase.\n  this.m_proxyCount = this.m_shape.getChildCount();\n\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    var proxy = this.m_proxies[i];\n    this.m_shape.computeAABB(proxy.aabb, xf, i);\n    proxy.proxyId = broadPhase.createProxy(proxy.aabb, proxy);\n  }\n}\n\nFixture.prototype.destroyProxies = function(broadPhase) {\n  // Destroy proxies in the broad-phase.\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    var proxy = this.m_proxies[i];\n    broadPhase.destroyProxy(proxy.proxyId);\n    proxy.proxyId = null;\n  }\n\n  this.m_proxyCount = 0;\n}\n\n/**\n * Updates this fixture proxy in broad-phase (with combined AABB of current and\n * next transformation).\n */\nFixture.prototype.synchronize = function(broadPhase, xf1, xf2) {\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    var proxy = this.m_proxies[i];\n    // Compute an AABB that covers the swept shape (may miss some rotation\n    // effect).\n    var aabb1 = new AABB();\n    var aabb2 = new AABB();\n    this.m_shape.computeAABB(aabb1, xf1, proxy.childIndex);\n    this.m_shape.computeAABB(aabb2, xf2, proxy.childIndex);\n\n    proxy.aabb.combine(aabb1, aabb2);\n\n    var displacement = Vec2.sub(xf2.p, xf1.p);\n\n    broadPhase.moveProxy(proxy.proxyId, proxy.aabb, displacement);\n  }\n}\n\n/**\n * Set the contact filtering data. This will not update contacts until the next\n * time step when either parent body is active and awake. This automatically\n * calls refilter.\n */\nFixture.prototype.setFilterData = function(filter) {\n  this.m_filterGroupIndex = filter.groupIndex;\n  this.m_filterCategoryBits = filter.categoryBits;\n  this.m_filterMaskBits = filter.maskBits;\n  this.refilter();\n}\n\nFixture.prototype.getFilterGroupIndex = function() {\n  return this.m_filterGroupIndex;\n}\n\nFixture.prototype.setFilterGroupIndex = function(groupIndex) {\n  return this.m_filterGroupIndex = groupIndex;\n}\n\nFixture.prototype.getFilterCategoryBits = function() {\n  return this.m_filterCategoryBits;\n}\n\nFixture.prototype.setFilterCategoryBits = function(categoryBits) {\n  this.m_filterCategoryBits = categoryBits;\n}\n\nFixture.prototype.getFilterMaskBits = function() {\n  return this.m_filterMaskBits;\n}\n\nFixture.prototype.setFilterMaskBits = function(maskBits) {\n  this.m_filterMaskBits = maskBits;\n}\n\n/**\n * Call this if you want to establish collision that was previously disabled by\n * ContactFilter.\n */\nFixture.prototype.refilter = function() {\n  if (this.m_body == null) {\n    return;\n  }\n\n  // Flag associated contacts for filtering.\n  var edge = this.m_body.getContactList();\n  while (edge) {\n    var contact = edge.contact;\n    var fixtureA = contact.getFixtureA();\n    var fixtureB = contact.getFixtureB();\n    if (fixtureA == this || fixtureB == this) {\n      contact.flagForFiltering();\n    }\n\n    edge = edge.next;\n  }\n\n  var world = this.m_body.getWorld();\n\n  if (world == null) {\n    return;\n  }\n\n  // Touch each proxy so that new pairs may be created\n  var broadPhase = world.m_broadPhase;\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    broadPhase.touchProxy(this.m_proxies[i].proxyId);\n  }\n}\n\n/**\n * Implement this method to provide collision filtering, if you want finer\n * control over contact creation.\n * \n * Return true if contact calculations should be performed between these two\n * fixtures.\n * \n * Warning: for performance reasons this is only called when the AABBs begin to\n * overlap.\n * \n * @param {Fixture} that\n */\nFixture.prototype.shouldCollide = function(that) {\n\n  if (that.m_filterGroupIndex === this.m_filterGroupIndex && that.m_filterGroupIndex !== 0) {\n    return that.m_filterGroupIndex > 0;\n  }\n\n  var collideA = (that.m_filterMaskBits & this.m_filterCategoryBits) !== 0;\n  var collideB = (that.m_filterCategoryBits & this.m_filterMaskBits) !== 0;\n  var collide = collideA && collideB;\n  return collide;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default Body;\n\nimport common from './util/common';\nimport options from './util/options';\n\nimport Vec2 from './common/Vec2';\nimport Rot from './common/Rot';\nimport Math from './common/Math';\nimport Sweep from './common/Sweep';\nimport Transform from './common/Transform';\nimport Velocity from './common/Velocity';\nimport Position from './common/Position';\n\nimport Fixture from './Fixture';\nimport Shape from './Shape';\n\nvar staticBody = Body.STATIC = 'static';\nvar kinematicBody = Body.KINEMATIC = 'kinematic';\nvar dynamicBody = Body.DYNAMIC = 'dynamic';\n\n/**\n * @typedef {Object} BodyDef\n *\n * @prop type Body types are static, kinematic, or dynamic. Note: if a dynamic\n *       body would have zero mass, the mass is set to one.\n *\n * @prop position The world position of the body. Avoid creating bodies at the\n *       origin since this can lead to many overlapping shapes.\n *\n * @prop angle The world angle of the body in radians.\n *\n * @prop linearVelocity The linear velocity of the body's origin in world\n *       co-ordinates.\n *\n * @prop angularVelocity\n *\n * @prop linearDamping Linear damping is use to reduce the linear velocity. The\n *       damping parameter can be larger than 1.0 but the damping effect becomes\n *       sensitive to the time step when the damping parameter is large.\n *\n * @prop angularDamping Angular damping is use to reduce the angular velocity.\n *       The damping parameter can be larger than 1.0 but the damping effect\n *       becomes sensitive to the time step when the damping parameter is large.\n *\n * @prop fixedRotation Should this body be prevented from rotating? Useful for\n *       characters.\n *\n * @prop bullet Is this a fast moving body that should be prevented from\n *       tunneling through other moving bodies? Note that all bodies are\n *       prevented from tunneling through kinematic and static bodies. This\n *       setting is only considered on dynamic bodies. Warning: You should use\n *       this flag sparingly since it increases processing time.\n *\n * @prop active Does this body start out active?\n *\n * @prop awake Is this body initially awake or sleeping?\n *\n * @prop allowSleep Set this flag to false if this body should never fall\n *       asleep. Note that this increases CPU usage.\n */\nvar BodyDef = {\n  type : staticBody,\n  position : Vec2.zero(),\n  angle : 0.0,\n\n  linearVelocity : Vec2.zero(),\n  angularVelocity : 0.0,\n\n  linearDamping : 0.0,\n  angularDamping : 0.0,\n\n  fixedRotation : false,\n  bullet : false,\n  gravityScale : 1.0,\n\n  allowSleep : true,\n  awake : true,\n  active : true,\n\n  userData : null\n};\n\n/**\n * @class\n * \n * A rigid body composed of one or more fixtures.\n * \n * @param {World} world\n * @param {BodyDef} def\n */\nfunction Body(world, def) {\n\n  def = options(def, BodyDef);\n\n  _ASSERT && common.assert(Vec2.isValid(def.position));\n  _ASSERT && common.assert(Vec2.isValid(def.linearVelocity));\n  _ASSERT && common.assert(Math.isFinite(def.angle));\n  _ASSERT && common.assert(Math.isFinite(def.angularVelocity));\n  _ASSERT && common.assert(Math.isFinite(def.angularDamping) && def.angularDamping >= 0.0);\n  _ASSERT && common.assert(Math.isFinite(def.linearDamping) && def.linearDamping >= 0.0);\n\n  this.m_world = world;\n\n  this.m_awakeFlag = def.awake;\n  this.m_autoSleepFlag = def.allowSleep;\n  this.m_bulletFlag = def.bullet;\n  this.m_fixedRotationFlag = def.fixedRotation;\n  this.m_activeFlag = def.active;\n\n  this.m_islandFlag = false;\n  this.m_toiFlag = false;\n\n  this.m_userData = def.userData;\n  this.m_type = def.type;\n\n  if (this.m_type == dynamicBody) {\n    this.m_mass = 1.0;\n    this.m_invMass = 1.0;\n  } else {\n    this.m_mass = 0.0;\n    this.m_invMass = 0.0;\n  }\n\n  // Rotational inertia about the center of mass.\n  this.m_I = 0.0;\n  this.m_invI = 0.0;\n\n  // the body origin transform\n  this.m_xf = Transform.identity();\n  this.m_xf.p = Vec2.clone(def.position);\n  this.m_xf.q.setAngle(def.angle);\n\n  // the swept motion for CCD\n  this.m_sweep = new Sweep();\n  this.m_sweep.setTransform(this.m_xf);\n\n  // position and velocity correction\n  this.c_velocity = new Velocity();\n  this.c_position = new Position();\n\n  this.m_force = Vec2.zero();\n  this.m_torque = 0.0;\n\n  this.m_linearVelocity = Vec2.clone(def.linearVelocity);\n  this.m_angularVelocity = def.angularVelocity;\n\n  this.m_linearDamping = def.linearDamping;\n  this.m_angularDamping = def.angularDamping;\n  this.m_gravityScale = def.gravityScale;\n\n  this.m_sleepTime = 0.0;\n\n  this.m_jointList = null;\n  this.m_contactList = null;\n  this.m_fixtureList = null;\n\n  this.m_prev = null;\n  this.m_next = null;\n\n  this.m_destroyed = false;\n}\n\nBody.prototype._serialize = function() {\n  var fixtures = [];\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    fixtures.push(f);\n  }\n  return {\n    type: this.m_type,\n    bullet: this.m_bulletFlag,\n    position: this.m_xf.p,\n    angle: this.m_xf.q.getAngle(),\n    linearVelocity: this.m_linearVelocity,\n    angularVelocity: this.m_angularVelocity,\n    fixtures: fixtures,\n  };\n};\n\nBody._deserialize = function(data, world, restore) {\n  var body = new Body(world, data);\n\n  if (data.fixtures) {\n    for (var i = data.fixtures.length - 1; i >= 0; i--) {\n      var fixture = restore(Fixture, data.fixtures[i], body);\n      body._addFixture(fixture);\n    }\n  }\n  return body;\n};\n\nBody.prototype.isWorldLocked = function() {\n  return this.m_world && this.m_world.isLocked() ? true : false;\n};\n\nBody.prototype.getWorld = function() {\n  return this.m_world;\n};\n\nBody.prototype.getNext = function() {\n  return this.m_next;\n};\n\nBody.prototype.setUserData = function(data) {\n  this.m_userData = data;\n};\n\nBody.prototype.getUserData = function() {\n  return this.m_userData;\n};\n\nBody.prototype.getFixtureList = function() {\n  return this.m_fixtureList;\n};\n\nBody.prototype.getJointList = function() {\n  return this.m_jointList;\n};\n\n/**\n * Warning: this list changes during the time step and you may miss some\n * collisions if you don't use ContactListener.\n */\nBody.prototype.getContactList = function() {\n  return this.m_contactList;\n};\n\nBody.prototype.isStatic = function() {\n  return this.m_type == staticBody;\n};\n\nBody.prototype.isDynamic = function() {\n  return this.m_type == dynamicBody;\n};\n\nBody.prototype.isKinematic = function() {\n  return this.m_type == kinematicBody;\n};\n\n/**\n * This will alter the mass and velocity.\n */\nBody.prototype.setStatic = function() {\n  this.setType(staticBody);\n  return this;\n};\n\nBody.prototype.setDynamic = function() {\n  this.setType(dynamicBody);\n  return this;\n};\n\nBody.prototype.setKinematic = function() {\n  this.setType(kinematicBody);\n  return this;\n};\n\n/**\n * @private\n */\nBody.prototype.getType = function() {\n  return this.m_type;\n};\n\n/**\n * \n * @private\n */\nBody.prototype.setType = function(type) {\n  _ASSERT && common.assert(type === staticBody || type === kinematicBody || type === dynamicBody);\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  if (this.m_type == type) {\n    return;\n  }\n\n  this.m_type = type;\n\n  this.resetMassData();\n\n  if (this.m_type == staticBody) {\n    this.m_linearVelocity.setZero();\n    this.m_angularVelocity = 0.0;\n    this.m_sweep.forward();\n    this.synchronizeFixtures();\n  }\n\n  this.setAwake(true);\n\n  this.m_force.setZero();\n  this.m_torque = 0.0;\n\n  // Delete the attached contacts.\n  var ce = this.m_contactList;\n  while (ce) {\n    var ce0 = ce;\n    ce = ce.next;\n    this.m_world.destroyContact(ce0.contact);\n  }\n  this.m_contactList = null;\n\n  // Touch the proxies so that new contacts will be created (when appropriate)\n  var broadPhase = this.m_world.m_broadPhase;\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    var proxyCount = f.m_proxyCount;\n    for (var i = 0; i < proxyCount; ++i) {\n      broadPhase.touchProxy(f.m_proxies[i].proxyId);\n    }\n  }\n};\n\nBody.prototype.isBullet = function() {\n  return this.m_bulletFlag;\n};\n\n/**\n * Should this body be treated like a bullet for continuous collision detection?\n */\nBody.prototype.setBullet = function(flag) {\n  this.m_bulletFlag = !!flag;\n};\n\nBody.prototype.isSleepingAllowed = function() {\n  return this.m_autoSleepFlag;\n};\n\nBody.prototype.setSleepingAllowed = function(flag) {\n  this.m_autoSleepFlag = !!flag;\n  if (this.m_autoSleepFlag == false) {\n    this.setAwake(true);\n  }\n};\n\nBody.prototype.isAwake = function() {\n  return this.m_awakeFlag;\n};\n\n/**\n * Set the sleep state of the body. A sleeping body has very low CPU cost.\n * \n * @param flag Set to true to wake the body, false to put it to sleep.\n */\nBody.prototype.setAwake = function(flag) {\n  if (flag) {\n    if (this.m_awakeFlag == false) {\n      this.m_awakeFlag = true;\n      this.m_sleepTime = 0.0;\n    }\n  } else {\n    this.m_awakeFlag = false;\n    this.m_sleepTime = 0.0;\n    this.m_linearVelocity.setZero();\n    this.m_angularVelocity = 0.0;\n    this.m_force.setZero();\n    this.m_torque = 0.0;\n  }\n};\n\nBody.prototype.isActive = function() {\n  return this.m_activeFlag;\n};\n\n/**\n * Set the active state of the body. An inactive body is not simulated and\n * cannot be collided with or woken up. If you pass a flag of true, all fixtures\n * will be added to the broad-phase. If you pass a flag of false, all fixtures\n * will be removed from the broad-phase and all contacts will be destroyed.\n * Fixtures and joints are otherwise unaffected.\n * \n * You may continue to create/destroy fixtures and joints on inactive bodies.\n * Fixtures on an inactive body are implicitly inactive and will not participate\n * in collisions, ray-casts, or queries. Joints connected to an inactive body\n * are implicitly inactive. An inactive body is still owned by a World object\n * and remains\n */\nBody.prototype.setActive = function(flag) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (flag == this.m_activeFlag) {\n    return;\n  }\n\n  this.m_activeFlag = !!flag;\n\n  if (this.m_activeFlag) {\n    // Create all proxies.\n    var broadPhase = this.m_world.m_broadPhase;\n    for (var f = this.m_fixtureList; f; f = f.m_next) {\n      f.createProxies(broadPhase, this.m_xf);\n    }\n    // Contacts are created the next time step.\n\n  } else {\n    // Destroy all proxies.\n    var broadPhase = this.m_world.m_broadPhase;\n    for (var f = this.m_fixtureList; f; f = f.m_next) {\n      f.destroyProxies(broadPhase);\n    }\n\n    // Destroy the attached contacts.\n    var ce = this.m_contactList;\n    while (ce) {\n      var ce0 = ce;\n      ce = ce.next;\n      this.m_world.destroyContact(ce0.contact);\n    }\n    this.m_contactList = null;\n  }\n};\n\nBody.prototype.isFixedRotation = function() {\n  return this.m_fixedRotationFlag;\n};\n\n/**\n * Set this body to have fixed rotation. This causes the mass to be reset.\n */\nBody.prototype.setFixedRotation = function(flag) {\n  if (this.m_fixedRotationFlag == flag) {\n    return;\n  }\n\n  this.m_fixedRotationFlag = !!flag;\n\n  this.m_angularVelocity = 0.0;\n\n  this.resetMassData();\n};\n\n/**\n * Get the world transform for the body's origin.\n */\nBody.prototype.getTransform = function() {\n  return this.m_xf;\n};\n\n/**\n * Set the position of the body's origin and rotation. Manipulating a body's\n * transform may cause non-physical behavior. Note: contacts are updated on the\n * next call to World.step.\n * \n * @param position The world position of the body's local origin.\n * @param angle The world rotation in radians.\n */\nBody.prototype.setTransform = function(position, angle) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  this.m_xf.set(position, angle);\n  this.m_sweep.setTransform(this.m_xf);\n\n  var broadPhase = this.m_world.m_broadPhase;\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    f.synchronize(broadPhase, this.m_xf, this.m_xf);\n  }\n};\n\nBody.prototype.synchronizeTransform = function() {\n  this.m_sweep.getTransform(this.m_xf, 1);\n};\n\n/**\n * Update fixtures in broad-phase.\n */\nBody.prototype.synchronizeFixtures = function() {\n  var xf = Transform.identity();\n\n  this.m_sweep.getTransform(xf, 0);\n\n  var broadPhase = this.m_world.m_broadPhase;\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    f.synchronize(broadPhase, xf, this.m_xf);\n  }\n};\n\n/**\n * Used in TOI.\n */\nBody.prototype.advance = function(alpha) {\n  // Advance to the new safe time. This doesn't sync the broad-phase.\n  this.m_sweep.advance(alpha);\n  this.m_sweep.c.set(this.m_sweep.c0);\n  this.m_sweep.a = this.m_sweep.a0;\n  this.m_sweep.getTransform(this.m_xf, 1);\n};\n\n/**\n * Get the world position for the body's origin.\n */\nBody.prototype.getPosition = function() {\n  return this.m_xf.p;\n};\n\nBody.prototype.setPosition = function(p) {\n  this.setTransform(p, this.m_sweep.a);\n};\n\n/**\n * Get the current world rotation angle in radians.\n */\nBody.prototype.getAngle = function() {\n  return this.m_sweep.a;\n};\n\nBody.prototype.setAngle = function(angle) {\n  this.setTransform(this.m_xf.p, angle);\n};\n\n/**\n * Get the world position of the center of mass.\n */\nBody.prototype.getWorldCenter = function() {\n  return this.m_sweep.c;\n};\n\n/**\n * Get the local position of the center of mass.\n */\nBody.prototype.getLocalCenter = function() {\n  return this.m_sweep.localCenter;\n};\n\n/**\n * Get the linear velocity of the center of mass.\n * \n * @return the linear velocity of the center of mass.\n */\nBody.prototype.getLinearVelocity = function() {\n  return this.m_linearVelocity;\n};\n\n/**\n * Get the world linear velocity of a world point attached to this body.\n * \n * @param worldPoint A point in world coordinates.\n */\nBody.prototype.getLinearVelocityFromWorldPoint = function(worldPoint) {\n  var localCenter = Vec2.sub(worldPoint, this.m_sweep.c);\n  return Vec2.add(this.m_linearVelocity, Vec2.cross(this.m_angularVelocity,\n      localCenter));\n};\n\n/**\n * Get the world velocity of a local point.\n * \n * @param localPoint A point in local coordinates.\n */\nBody.prototype.getLinearVelocityFromLocalPoint = function(localPoint) {\n  return this.getLinearVelocityFromWorldPoint(this.getWorldPoint(localPoint));\n};\n\n/**\n * Set the linear velocity of the center of mass.\n * \n * @param v The new linear velocity of the center of mass.\n */\nBody.prototype.setLinearVelocity = function(v) {\n  if (this.m_type == staticBody) {\n    return;\n  }\n  if (Vec2.dot(v, v) > 0.0) {\n    this.setAwake(true);\n  }\n  this.m_linearVelocity.set(v);\n};\n\n/**\n * Get the angular velocity.\n * \n * @returns the angular velocity in radians/second.\n */\nBody.prototype.getAngularVelocity = function() {\n  return this.m_angularVelocity;\n};\n\n/**\n * Set the angular velocity.\n * \n * @param omega The new angular velocity in radians/second.\n */\nBody.prototype.setAngularVelocity = function(w) {\n  if (this.m_type == staticBody) {\n    return;\n  }\n  if (w * w > 0.0) {\n    this.setAwake(true);\n  }\n  this.m_angularVelocity = w;\n};\n\nBody.prototype.getLinearDamping = function() {\n  return this.m_linearDamping;\n};\n\nBody.prototype.setLinearDamping = function(linearDamping) {\n  this.m_linearDamping = linearDamping;\n};\n\nBody.prototype.getAngularDamping = function() {\n  return this.m_angularDamping;\n};\n\nBody.prototype.setAngularDamping = function(angularDamping) {\n  this.m_angularDamping = angularDamping;\n};\n\nBody.prototype.getGravityScale = function() {\n  return this.m_gravityScale;\n};\n\n/**\n * Scale the gravity applied to this body.\n */\nBody.prototype.setGravityScale = function(scale) {\n  this.m_gravityScale = scale;\n};\n\n/**\n * Get the total mass of the body.\n * \n * @returns The mass, usually in kilograms (kg).\n */\nBody.prototype.getMass = function() {\n  return this.m_mass;\n};\n\n/**\n * Get the rotational inertia of the body about the local origin.\n * \n * @return the rotational inertia, usually in kg-m^2.\n */\nBody.prototype.getInertia = function() {\n  return this.m_I + this.m_mass\n      * Vec2.dot(this.m_sweep.localCenter, this.m_sweep.localCenter);\n};\n\n/**\n * @typedef {Object} MassData This holds the mass data computed for a shape.\n * \n * @prop mass The mass of the shape, usually in kilograms.\n * @prop center The position of the shape's centroid relative to the shape's\n *       origin.\n * @prop I The rotational inertia of the shape about the local origin.\n */\nfunction MassData() {\n  this.mass = 0;\n  this.center = Vec2.zero();\n  this.I = 0;\n};\n\n/**\n * Copy the mass data of the body to data.\n */\nBody.prototype.getMassData = function(data) {\n  data.mass = this.m_mass;\n  data.I = this.getInertia();\n  data.center.set(this.m_sweep.localCenter);\n};\n\n/**\n * This resets the mass properties to the sum of the mass properties of the\n * fixtures. This normally does not need to be called unless you called\n * SetMassData to override the mass and you later want to reset the mass.\n */\nBody.prototype.resetMassData = function() {\n  // Compute mass data from shapes. Each shape has its own density.\n  this.m_mass = 0.0;\n  this.m_invMass = 0.0;\n  this.m_I = 0.0;\n  this.m_invI = 0.0;\n  this.m_sweep.localCenter.setZero();\n\n  // Static and kinematic bodies have zero mass.\n  if (this.isStatic() || this.isKinematic()) {\n    this.m_sweep.c0.set(this.m_xf.p);\n    this.m_sweep.c.set(this.m_xf.p);\n    this.m_sweep.a0 = this.m_sweep.a;\n    return;\n  }\n\n  _ASSERT && common.assert(this.isDynamic());\n\n  // Accumulate mass over all fixtures.\n  var localCenter = Vec2.zero();\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    if (f.m_density == 0.0) {\n      continue;\n    }\n\n    var massData = new MassData();\n    f.getMassData(massData);\n    this.m_mass += massData.mass;\n    localCenter.addMul(massData.mass, massData.center);\n    this.m_I += massData.I;\n  }\n\n  // Compute center of mass.\n  if (this.m_mass > 0.0) {\n    this.m_invMass = 1.0 / this.m_mass;\n    localCenter.mul(this.m_invMass);\n\n  } else {\n    // Force all dynamic bodies to have a positive mass.\n    this.m_mass = 1.0;\n    this.m_invMass = 1.0;\n  }\n\n  if (this.m_I > 0.0 && this.m_fixedRotationFlag == false) {\n    // Center the inertia about the center of mass.\n    this.m_I -= this.m_mass * Vec2.dot(localCenter, localCenter);\n    _ASSERT && common.assert(this.m_I > 0.0);\n    this.m_invI = 1.0 / this.m_I;\n\n  } else {\n    this.m_I = 0.0;\n    this.m_invI = 0.0;\n  }\n\n  // Move center of mass.\n  var oldCenter = Vec2.clone(this.m_sweep.c);\n  this.m_sweep.setLocalCenter(localCenter, this.m_xf);\n\n  // Update center of mass velocity.\n  this.m_linearVelocity.add(Vec2.cross(this.m_angularVelocity, Vec2.sub(\n      this.m_sweep.c, oldCenter)));\n};\n\n/**\n * Set the mass properties to override the mass properties of the fixtures. Note\n * that this changes the center of mass position. Note that creating or\n * destroying fixtures can also alter the mass. This function has no effect if\n * the body isn't dynamic.\n * \n * @param massData The mass properties.\n */\nBody.prototype.setMassData = function(massData) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n\n  this.m_invMass = 0.0;\n  this.m_I = 0.0;\n  this.m_invI = 0.0;\n\n  this.m_mass = massData.mass;\n  if (this.m_mass <= 0.0) {\n    this.m_mass = 1.0;\n  }\n\n  this.m_invMass = 1.0 / this.m_mass;\n\n  if (massData.I > 0.0 && this.m_fixedRotationFlag == false) {\n    this.m_I = massData.I - this.m_mass\n        * Vec2.dot(massData.center, massData.center);\n    _ASSERT && common.assert(this.m_I > 0.0);\n    this.m_invI = 1.0 / this.m_I;\n  }\n\n  // Move center of mass.\n  var oldCenter = Vec2.clone(this.m_sweep.c);\n  this.m_sweep.setLocalCenter(massData.center, this.m_xf);\n\n  // Update center of mass velocity.\n  this.m_linearVelocity.add(Vec2.cross(this.m_angularVelocity, Vec2.sub(\n      this.m_sweep.c, oldCenter)));\n};\n\n/**\n * Apply a force at a world point. If the force is not applied at the center of\n * mass, it will generate a torque and affect the angular velocity. This wakes\n * up the body.\n * \n * @param force The world force vector, usually in Newtons (N).\n * @param point The world position of the point of application.\n * @param wake Also wake up the body\n */\nBody.prototype.applyForce = function(force, point, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate a force if the body is sleeping.\n  if (this.m_awakeFlag) {\n    this.m_force.add(force);\n    this.m_torque += Vec2.cross(Vec2.sub(point, this.m_sweep.c), force);\n  }\n};\n\n/**\n * Apply a force to the center of mass. This wakes up the body.\n * \n * @param force The world force vector, usually in Newtons (N).\n * @param wake Also wake up the body\n */\nBody.prototype.applyForceToCenter = function(force, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate a force if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_force.add(force);\n  }\n};\n\n/**\n * Apply a torque. This affects the angular velocity without affecting the\n * linear velocity of the center of mass. This wakes up the body.\n * \n * @param torque About the z-axis (out of the screen), usually in N-m.\n * @param wake Also wake up the body\n */\nBody.prototype.applyTorque = function(torque, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate a force if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_torque += torque;\n  }\n};\n\n/**\n * Apply an impulse at a point. This immediately modifies the velocity. It also\n * modifies the angular velocity if the point of application is not at the\n * center of mass. This wakes up the body.\n * \n * @param impulse The world impulse vector, usually in N-seconds or kg-m/s.\n * @param point The world position of the point of application.\n * @param wake Also wake up the body\n */\nBody.prototype.applyLinearImpulse = function(impulse, point, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n\n  // Don't accumulate velocity if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_linearVelocity.addMul(this.m_invMass, impulse);\n    this.m_angularVelocity += this.m_invI * Vec2.cross(Vec2.sub(point, this.m_sweep.c), impulse);\n  }\n};\n\n/**\n * Apply an angular impulse.\n * \n * @param impulse The angular impulse in units of kg*m*m/s\n * @param wake Also wake up the body\n */\nBody.prototype.applyAngularImpulse = function(impulse, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate velocity if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_angularVelocity += this.m_invI * impulse;\n  }\n};\n\n/**\n * This is used to prevent connected bodies (by joints) from colliding,\n * depending on the joint's collideConnected flag.\n */\nBody.prototype.shouldCollide = function(that) {\n  // At least one body should be dynamic.\n  if (this.m_type != dynamicBody && that.m_type != dynamicBody) {\n    return false;\n  }\n  // Does a joint prevent collision?\n  for (var jn = this.m_jointList; jn; jn = jn.next) {\n    if (jn.other == that) {\n      if (jn.joint.m_collideConnected == false) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n\n/**\n * @internal Used for deserialize.\n */\nBody.prototype._addFixture = function(fixture) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return null;\n  }\n\n  if (this.m_activeFlag) {\n    var broadPhase = this.m_world.m_broadPhase;\n    fixture.createProxies(broadPhase, this.m_xf);\n  }\n\n  fixture.m_next = this.m_fixtureList;\n  this.m_fixtureList = fixture;\n\n  // Adjust mass properties if needed.\n  if (fixture.m_density > 0.0) {\n    this.resetMassData();\n  }\n\n  // Let the world know we have a new fixture. This will cause new contacts\n  // to be created at the beginning of the next time step.\n  this.m_world.m_newFixture = true;\n\n  return fixture\n};\n\n/**\n * Creates a fixture and attach it to this body.\n * \n * If the density is non-zero, this function automatically updates the mass of\n * the body.\n * \n * Contacts are not created until the next time step.\n * \n * Warning: This function is locked during callbacks.\n\n * @param {Shape|FixtureDef} shape Shape or fixture definition.\n * @param {FixtureDef|number} fixdef Fixture definition or just density.\n */\nBody.prototype.createFixture = function(shape, fixdef) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return null;\n  }\n\n  var fixture = new Fixture(this, shape, fixdef);\n  this._addFixture(fixture);\n  return fixture\n};\n\n/**\n * Destroy a fixture. This removes the fixture from the broad-phase and destroys\n * all contacts associated with this fixture. This will automatically adjust the\n * mass of the body if the body is dynamic and the fixture has positive density.\n * All fixtures attached to a body are implicitly destroyed when the body is\n * destroyed.\n * \n * Warning: This function is locked during callbacks.\n * \n * @param fixture The fixture to be removed.\n */\nBody.prototype.destroyFixture = function(fixture) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  _ASSERT && common.assert(fixture.m_body == this);\n\n  // Remove the fixture from this body's singly linked list.\n  var found = false;\n  if (this.m_fixtureList === fixture) {\n    this.m_fixtureList = fixture.m_next;\n    found = true;\n\n  } else {\n    var node = this.m_fixtureList;\n    while (node != null) {\n      if (node.m_next === fixture) {\n        node.m_next = fixture.m_next;\n        found = true;\n        break;\n      }\n      node = node.m_next;\n    }\n  }\n\n  // You tried to remove a shape that is not attached to this body.\n  _ASSERT && common.assert(found);\n\n  // Destroy any contacts associated with the fixture.\n  var edge = this.m_contactList;\n  while (edge) {\n    var c = edge.contact;\n    edge = edge.next;\n\n    var fixtureA = c.getFixtureA();\n    var fixtureB = c.getFixtureB();\n\n    if (fixture == fixtureA || fixture == fixtureB) {\n      // This destroys the contact and removes it from\n      // this body's contact list.\n      this.m_world.destroyContact(c);\n    }\n  }\n\n  if (this.m_activeFlag) {\n    var broadPhase = this.m_world.m_broadPhase;\n    fixture.destroyProxies(broadPhase);\n  }\n\n  fixture.m_body = null;\n  fixture.m_next = null;\n\n  this.m_world.publish('remove-fixture', fixture);\n\n  // Reset the mass data.\n  this.resetMassData();\n};\n\n/**\n * Get the corresponding world point of a local point.\n */\nBody.prototype.getWorldPoint = function(localPoint) {\n  return Transform.mulVec2(this.m_xf, localPoint);\n};\n\n/**\n * Get the corresponding world vector of a local vector.\n */\nBody.prototype.getWorldVector = function(localVector) {\n  return Rot.mulVec2(this.m_xf.q, localVector);\n};\n\n/**\n * Gets the corresponding local point of a world point.\n */\nBody.prototype.getLocalPoint = function(worldPoint) {\n  return Transform.mulTVec2(this.m_xf, worldPoint);\n};\n\n/**\n * \n * Gets the corresponding local vector of a world vector.\n */\nBody.prototype.getLocalVector = function(worldVector) {\n  return Rot.mulTVec2(this.m_xf.q, worldVector);\n};\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default Mat22;\n\nimport common from '../util/common';\nimport Math from './Math';\nimport Vec2 from './Vec2';\n\n/**\n * A 2-by-2 matrix. Stored in column-major order.\n */\nfunction Mat22(a, b, c, d) {\n  if (typeof a === 'object' && a !== null) {\n    this.ex = Vec2.clone(a);\n    this.ey = Vec2.clone(b);\n  } else if (typeof a === 'number') {\n    this.ex = Vec2.neo(a, c);\n    this.ey = Vec2.neo(b, d)\n  } else {\n    this.ex = Vec2.zero();\n    this.ey = Vec2.zero()\n  }\n};\n\nMat22.prototype.toString = function() {\n  return JSON.stringify(this);\n};\n\nMat22.isValid = function(o) {\n  return o && Vec2.isValid(o.ex) && Vec2.isValid(o.ey);\n};\n\nMat22.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Mat22.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Mat22!');\n  }\n};\n\nMat22.prototype.set = function(a, b, c, d) {\n  if (typeof a === 'number' && typeof b === 'number' && typeof c === 'number'\n      && typeof d === 'number') {\n    this.ex.set(a, c);\n    this.ey.set(b, d);\n\n  } else if (typeof a === 'object' && typeof b === 'object') {\n    this.ex.set(a);\n    this.ey.set(b);\n\n  } else if (typeof a === 'object') {\n    _ASSERT && Mat22.assert(a);\n    this.ex.set(a.ex);\n    this.ey.set(a.ey);\n\n  } else {\n    _ASSERT && common.assert(false);\n  }\n}\n\nMat22.prototype.setIdentity = function() {\n  this.ex.x = 1.0;\n  this.ey.x = 0.0;\n  this.ex.y = 0.0;\n  this.ey.y = 1.0;\n}\n\nMat22.prototype.setZero = function() {\n  this.ex.x = 0.0;\n  this.ey.x = 0.0;\n  this.ex.y = 0.0;\n  this.ey.y = 0.0;\n}\n\nMat22.prototype.getInverse = function() {\n  var a = this.ex.x;\n  var b = this.ey.x;\n  var c = this.ex.y;\n  var d = this.ey.y;\n  var det = a * d - b * c;\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var imx = new Mat22();\n  imx.ex.x = det * d;\n  imx.ey.x = -det * b;\n  imx.ex.y = -det * c;\n  imx.ey.y = det * a;\n  return imx;\n}\n\n/**\n * Solve A * x = b, where b is a column vector. This is more efficient than\n * computing the inverse in one-shot cases.\n */\nMat22.prototype.solve = function(v) {\n  _ASSERT && Vec2.assert(v);\n  var a = this.ex.x;\n  var b = this.ey.x;\n  var c = this.ex.y;\n  var d = this.ey.y;\n  var det = a * d - b * c;\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var w = Vec2.zero();\n  w.x = det * (d * v.x - b * v.y);\n  w.y = det * (a * v.y - c * v.x);\n  return w;\n}\n\n/**\n * Multiply a matrix times a vector. If a rotation matrix is provided, then this\n * transforms the vector from one frame to another.\n */\nMat22.mul = function(mx, v) {\n  if (v && 'x' in v && 'y' in v) {\n    _ASSERT && Vec2.assert(v);\n    var x = mx.ex.x * v.x + mx.ey.x * v.y;\n    var y = mx.ex.y * v.x + mx.ey.y * v.y;\n    return Vec2.neo(x, y);\n\n  } else if (v && 'ex' in v && 'ey' in v) { // Mat22\n    _ASSERT && Mat22.assert(v);\n    // return new Mat22(Vec2.mul(mx, v.ex), Vec2.mul(mx, v.ey));\n    var a = mx.ex.x * v.ex.x + mx.ey.x * v.ex.y;\n    var b = mx.ex.x * v.ey.x + mx.ey.x * v.ey.y;\n    var c = mx.ex.y * v.ex.x + mx.ey.y * v.ex.y;\n    var d = mx.ex.y * v.ey.x + mx.ey.y * v.ey.y;\n    return new Mat22(a, b, c, d);\n  }\n\n  _ASSERT && common.assert(false);\n}\n\nMat22.mulVec2 = function(mx, v) {\n  _ASSERT && Vec2.assert(v);\n  var x = mx.ex.x * v.x + mx.ey.x * v.y;\n  var y = mx.ex.y * v.x + mx.ey.y * v.y;\n  return Vec2.neo(x, y);\n}\n\nMat22.mulMat22 = function(mx, v) {\n  _ASSERT && Mat22.assert(v);\n  // return new Mat22(Vec2.mul(mx, v.ex), Vec2.mul(mx, v.ey));\n  var a = mx.ex.x * v.ex.x + mx.ey.x * v.ex.y;\n  var b = mx.ex.x * v.ey.x + mx.ey.x * v.ey.y;\n  var c = mx.ex.y * v.ex.x + mx.ey.y * v.ex.y;\n  var d = mx.ex.y * v.ey.x + mx.ey.y * v.ey.y;\n  return new Mat22(a, b, c, d);\n  _ASSERT && common.assert(false);\n}\n\n/**\n * Multiply a matrix transpose times a vector. If a rotation matrix is provided,\n * then this transforms the vector from one frame to another (inverse\n * transform).\n */\nMat22.mulT = function(mx, v) {\n  if (v && 'x' in v && 'y' in v) { // Vec2\n    _ASSERT && Vec2.assert(v);\n    return Vec2.neo(Vec2.dot(v, mx.ex), Vec2.dot(v, mx.ey));\n\n  } else if (v && 'ex' in v && 'ey' in v) { // Mat22\n    _ASSERT && Mat22.assert(v);\n    var c1 = Vec2.neo(Vec2.dot(mx.ex, v.ex), Vec2.dot(mx.ey, v.ex));\n    var c2 = Vec2.neo(Vec2.dot(mx.ex, v.ey), Vec2.dot(mx.ey, v.ey));\n    return new Mat22(c1, c2);\n  }\n\n  _ASSERT && common.assert(false);\n}\n\nMat22.mulTVec2 = function(mx, v) {\n  _ASSERT && Mat22.assert(mx);\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(Vec2.dot(v, mx.ex), Vec2.dot(v, mx.ey));\n}\n\nMat22.mulTMat22 = function(mx, v) {\n  _ASSERT && Mat22.assert(mx);\n  _ASSERT && Mat22.assert(v);\n  var c1 = Vec2.neo(Vec2.dot(mx.ex, v.ex), Vec2.dot(mx.ey, v.ex));\n  var c2 = Vec2.neo(Vec2.dot(mx.ex, v.ey), Vec2.dot(mx.ey, v.ey));\n  return new Mat22(c1, c2);\n}\n\nMat22.abs = function(mx) {\n  _ASSERT && Mat22.assert(mx);\n  return new Mat22(Vec2.abs(mx.ex), Vec2.abs(mx.ey));\n}\n\nMat22.add = function(mx1, mx2) {\n  _ASSERT && Mat22.assert(mx1);\n  _ASSERT && Mat22.assert(mx2);\n  return new Mat22(Vec2.add(mx1.ex, mx2.ex), Vec2.add(mx1.ey, mx2.ey));\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nimport common from './util/common';\n\nimport Vec2 from './common/Vec2';\nimport Transform from './common/Transform';\nimport Math from './common/Math';\nimport Rot from './common/Rot';\n\nexport default Manifold;\n\nManifold.clipSegmentToLine = clipSegmentToLine;\nManifold.ClipVertex = ClipVertex;\nManifold.getPointStates = getPointStates;\nManifold.PointState = PointState;\n\n// Manifold Type\nManifold.e_circles = 0;\nManifold.e_faceA = 1;\nManifold.e_faceB = 2;\n\n// ContactFeature Type\nManifold.e_vertex = 0;\nManifold.e_face = 1;\n\n/**\n * A manifold for two touching convex shapes. Manifolds are created in `evaluate`\n * method of Contact subclasses.\n * \n * Supported manifold types are e_faceA or e_faceB for clip point versus plane\n * with radius and e_circles point versus point with radius.\n * \n * We store contacts in this way so that position correction can account for\n * movement, which is critical for continuous physics. All contact scenarios\n * must be expressed in one of these types. This structure is stored across time\n * steps, so we keep it small.\n * \n * @prop type e_circle, e_faceA, e_faceB\n * @prop localPoint Usage depends on manifold type:<br>\n *       e_circles: the local center of circleA <br>\n *       e_faceA: the center of faceA <br>\n *       e_faceB: the center of faceB\n * @prop localNormal Usage depends on manifold type:<br>\n *       e_circles: not used <br>\n *       e_faceA: the normal on polygonA <br>\n *       e_faceB: the normal on polygonB\n * @prop points The points of contact {ManifoldPoint[]}\n * @prop pointCount The number of manifold points\n */\nfunction Manifold() {\n  this.type;\n  this.localNormal = Vec2.zero();\n  this.localPoint = Vec2.zero();\n  this.points = [ new ManifoldPoint(), new ManifoldPoint() ];\n  this.pointCount = 0;\n};\n\n/**\n * A manifold point is a contact point belonging to a contact manifold. It holds\n * details related to the geometry and dynamics of the contact points.\n * \n * This structure is stored across time steps, so we keep it small.\n * \n * Note: impulses are used for internal caching and may not provide reliable\n * contact forces, especially for high speed collisions.\n * \n * @prop {Vec2} localPoint Usage depends on manifold type:<br>\n *       e_circles: the local center of circleB<br>\n *       e_faceA: the local center of cirlceB or the clip point of polygonB<br>\n *       e_faceB: the clip point of polygonA.\n * @prop normalImpulse The non-penetration impulse\n * @prop tangentImpulse The friction impulse\n * @prop {ContactID} id Uniquely identifies a contact point between two shapes\n *       to facilatate warm starting\n */\nfunction ManifoldPoint() {\n  this.localPoint = Vec2.zero();\n  this.normalImpulse = 0;\n  this.tangentImpulse = 0;\n  this.id = new ContactID();\n};\n\n/**\n * Contact ids to facilitate warm starting.\n * \n * @prop {ContactFeature} cf\n * @prop key Used to quickly compare contact ids.\n * \n */\nfunction ContactID() {\n  this.cf = new ContactFeature();\n};\n\nObject.defineProperty(ContactID.prototype, 'key', {\n  get: function() {\n    return this.cf.indexA + this.cf.indexB * 4 + this.cf.typeA * 16 + this.cf.typeB * 64;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nContactID.prototype.set = function(o) {\n  // this.key = o.key;\n  this.cf.set(o.cf);\n};\n\n/**\n * The features that intersect to form the contact point.\n * \n * @prop indexA Feature index on shapeA\n * @prop indexB Feature index on shapeB\n * @prop typeA The feature type on shapeA\n * @prop typeB The feature type on shapeB\n */\nfunction ContactFeature() {\n  this.indexA;\n  this.indexB;\n  this.typeA;\n  this.typeB;\n};\n\nContactFeature.prototype.set = function(o) {\n  this.indexA = o.indexA;\n  this.indexB = o.indexB;\n  this.typeA = o.typeA;\n  this.typeB = o.typeB;\n};\n\n/**\n * This is used to compute the current state of a contact manifold.\n * \n * @prop normal World vector pointing from A to B\n * @prop points World contact point (point of intersection)\n * @prop separations A negative value indicates overlap, in meters\n */\nfunction WorldManifold() {\n  this.normal;\n  this.points = []; // [maxManifoldPoints]\n  this.separations = []; // float[maxManifoldPoints]\n};\n\n/**\n * Evaluate the manifold with supplied transforms. This assumes modest motion\n * from the original state. This does not change the point count, impulses, etc.\n * The radii must come from the shapes that generated the manifold.\n * \n * @param {WorldManifold} [wm]\n */\nManifold.prototype.getWorldManifold = function(wm, xfA, radiusA, xfB, radiusB) {\n  if (this.pointCount == 0) {\n    return;\n  }\n\n  wm = wm || new WorldManifold();\n\n  var normal = wm.normal;\n  var points = wm.points;\n  var separations = wm.separations;\n\n  // TODO: improve\n  switch (this.type) {\n  case Manifold.e_circles:\n    normal = Vec2.neo(1.0, 0.0);\n    var pointA = Transform.mulVec2(xfA, this.localPoint);\n    var pointB = Transform.mulVec2(xfB, this.points[0].localPoint);\n    var dist = Vec2.sub(pointB, pointA);\n    if (Vec2.lengthSquared(dist) > Math.EPSILON * Math.EPSILON) {\n      normal.set(dist);\n      normal.normalize();\n    }\n    var cA = pointA.clone().addMul(radiusA, normal);\n    var cB = pointB.clone().addMul(-radiusB, normal);\n    points[0] = Vec2.mid(cA, cB);\n    separations[0] = Vec2.dot(Vec2.sub(cB, cA), normal);\n    points.length = 1;\n    separations.length = 1;\n    break;\n\n  case Manifold.e_faceA:\n    normal = Rot.mulVec2(xfA.q, this.localNormal);\n    var planePoint = Transform.mulVec2(xfA, this.localPoint);\n\n    for (var i = 0; i < this.pointCount; ++i) {\n      var clipPoint = Transform.mulVec2(xfB, this.points[i].localPoint);\n      var cA = Vec2.clone(clipPoint).addMul(radiusA - Vec2.dot(Vec2.sub(clipPoint, planePoint), normal), normal);\n      var cB = Vec2.clone(clipPoint).subMul(radiusB, normal);\n      points[i] = Vec2.mid(cA, cB);\n      separations[i] = Vec2.dot(Vec2.sub(cB, cA), normal);\n    }\n    points.length = this.pointCount;\n    separations.length = this.pointCount;\n    break;\n\n  case Manifold.e_faceB:\n    normal = Rot.mulVec2(xfB.q, this.localNormal);\n    var planePoint = Transform.mulVec2(xfB, this.localPoint);\n\n    for (var i = 0; i < this.pointCount; ++i) {\n      var clipPoint = Transform.mulVec2(xfA, this.points[i].localPoint);\n      var cB = Vec2.combine(1, clipPoint, radiusB - Vec2.dot(Vec2.sub(clipPoint, planePoint), normal), normal);\n      var cA = Vec2.combine(1, clipPoint, -radiusA, normal);\n      points[i] = Vec2.mid(cA, cB);\n      separations[i] = Vec2.dot(Vec2.sub(cA, cB), normal);\n    }\n    points.length = this.pointCount;\n    separations.length = this.pointCount;\n    // Ensure normal points from A to B.\n    normal.mul(-1);\n    break;\n  }\n\n  wm.normal = normal;\n  wm.points = points;\n  wm.separations = separations;\n  return wm;\n}\n\n/**\n * This is used for determining the state of contact points.\n * \n * @prop {0} nullState Point does not exist\n * @prop {1} addState Point was added in the update\n * @prop {2} persistState Point persisted across the update\n * @prop {3} removeState Point was removed in the update\n */\nvar PointState = {\n  // TODO: use constants\n  nullState : 0,\n  addState : 1,\n  persistState : 2,\n  removeState : 3\n};\n\n/**\n * Compute the point states given two manifolds. The states pertain to the\n * transition from manifold1 to manifold2. So state1 is either persist or remove\n * while state2 is either add or persist.\n * \n * @param {PointState[Settings.maxManifoldPoints]} state1\n * @param {PointState[Settings.maxManifoldPoints]} state2\n */\nfunction getPointStates(state1, state2, manifold1, manifold2) {\n  // for (var i = 0; i < Settings.maxManifoldPoints; ++i) {\n  // state1[i] = PointState.nullState;\n  // state2[i] = PointState.nullState;\n  // }\n\n  // Detect persists and removes.\n  for (var i = 0; i < manifold1.pointCount; ++i) {\n    var id = manifold1.points[i].id;// ContactID\n\n    state1[i] = PointState.removeState;\n\n    for (var j = 0; j < manifold2.pointCount; ++j) {\n      if (manifold2.points[j].id.key == id.key) {\n        state1[i] = PointState.persistState;\n        break;\n      }\n    }\n  }\n\n  // Detect persists and adds.\n  for (var i = 0; i < manifold2.pointCount; ++i) {\n    var id = manifold2.points[i].id;// ContactID\n\n    state2[i] = PointState.addState;\n\n    for (var j = 0; j < manifold1.pointCount; ++j) {\n      if (manifold1.points[j].id.key == id.key) {\n        state2[i] = PointState.persistState;\n        break;\n      }\n    }\n  }\n}\n\n/**\n * Used for computing contact manifolds.\n * \n * @prop {Vec2} v\n * @prop {ContactID} id\n */\nfunction ClipVertex() {\n  this.v = Vec2.zero();\n  this.id = new ContactID();\n};\n\nClipVertex.prototype.set = function(o) {\n  this.v.set(o.v);\n  this.id.set(o.id);\n};\n\n/**\n * Clipping for contact manifolds. Sutherland-Hodgman clipping.\n * \n * @param {ClipVertex[2]} vOut\n * @param {ClipVertex[2]} vIn\n */\nfunction clipSegmentToLine(vOut, vIn, normal, offset, vertexIndexA) {\n  // Start with no output points\n  var numOut = 0;\n\n  // Calculate the distance of end points to the line\n  var distance0 = Vec2.dot(normal, vIn[0].v) - offset;\n  var distance1 = Vec2.dot(normal, vIn[1].v) - offset;\n\n  // If the points are behind the plane\n  if (distance0 <= 0.0)\n    vOut[numOut++].set(vIn[0]);\n  if (distance1 <= 0.0)\n    vOut[numOut++].set(vIn[1]);\n\n  // If the points are on different sides of the plane\n  if (distance0 * distance1 < 0.0) {\n    // Find intersection point of edge and plane\n    var interp = distance0 / (distance0 - distance1);\n    vOut[numOut].v.setCombine(1 - interp, vIn[0].v, interp, vIn[1].v);\n\n    // VertexA is hitting edgeB.\n    vOut[numOut].id.cf.indexA = vertexIndexA;\n    vOut[numOut].id.cf.indexB = vIn[0].id.cf.indexB;\n    vOut[numOut].id.cf.typeA = Manifold.e_vertex;\n    vOut[numOut].id.cf.typeB = Manifold.e_face;\n    ++numOut;\n  }\n\n  return numOut;\n}\n","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default {\n  toString: function(newline) {\n    newline = typeof newline === 'string' ? newline : '\\n';\n    var string = \"\";\n    for (var name in this) {\n      if (typeof this[name] !== 'function' && typeof this[name] !== 'object') {\n        string += name + ': ' + this[name] + newline;\n      }\n    }\n    return string;\n  }\n};\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default Vec3;\n\nimport common from '../util/common';\nimport Math from './Math';\n\nfunction Vec3(x, y, z) {\n  if (!(this instanceof Vec3)) {\n    return new Vec3(x, y, z);\n  }\n  if (typeof x === 'undefined') {\n    this.x = 0, this.y = 0, this.z = 0;\n  } else if (typeof x === 'object') {\n    this.x = x.x, this.y = x.y, this.z = x.z;\n  } else {\n    this.x = x, this.y = y, this.z = z;\n  }\n  _ASSERT && Vec3.assert(this);\n};\n\nVec3.prototype._serialize = function() {\n  return {\n    x: this.x,\n    y: this.y,\n    z: this.z\n  };\n};\n\nVec3._deserialize = function(data) {\n  var obj = Object.create(Vec3.prototype);\n  obj.x = data.x;\n  obj.y = data.y;\n  obj.z = data.z;\n  return obj;\n};\n\nVec3.neo = function(x, y, z) {\n  var obj = Object.create(Vec3.prototype);\n  obj.x = x;\n  obj.y = y;\n  obj.z = z;\n  return obj;\n};\n\nVec3.clone = function(v) {\n  _ASSERT && Vec3.assert(v);\n  return Vec3.neo(v.x, v.y, v.z);\n};\n\nVec3.prototype.toString = function() {\n  return JSON.stringify(this);\n};\n\n/**\n * Does this vector contain finite coordinates?\n */\nVec3.isValid = function(v) {\n  return v && Math.isFinite(v.x) && Math.isFinite(v.y) && Math.isFinite(v.z);\n}\n\nVec3.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Vec3.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Vec3!');\n  }\n}\n\nVec3.prototype.setZero = function() {\n  this.x = 0.0;\n  this.y = 0.0;\n  this.z = 0.0;\n  return this;\n}\n\nVec3.prototype.set = function(x, y, z) {\n  this.x = x;\n  this.y = y;\n  this.z = z;\n  return this;\n}\n\nVec3.prototype.add = function(w) {\n  this.x += w.x;\n  this.y += w.y;\n  this.z += w.z;\n  return this;\n}\n\nVec3.prototype.sub = function(w) {\n  this.x -= w.x;\n  this.y -= w.y;\n  this.z -= w.z;\n  return this;\n}\n\nVec3.prototype.mul = function(m) {\n  this.x *= m;\n  this.y *= m;\n  this.z *= m;\n  return this;\n}\n\nVec3.areEqual = function(v, w) {\n  _ASSERT && Vec3.assert(v);\n  _ASSERT && Vec3.assert(w);\n  return v == w ||\n    typeof v === 'object' && v !== null &&\n    typeof w === 'object' && w !== null &&\n    v.x === w.x && v.y === w.y && v.z === w.z;\n}\n\n/**\n * Perform the dot product on two vectors.\n */\nVec3.dot = function(v, w) {\n  return v.x * w.x + v.y * w.y + v.z * w.z;\n}\n\n/**\n * Perform the cross product on two vectors. In 2D this produces a scalar.\n */\nVec3.cross = function(v, w) {\n  return new Vec3(\n    v.y * w.z - v.z * w.y,\n    v.z * w.x - v.x * w.z,\n    v.x * w.y - v.y * w.x\n  );\n}\n\nVec3.add = function(v, w) {\n  return new Vec3(v.x + w.x, v.y + w.y, v.z + w.z);\n}\n\nVec3.sub = function(v, w) {\n  return new Vec3(v.x - w.x, v.y - w.y, v.z - w.z);\n}\n\nVec3.mul = function(v, m) {\n  return new Vec3(m * v.x, m * v.y, m * v.z);\n}\n\nVec3.prototype.neg = function() {\n  this.x = -this.x;\n  this.y = -this.y;\n  this.z = -this.z;\n  return this;\n}\n\nVec3.neg = function(v) {\n  return new Vec3(-v.x, -v.y, -v.z);\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default Mat33;\n\nimport common from '../util/common';\nimport Math from './Math';\nimport Vec2 from './Vec2';\nimport Vec3 from './Vec3';\n\n/**\n * A 3-by-3 matrix. Stored in column-major order.\n */\nfunction Mat33(a, b, c) {\n  if (typeof a === 'object' && a !== null) {\n    this.ex = Vec3.clone(a);\n    this.ey = Vec3.clone(b);\n    this.ez = Vec3.clone(c);\n  } else {\n    this.ex = Vec3();\n    this.ey = Vec3();\n    this.ez = Vec3();\n  }\n};\n\nMat33.prototype.toString = function() {\n  return JSON.stringify(this);\n};\n\nMat33.isValid = function(o) {\n  return o && Vec3.isValid(o.ex) && Vec3.isValid(o.ey) && Vec3.isValid(o.ez);\n};\n\nMat33.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Mat33.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Mat33!');\n  }\n};\n\n/**\n * Set this matrix to all zeros.\n */\nMat33.prototype.setZero = function() {\n  this.ex.setZero();\n  this.ey.setZero();\n  this.ez.setZero();\n  return this;\n}\n\n/**\n * Solve A * x = b, where b is a column vector. This is more efficient than\n * computing the inverse in one-shot cases.\n * \n * @param {Vec3} v\n * @returns {Vec3}\n */\nMat33.prototype.solve33 = function(v) {\n  var det = Vec3.dot(this.ex, Vec3.cross(this.ey, this.ez));\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var r = new Vec3();\n  r.x = det * Vec3.dot(v, Vec3.cross(this.ey, this.ez));\n  r.y = det * Vec3.dot(this.ex, Vec3.cross(v, this.ez));\n  r.z = det * Vec3.dot(this.ex, Vec3.cross(this.ey, v));\n  return r;\n}\n\n/**\n * Solve A * x = b, where b is a column vector. This is more efficient than\n * computing the inverse in one-shot cases. Solve only the upper 2-by-2 matrix\n * equation.\n * \n * @param {Vec2} v\n * \n * @returns {Vec2}\n */\nMat33.prototype.solve22 = function(v) {\n  var a11 = this.ex.x;\n  var a12 = this.ey.x;\n  var a21 = this.ex.y;\n  var a22 = this.ey.y;\n  var det = a11 * a22 - a12 * a21;\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var r = Vec2.zero();\n  r.x = det * (a22 * v.x - a12 * v.y);\n  r.y = det * (a11 * v.y - a21 * v.x);\n  return r;\n}\n\n/**\n * Get the inverse of this matrix as a 2-by-2. Returns the zero matrix if\n * singular.\n * \n * @param {Mat33} M\n */\nMat33.prototype.getInverse22 = function(M) {\n  var a = this.ex.x;\n  var b = this.ey.x;\n  var c = this.ex.y;\n  var d = this.ey.y;\n  var det = a * d - b * c;\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  M.ex.x = det * d;\n  M.ey.x = -det * b;\n  M.ex.z = 0.0;\n  M.ex.y = -det * c;\n  M.ey.y = det * a;\n  M.ey.z = 0.0;\n  M.ez.x = 0.0;\n  M.ez.y = 0.0;\n  M.ez.z = 0.0;\n}\n\n/**\n * Get the symmetric inverse of this matrix as a 3-by-3. Returns the zero matrix\n * if singular.\n * \n * @param {Mat33} M\n */\nMat33.prototype.getSymInverse33 = function(M) {\n  var det = Vec3.dot(this.ex, Vec3.cross(this.ey, this.ez));\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var a11 = this.ex.x;\n  var a12 = this.ey.x;\n  var a13 = this.ez.x;\n  var a22 = this.ey.y;\n  var a23 = this.ez.y;\n  var a33 = this.ez.z;\n\n  M.ex.x = det * (a22 * a33 - a23 * a23);\n  M.ex.y = det * (a13 * a23 - a12 * a33);\n  M.ex.z = det * (a12 * a23 - a13 * a22);\n\n  M.ey.x = M.ex.y;\n  M.ey.y = det * (a11 * a33 - a13 * a13);\n  M.ey.z = det * (a13 * a12 - a11 * a23);\n\n  M.ez.x = M.ex.z;\n  M.ez.y = M.ey.z;\n  M.ez.z = det * (a11 * a22 - a12 * a12);\n}\n\n/**\n * Multiply a matrix times a vector.\n * \n * @param {Mat33} a\n * @param {Vec3|Vec2} b\n * \n * @returns {Vec3|Vec2}\n */\nMat33.mul = function(a, b) {\n  _ASSERT && Mat33.assert(a);\n  if (b && 'z' in b && 'y' in b && 'x' in b) {\n    _ASSERT && Vec3.assert(b);\n    var x = a.ex.x * b.x + a.ey.x * b.y + a.ez.x * b.z;\n    var y = a.ex.y * b.x + a.ey.y * b.y + a.ez.y * b.z;\n    var z = a.ex.z * b.x + a.ey.z * b.y + a.ez.z * b.z;\n    return new Vec3(x, y, z);\n\n  } else if (b && 'y' in b && 'x' in b) {\n    _ASSERT && Vec2.assert(b);\n    var x = a.ex.x * b.x + a.ey.x * b.y;\n    var y = a.ex.y * b.x + a.ey.y * b.y;\n    return Vec2.neo(x, y);\n  }\n\n  _ASSERT && common.assert(false);\n}\n\nMat33.mulVec3 = function(a, b) {\n  _ASSERT && Mat33.assert(a);\n  _ASSERT && Vec3.assert(b);\n  var x = a.ex.x * b.x + a.ey.x * b.y + a.ez.x * b.z;\n  var y = a.ex.y * b.x + a.ey.y * b.y + a.ez.y * b.z;\n  var z = a.ex.z * b.x + a.ey.z * b.y + a.ez.z * b.z;\n  return new Vec3(x, y, z);\n}\n\nMat33.mulVec2 = function(a, b) {\n  _ASSERT && Mat33.assert(a);\n  _ASSERT && Vec2.assert(b);\n  var x = a.ex.x * b.x + a.ey.x * b.y;\n  var y = a.ex.y * b.x + a.ey.y * b.y;\n  return Vec2.neo(x, y);\n}\n\nMat33.add = function(a, b) {\n  _ASSERT && Mat33.assert(a);\n  _ASSERT && Mat33.assert(b);\n  return new Mat33(\n    Vec3.add(a.ex, b.ex),\n    Vec3.add(a.ey, b.ey),\n    Vec3.add(a.ez, b.ez)\n  );\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default Distance;\n\nDistance.Input = DistanceInput;\nDistance.Output = DistanceOutput;\nDistance.Proxy = DistanceProxy;\nDistance.Cache = SimplexCache;\n\nimport Settings from '../Settings';\nimport stats from '../util/stats';\nimport common from '../util/common';\n\nimport Math from '../common/Math';\nimport Vec2 from '../common/Vec2';\nimport Vec3 from '../common/Vec3';\nimport Mat22 from '../common/Mat22';\nimport Mat33 from '../common/Mat33';\nimport Rot from '../common/Rot';\nimport Sweep from '../common/Sweep';\nimport Transform from '../common/Transform';\nimport Velocity from '../common/Velocity';\nimport Position from '../common/Position';\n\n/**\n * GJK using Voronoi regions (Christer Ericson) and Barycentric coordinates.\n */\n\nstats.gjkCalls = 0;\nstats.gjkIters = 0;\nstats.gjkMaxIters = 0;\n\n/**\n * Input for Distance. You have to option to use the shape radii in the\n * computation. Even\n */\nfunction DistanceInput() {\n  this.proxyA = new DistanceProxy();\n  this.proxyB = new DistanceProxy();\n  this.transformA = null;\n  this.transformB = null;\n  this.useRadii = false;\n};\n\n/**\n * Output for Distance.\n *\n * @prop {Vec2} pointA closest point on shapeA\n * @prop {Vec2} pointB closest point on shapeB\n * @prop distance\n * @prop iterations number of GJK iterations used\n */\nfunction DistanceOutput() {\n  this.pointA = Vec2.zero();\n  this.pointB = Vec2.zero();\n  this.distance;\n  this.iterations;\n}\n\n/**\n * Used to warm start Distance. Set count to zero on first call.\n *\n * @prop {number} metric length or area\n * @prop {array} indexA vertices on shape A\n * @prop {array} indexB vertices on shape B\n * @prop {number} count\n */\nfunction SimplexCache() {\n  this.metric = 0;\n  this.indexA = [];\n  this.indexB = [];\n  this.count = 0;\n};\n\n/**\n * Compute the closest points between two shapes. Supports any combination of:\n * CircleShape, PolygonShape, EdgeShape. The simplex cache is input/output. On\n * the first call set SimplexCache.count to zero.\n *\n * @param {DistanceOutput} output\n * @param {SimplexCache} cache\n * @param {DistanceInput} input\n */\nfunction Distance(output, cache, input) {\n  ++stats.gjkCalls;\n\n  var proxyA = input.proxyA;\n  var proxyB = input.proxyB;\n  var xfA = input.transformA;\n  var xfB = input.transformB;\n\n  // Initialize the simplex.\n  var simplex = new Simplex();\n  simplex.readCache(cache, proxyA, xfA, proxyB, xfB);\n\n  // Get simplex vertices as an array.\n  var vertices = simplex.m_v;// SimplexVertex\n  var k_maxIters = Settings.maxDistnceIterations;\n\n  // These store the vertices of the last simplex so that we\n  // can check for duplicates and prevent cycling.\n  var saveA = [];\n  var saveB = []; // int[3]\n  var saveCount = 0;\n\n  var distanceSqr1 = Infinity;\n  var distanceSqr2 = Infinity;\n\n  // Main iteration loop.\n  var iter = 0;\n  while (iter < k_maxIters) {\n    // Copy simplex so we can identify duplicates.\n    saveCount = simplex.m_count;\n    for (var i = 0; i < saveCount; ++i) {\n      saveA[i] = vertices[i].indexA;\n      saveB[i] = vertices[i].indexB;\n    }\n\n    simplex.solve();\n\n    // If we have 3 points, then the origin is in the corresponding triangle.\n    if (simplex.m_count == 3) {\n      break;\n    }\n\n    // Compute closest point.\n    var p = simplex.getClosestPoint();\n    distanceSqr2 = p.lengthSquared();\n\n    // Ensure progress\n    if (distanceSqr2 >= distanceSqr1) {\n      // break;\n    }\n    distanceSqr1 = distanceSqr2;\n\n    // Get search direction.\n    var d = simplex.getSearchDirection();\n\n    // Ensure the search direction is numerically fit.\n    if (d.lengthSquared() < Math.EPSILON * Math.EPSILON) {\n      // The origin is probably contained by a line segment\n      // or triangle. Thus the shapes are overlapped.\n\n      // We can't return zero here even though there may be overlap.\n      // In case the simplex is a point, segment, or triangle it is difficult\n      // to determine if the origin is contained in the CSO or very close to it.\n      break;\n    }\n\n    // Compute a tentative new simplex vertex using support points.\n    var vertex = vertices[simplex.m_count]; // SimplexVertex\n\n    vertex.indexA = proxyA.getSupport(Rot.mulTVec2(xfA.q, Vec2.neg(d)));\n    vertex.wA = Transform.mulVec2(xfA, proxyA.getVertex(vertex.indexA));\n\n    vertex.indexB = proxyB.getSupport(Rot.mulTVec2(xfB.q, d));\n    vertex.wB = Transform.mulVec2(xfB, proxyB.getVertex(vertex.indexB));\n\n    vertex.w = Vec2.sub(vertex.wB, vertex.wA);\n\n    // Iteration count is equated to the number of support point calls.\n    ++iter;\n    ++stats.gjkIters;\n\n    // Check for duplicate support points. This is the main termination\n    // criteria.\n    var duplicate = false;\n    for (var i = 0; i < saveCount; ++i) {\n      if (vertex.indexA == saveA[i] && vertex.indexB == saveB[i]) {\n        duplicate = true;\n        break;\n      }\n    }\n\n    // If we found a duplicate support point we must exit to avoid cycling.\n    if (duplicate) {\n      break;\n    }\n\n    // New vertex is ok and needed.\n    ++simplex.m_count;\n  }\n\n  stats.gjkMaxIters = Math.max(stats.gjkMaxIters, iter);\n\n  // Prepare output.\n  simplex.getWitnessPoints(output.pointA, output.pointB);\n  output.distance = Vec2.distance(output.pointA, output.pointB);\n  output.iterations = iter;\n\n  // Cache the simplex.\n  simplex.writeCache(cache);\n\n  // Apply radii if requested.\n  if (input.useRadii) {\n    var rA = proxyA.m_radius;\n    var rB = proxyB.m_radius;\n\n    if (output.distance > rA + rB && output.distance > Math.EPSILON) {\n      // Shapes are still no overlapped.\n      // Move the witness points to the outer surface.\n      output.distance -= rA + rB;\n      var normal = Vec2.sub(output.pointB, output.pointA);\n      normal.normalize();\n      output.pointA.addMul(rA, normal);\n      output.pointB.subMul(rB, normal);\n    } else {\n      // Shapes are overlapped when radii are considered.\n      // Move the witness points to the middle.\n      var p = Vec2.mid(output.pointA, output.pointB);\n      output.pointA.set(p);\n      output.pointB.set(p);\n      output.distance = 0.0;\n    }\n  }\n}\n\n/**\n * A distance proxy is used by the GJK algorithm. It encapsulates any shape.\n */\nfunction DistanceProxy() {\n  this.m_buffer = []; // Vec2[2]\n  this.m_vertices = []; // Vec2[]\n  this.m_count = 0;\n  this.m_radius = 0;\n};\n\n/**\n * Get the vertex count.\n */\nDistanceProxy.prototype.getVertexCount = function() {\n  return this.m_count;\n}\n\n/**\n * Get a vertex by index. Used by Distance.\n */\nDistanceProxy.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(0 <= index && index < this.m_count);\n  return this.m_vertices[index];\n}\n\n/**\n * Get the supporting vertex index in the given direction.\n */\nDistanceProxy.prototype.getSupport = function(d) {\n  var bestIndex = 0;\n  var bestValue = Vec2.dot(this.m_vertices[0], d);\n  for (var i = 0; i < this.m_count; ++i) {\n    var value = Vec2.dot(this.m_vertices[i], d);\n    if (value > bestValue) {\n      bestIndex = i;\n      bestValue = value;\n    }\n  }\n  return bestIndex;\n}\n\n/**\n * Get the supporting vertex in the given direction.\n */\nDistanceProxy.prototype.getSupportVertex = function(d) {\n  return this.m_vertices[this.getSupport(d)];\n}\n\n/**\n * Initialize the proxy using the given shape. The shape must remain in scope\n * while the proxy is in use.\n */\nDistanceProxy.prototype.set = function(shape, index) {\n  // TODO remove, use shape instead\n  _ASSERT && common.assert(typeof shape.computeDistanceProxy === 'function');\n  shape.computeDistanceProxy(this, index);\n}\n\nfunction SimplexVertex() {\n  this.indexA; // wA index\n  this.indexB; // wB index\n  this.wA = Vec2.zero(); // support point in proxyA\n  this.wB = Vec2.zero(); // support point in proxyB\n  this.w = Vec2.zero(); // wB - wA\n  this.a; // barycentric coordinate for closest point\n};\n\nSimplexVertex.prototype.set = function(v) {\n  this.indexA = v.indexA;\n  this.indexB = v.indexB;\n  this.wA = Vec2.clone(v.wA);\n  this.wB = Vec2.clone(v.wB);\n  this.w = Vec2.clone(v.w);\n  this.a = v.a;\n};\n\nfunction Simplex() {\n  this.m_v1 = new SimplexVertex();\n  this.m_v2 = new SimplexVertex();\n  this.m_v3 = new SimplexVertex();\n  this.m_v = [ this.m_v1, this.m_v2, this.m_v3 ];\n  this.m_count;\n};\n\nSimplex.prototype.print = function() {\n  if (this.m_count == 3) {\n    return [\"+\" + this.m_count,\n      this.m_v1.a, this.m_v1.wA.x, this.m_v1.wA.y, this.m_v1.wB.x, this.m_v1.wB.y,\n      this.m_v2.a, this.m_v2.wA.x, this.m_v2.wA.y, this.m_v2.wB.x, this.m_v2.wB.y,\n      this.m_v3.a, this.m_v3.wA.x, this.m_v3.wA.y, this.m_v3.wB.x, this.m_v3.wB.y\n    ].toString();\n\n  } else if (this.m_count == 2) {\n    return [\"+\" + this.m_count,\n      this.m_v1.a, this.m_v1.wA.x, this.m_v1.wA.y, this.m_v1.wB.x, this.m_v1.wB.y,\n      this.m_v2.a, this.m_v2.wA.x, this.m_v2.wA.y, this.m_v2.wB.x, this.m_v2.wB.y\n    ].toString();\n\n  } else if (this.m_count == 1) {\n    return [\"+\" + this.m_count,\n      this.m_v1.a, this.m_v1.wA.x, this.m_v1.wA.y, this.m_v1.wB.x, this.m_v1.wB.y\n    ].toString();\n\n  } else {\n    return \"+\" + this.m_count;\n  }\n};\n\n// (SimplexCache, DistanceProxy, ...)\nSimplex.prototype.readCache = function(cache, proxyA, transformA, proxyB, transformB) {\n  _ASSERT && common.assert(cache.count <= 3);\n\n  // Copy data from cache.\n  this.m_count = cache.count;\n  for (var i = 0; i < this.m_count; ++i) {\n    var v = this.m_v[i];\n    v.indexA = cache.indexA[i];\n    v.indexB = cache.indexB[i];\n    var wALocal = proxyA.getVertex(v.indexA);\n    var wBLocal = proxyB.getVertex(v.indexB);\n    v.wA = Transform.mulVec2(transformA, wALocal);\n    v.wB = Transform.mulVec2(transformB, wBLocal);\n    v.w = Vec2.sub(v.wB, v.wA);\n    v.a = 0.0;\n  }\n\n  // Compute the new simplex metric, if it is substantially different than\n  // old metric then flush the simplex.\n  if (this.m_count > 1) {\n    var metric1 = cache.metric;\n    var metric2 = this.getMetric();\n    if (metric2 < 0.5 * metric1 || 2.0 * metric1 < metric2\n        || metric2 < Math.EPSILON) {\n      // Reset the simplex.\n      this.m_count = 0;\n    }\n  }\n\n  // If the cache is empty or invalid...\n  if (this.m_count == 0) {\n    var v = this.m_v[0];// SimplexVertex\n    v.indexA = 0;\n    v.indexB = 0;\n    var wALocal = proxyA.getVertex(0);\n    var wBLocal = proxyB.getVertex(0);\n    v.wA = Transform.mulVec2(transformA, wALocal);\n    v.wB = Transform.mulVec2(transformB, wBLocal);\n    v.w = Vec2.sub(v.wB, v.wA);\n    v.a = 1.0;\n    this.m_count = 1;\n  }\n}\n\n// (SimplexCache)\nSimplex.prototype.writeCache = function(cache) {\n  cache.metric = this.getMetric();\n  cache.count = this.m_count;\n  for (var i = 0; i < this.m_count; ++i) {\n    cache.indexA[i] = this.m_v[i].indexA;\n    cache.indexB[i] = this.m_v[i].indexB;\n  }\n}\n\nSimplex.prototype.getSearchDirection = function() {\n  switch (this.m_count) {\n  case 1:\n    return Vec2.neg(this.m_v1.w);\n\n  case 2: {\n    var e12 = Vec2.sub(this.m_v2.w, this.m_v1.w);\n    var sgn = Vec2.cross(e12, Vec2.neg(this.m_v1.w));\n    if (sgn > 0.0) {\n      // Origin is left of e12.\n      return Vec2.cross(1.0, e12);\n    } else {\n      // Origin is right of e12.\n      return Vec2.cross(e12, 1.0);\n    }\n  }\n\n  default:\n    _ASSERT && common.assert(false);\n    return Vec2.zero();\n  }\n}\n\nSimplex.prototype.getClosestPoint = function() {\n  switch (this.m_count) {\n  case 0:\n    _ASSERT && common.assert(false);\n    return Vec2.zero();\n\n  case 1:\n    return Vec2.clone(this.m_v1.w);\n\n  case 2:\n    return Vec2.combine(this.m_v1.a, this.m_v1.w, this.m_v2.a, this.m_v2.w);\n\n  case 3:\n    return Vec2.zero();\n\n  default:\n    _ASSERT && common.assert(false);\n    return Vec2.zero();\n  }\n}\n\nSimplex.prototype.getWitnessPoints = function(pA, pB) {\n  switch (this.m_count) {\n  case 0:\n    _ASSERT && common.assert(false);\n    break;\n\n  case 1:\n    pA.set(this.m_v1.wA);\n    pB.set(this.m_v1.wB);\n    break;\n\n  case 2:\n    pA.setCombine(this.m_v1.a, this.m_v1.wA, this.m_v2.a, this.m_v2.wA);\n    pB.setCombine(this.m_v1.a, this.m_v1.wB, this.m_v2.a, this.m_v2.wB);\n    break;\n\n  case 3:\n    pA.setCombine(this.m_v1.a, this.m_v1.wA, this.m_v2.a, this.m_v2.wA);\n    pA.addMul(this.m_v3.a, this.m_v3.wA);\n    pB.set(pA);\n    break;\n\n  default:\n    _ASSERT && common.assert(false);\n    break;\n  }\n}\n\nSimplex.prototype.getMetric = function() {\n  switch (this.m_count) {\n  case 0:\n    _ASSERT && common.assert(false);\n    return 0.0;\n\n  case 1:\n    return 0.0;\n\n  case 2:\n    return Vec2.distance(this.m_v1.w, this.m_v2.w);\n\n  case 3:\n    return Vec2.cross(Vec2.sub(this.m_v2.w, this.m_v1.w), Vec2.sub(this.m_v3.w,\n        this.m_v1.w));\n\n  default:\n    _ASSERT && common.assert(false);\n    return 0.0;\n  }\n}\n\nSimplex.prototype.solve = function() {\n  switch (this.m_count) {\n  case 1:\n    break;\n\n  case 2:\n    this.solve2();\n    break;\n\n  case 3:\n    this.solve3();\n    break;\n\n  default:\n    _ASSERT && common.assert(false);\n  }\n}\n\n// Solve a line segment using barycentric coordinates.\n//\n// p = a1 * w1 + a2 * w2\n// a1 + a2 = 1\n//\n// The vector from the origin to the closest point on the line is\n// perpendicular to the line.\n// e12 = w2 - w1\n// dot(p, e) = 0\n// a1 * dot(w1, e) + a2 * dot(w2, e) = 0\n//\n// 2-by-2 linear system\n// [1 1 ][a1] = [1]\n// [w1.e12 w2.e12][a2] = [0]\n//\n// Define\n// d12_1 = dot(w2, e12)\n// d12_2 = -dot(w1, e12)\n// d12 = d12_1 + d12_2\n//\n// Solution\n// a1 = d12_1 / d12\n// a2 = d12_2 / d12\nSimplex.prototype.solve2 = function() {\n  var w1 = this.m_v1.w;\n  var w2 = this.m_v2.w;\n  var e12 = Vec2.sub(w2, w1);\n\n  // w1 region\n  var d12_2 = -Vec2.dot(w1, e12);\n  if (d12_2 <= 0.0) {\n    // a2 <= 0, so we clamp it to 0\n    this.m_v1.a = 1.0;\n    this.m_count = 1;\n    return;\n  }\n\n  // w2 region\n  var d12_1 = Vec2.dot(w2, e12);\n  if (d12_1 <= 0.0) {\n    // a1 <= 0, so we clamp it to 0\n    this.m_v2.a = 1.0;\n    this.m_count = 1;\n    this.m_v1.set(this.m_v2);\n    return;\n  }\n\n  // Must be in e12 region.\n  var inv_d12 = 1.0 / (d12_1 + d12_2);\n  this.m_v1.a = d12_1 * inv_d12;\n  this.m_v2.a = d12_2 * inv_d12;\n  this.m_count = 2;\n}\n\n// Possible regions:\n// - points[2]\n// - edge points[0]-points[2]\n// - edge points[1]-points[2]\n// - inside the triangle\nSimplex.prototype.solve3 = function() {\n  var w1 = this.m_v1.w;\n  var w2 = this.m_v2.w;\n  var w3 = this.m_v3.w;\n\n  // Edge12\n  // [1 1 ][a1] = [1]\n  // [w1.e12 w2.e12][a2] = [0]\n  // a3 = 0\n  var e12 = Vec2.sub(w2, w1);\n  var w1e12 = Vec2.dot(w1, e12);\n  var w2e12 = Vec2.dot(w2, e12);\n  var d12_1 = w2e12;\n  var d12_2 = -w1e12;\n\n  // Edge13\n  // [1 1 ][a1] = [1]\n  // [w1.e13 w3.e13][a3] = [0]\n  // a2 = 0\n  var e13 = Vec2.sub(w3, w1);\n  var w1e13 = Vec2.dot(w1, e13);\n  var w3e13 = Vec2.dot(w3, e13);\n  var d13_1 = w3e13;\n  var d13_2 = -w1e13;\n\n  // Edge23\n  // [1 1 ][a2] = [1]\n  // [w2.e23 w3.e23][a3] = [0]\n  // a1 = 0\n  var e23 = Vec2.sub(w3, w2);// Vec2\n  var w2e23 = Vec2.dot(w2, e23);\n  var w3e23 = Vec2.dot(w3, e23);\n  var d23_1 = w3e23;\n  var d23_2 = -w2e23;\n\n  // Triangle123\n  var n123 = Vec2.cross(e12, e13);\n\n  var d123_1 = n123 * Vec2.cross(w2, w3);\n  var d123_2 = n123 * Vec2.cross(w3, w1);\n  var d123_3 = n123 * Vec2.cross(w1, w2);\n\n  // w1 region\n  if (d12_2 <= 0.0 && d13_2 <= 0.0) {\n    this.m_v1.a = 1.0;\n    this.m_count = 1;\n    return;\n  }\n\n  // e12\n  if (d12_1 > 0.0 && d12_2 > 0.0 && d123_3 <= 0.0) {\n    var inv_d12 = 1.0 / (d12_1 + d12_2);\n    this.m_v1.a = d12_1 * inv_d12;\n    this.m_v2.a = d12_2 * inv_d12;\n    this.m_count = 2;\n    return;\n  }\n\n  // e13\n  if (d13_1 > 0.0 && d13_2 > 0.0 && d123_2 <= 0.0) {\n    var inv_d13 = 1.0 / (d13_1 + d13_2);\n    this.m_v1.a = d13_1 * inv_d13;\n    this.m_v3.a = d13_2 * inv_d13;\n    this.m_count = 2;\n    this.m_v2.set(this.m_v3);\n    return;\n  }\n\n  // w2 region\n  if (d12_1 <= 0.0 && d23_2 <= 0.0) {\n    this.m_v2.a = 1.0;\n    this.m_count = 1;\n    this.m_v1.set(this.m_v2);\n    return;\n  }\n\n  // w3 region\n  if (d13_1 <= 0.0 && d23_1 <= 0.0) {\n    this.m_v3.a = 1.0;\n    this.m_count = 1;\n    this.m_v1.set(this.m_v3);\n    return;\n  }\n\n  // e23\n  if (d23_1 > 0.0 && d23_2 > 0.0 && d123_1 <= 0.0) {\n    var inv_d23 = 1.0 / (d23_1 + d23_2);\n    this.m_v2.a = d23_1 * inv_d23;\n    this.m_v3.a = d23_2 * inv_d23;\n    this.m_count = 2;\n    this.m_v1.set(this.m_v3);\n    return;\n  }\n\n  // Must be in triangle123\n  var inv_d123 = 1.0 / (d123_1 + d123_2 + d123_3);\n  this.m_v1.a = d123_1 * inv_d123;\n  this.m_v2.a = d123_2 * inv_d123;\n  this.m_v3.a = d123_3 * inv_d123;\n  this.m_count = 3;\n}\n\n/**\n * Determine if two generic shapes overlap.\n */\nDistance.testOverlap = function(shapeA, indexA, shapeB, indexB, xfA, xfB) {\n  var input = new DistanceInput();\n  input.proxyA.set(shapeA, indexA);\n  input.proxyB.set(shapeB, indexB);\n  input.transformA = xfA;\n  input.transformB = xfB;\n  input.useRadii = true;\n\n  var cache = new SimplexCache();\n\n  var output = new DistanceOutput();\n  Distance(output, cache, input);\n\n  return output.distance < 10.0 * Math.EPSILON;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar DEBUG_SOLVER = false;\n\nimport common from './util/common';\n\nimport Math from './common/Math';\nimport Vec2 from './common/Vec2';\nimport Transform from './common/Transform';\nimport Mat22 from './common/Mat22';\nimport Rot from './common/Rot';\n\nimport Settings from './Settings';\nimport Manifold from './Manifold';\nimport Distance from './collision/Distance';\n\nexport default Contact;\n\n/**\n * A contact edge is used to connect bodies and contacts together in a contact\n * graph where each body is a node and each contact is an edge. A contact edge\n * belongs to a doubly linked list maintained in each attached body. Each\n * contact has two contact nodes, one for each attached body.\n * \n * @prop {Contact} contact The contact\n * @prop {ContactEdge} prev The previous contact edge in the body's contact list\n * @prop {ContactEdge} next The next contact edge in the body's contact list\n * @prop {Body} other Provides quick access to the other body attached.\n */\nfunction ContactEdge(contact) {\n  this.contact = contact;\n  this.prev;\n  this.next;\n  this.other;\n};\n\n/**\n * @function Contact~evaluate\n * \n * @param manifold\n * @param xfA\n * @param fixtureA\n * @param indexA\n * @param xfB\n * @param fixtureB\n * @param indexB\n */\n\n/**\n * The class manages contact between two shapes. A contact exists for each\n * overlapping AABB in the broad-phase (except if filtered). Therefore a contact\n * object may exist that has no contact points.\n * \n * @param {Fixture} fA\n * @param {int} indexA\n * @param {Fixture} fB\n * @param {int} indexB\n * @param {Contact~evaluate} evaluateFcn\n */\nfunction Contact(fA, indexA, fB, indexB, evaluateFcn) {\n  // Nodes for connecting bodies.\n  this.m_nodeA = new ContactEdge(this);\n  this.m_nodeB = new ContactEdge(this);\n\n  this.m_fixtureA = fA;\n  this.m_fixtureB = fB;\n\n  this.m_indexA = indexA;\n  this.m_indexB = indexB;\n\n  this.m_evaluateFcn = evaluateFcn;\n\n  this.m_manifold = new Manifold();\n\n  this.m_prev = null;\n  this.m_next = null;\n\n  this.m_toi = 1.0;\n  this.m_toiCount = 0;\n  // This contact has a valid TOI in m_toi\n  this.m_toiFlag = false;\n\n  this.m_friction = mixFriction(this.m_fixtureA.m_friction,\n      this.m_fixtureB.m_friction);\n  this.m_restitution = mixRestitution(this.m_fixtureA.m_restitution,\n      this.m_fixtureB.m_restitution);\n\n  this.m_tangentSpeed = 0.0;\n\n  // This contact can be disabled (by user)\n  this.m_enabledFlag = true;\n\n  // Used when crawling contact graph when forming islands.\n  this.m_islandFlag = false;\n\n  // Set when the shapes are touching.\n  this.m_touchingFlag = false;\n\n  // This contact needs filtering because a fixture filter was changed.\n  this.m_filterFlag = false;\n\n  // This bullet contact had a TOI event\n  this.m_bulletHitFlag = false;\n\n  this.v_points = []; // VelocityConstraintPoint[maxManifoldPoints]\n  this.v_normal = Vec2.zero();\n  this.v_normalMass = new Mat22();\n  this.v_K = new Mat22();\n  this.v_pointCount;\n\n  this.v_tangentSpeed;\n  this.v_friction;\n  this.v_restitution;\n\n  this.v_invMassA;\n  this.v_invMassB;\n  this.v_invIA;\n  this.v_invIB;\n\n  this.p_localPoints = [] // Vec2[maxManifoldPoints];\n  this.p_localNormal = Vec2.zero();\n  this.p_localPoint = Vec2.zero();\n  this.p_localCenterA = Vec2.zero();\n  this.p_localCenterB = Vec2.zero();\n  this.p_type; // Manifold.Type\n  this.p_radiusA;\n  this.p_radiusB;\n  this.p_pointCount;\n\n  this.p_invMassA;\n  this.p_invMassB;\n  this.p_invIA;\n  this.p_invIB;\n}\n\nContact.prototype.initConstraint = function(step) {\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n\n  var shapeA = fixtureA.getShape();\n  var shapeB = fixtureB.getShape();\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  var manifold = this.getManifold();\n\n  var pointCount = manifold.pointCount;\n  _ASSERT && common.assert(pointCount > 0);\n\n  this.v_invMassA = bodyA.m_invMass;\n  this.v_invMassB = bodyB.m_invMass;\n  this.v_invIA = bodyA.m_invI;\n  this.v_invIB = bodyB.m_invI;\n\n  this.v_friction = this.m_friction;\n  this.v_restitution = this.m_restitution;\n  this.v_tangentSpeed = this.m_tangentSpeed;\n\n  this.v_pointCount = pointCount;\n\n  this.v_K.setZero();\n  this.v_normalMass.setZero();\n\n  this.p_invMassA = bodyA.m_invMass;\n  this.p_invMassB = bodyB.m_invMass;\n  this.p_invIA = bodyA.m_invI;\n  this.p_invIB = bodyB.m_invI;\n  this.p_localCenterA = Vec2.clone(bodyA.m_sweep.localCenter);\n  this.p_localCenterB = Vec2.clone(bodyB.m_sweep.localCenter);\n\n  this.p_radiusA = shapeA.m_radius;\n  this.p_radiusB = shapeB.m_radius;\n\n  this.p_type = manifold.type;\n  this.p_localNormal = Vec2.clone(manifold.localNormal);\n  this.p_localPoint = Vec2.clone(manifold.localPoint);\n  this.p_pointCount = pointCount;\n\n  for (var j = 0; j < pointCount; ++j) {\n    var cp = manifold.points[j]; // ManifoldPoint\n    var vcp = this.v_points[j] = new VelocityConstraintPoint();\n\n    if (step.warmStarting) {\n      vcp.normalImpulse = step.dtRatio * cp.normalImpulse;\n      vcp.tangentImpulse = step.dtRatio * cp.tangentImpulse;\n\n    } else {\n      vcp.normalImpulse = 0.0;\n      vcp.tangentImpulse = 0.0;\n    }\n\n    vcp.rA.setZero();\n    vcp.rB.setZero();\n    vcp.normalMass = 0.0;\n    vcp.tangentMass = 0.0;\n    vcp.velocityBias = 0.0;\n\n    this.p_localPoints[j] = Vec2.clone(cp.localPoint);\n\n  }\n};\n\n/**\n * Get the contact manifold. Do not modify the manifold unless you understand\n * the internals of the library.\n */\nContact.prototype.getManifold = function() {\n  return this.m_manifold;\n}\n\n/**\n * Get the world manifold.\n * \n * @param {WorldManifold} [worldManifold]\n */\nContact.prototype.getWorldManifold = function(worldManifold) {\n  var bodyA = this.m_fixtureA.getBody();\n  var bodyB = this.m_fixtureB.getBody();\n  var shapeA = this.m_fixtureA.getShape();\n  var shapeB = this.m_fixtureB.getShape();\n\n  return this.m_manifold.getWorldManifold(worldManifold, bodyA.getTransform(),\n      shapeA.m_radius, bodyB.getTransform(), shapeB.m_radius);\n}\n\n/**\n * Enable/disable this contact. This can be used inside the pre-solve contact\n * listener. The contact is only disabled for the current time step (or sub-step\n * in continuous collisions).\n */\nContact.prototype.setEnabled = function(flag) {\n  this.m_enabledFlag = !!flag;\n}\n\n/**\n * Has this contact been disabled?\n */\nContact.prototype.isEnabled = function() {\n  return this.m_enabledFlag;\n}\n\n/**\n * Is this contact touching?\n */\nContact.prototype.isTouching = function() {\n  return this.m_touchingFlag;\n}\n\n/**\n * Get the next contact in the world's contact list.\n */\nContact.prototype.getNext = function() {\n  return this.m_next;\n}\n\n/**\n * Get fixture A in this contact.\n */\nContact.prototype.getFixtureA = function() {\n  return this.m_fixtureA;\n}\n\n/**\n * Get fixture B in this contact.\n */\nContact.prototype.getFixtureB = function() {\n  return this.m_fixtureB;\n}\n\n/**\n * Get the child primitive index for fixture A.\n */\nContact.prototype.getChildIndexA = function() {\n  return this.m_indexA;\n}\n\n/**\n * Get the child primitive index for fixture B.\n */\nContact.prototype.getChildIndexB = function() {\n  return this.m_indexB;\n}\n\n/**\n * Flag this contact for filtering. Filtering will occur the next time step.\n */\nContact.prototype.flagForFiltering = function() {\n  this.m_filterFlag = true;\n}\n\n/**\n * Override the default friction mixture. You can call this in\n * ContactListener.preSolve. This value persists until set or reset.\n */\nContact.prototype.setFriction = function(friction) {\n  this.m_friction = friction;\n}\n\n/**\n * Get the friction.\n */\nContact.prototype.getFriction = function() {\n  return this.m_friction;\n}\n\n/**\n * Reset the friction mixture to the default value.\n */\nContact.prototype.resetFriction = function() {\n  this.m_friction = mixFriction(this.m_fixtureA.m_friction,\n      this.m_fixtureB.m_friction);\n}\n\n/**\n * Override the default restitution mixture. You can call this in\n * ContactListener.preSolve. The value persists until you set or reset.\n */\nContact.prototype.setRestitution = function(restitution) {\n  this.m_restitution = restitution;\n}\n\n/**\n * Get the restitution.\n */\nContact.prototype.getRestitution = function() {\n  return this.m_restitution;\n}\n\n/**\n * Reset the restitution to the default value.\n */\nContact.prototype.resetRestitution = function() {\n  this.m_restitution = mixRestitution(this.m_fixtureA.m_restitution,\n      this.m_fixtureB.m_restitution);\n}\n\n/**\n * Set the desired tangent speed for a conveyor belt behavior. In meters per\n * second.\n */\nContact.prototype.setTangentSpeed = function(speed) {\n  this.m_tangentSpeed = speed;\n}\n\n/**\n * Get the desired tangent speed. In meters per second.\n */\nContact.prototype.getTangentSpeed = function() {\n  return this.m_tangentSpeed;\n}\n\n/**\n * Called by Update method, and implemented by subclasses.\n */\nContact.prototype.evaluate = function(manifold, xfA, xfB) {\n  this.m_evaluateFcn(manifold, xfA, this.m_fixtureA, this.m_indexA, xfB,\n      this.m_fixtureB, this.m_indexB);\n};\n\n/**\n * Updates the contact manifold and touching status.\n * \n * Note: do not assume the fixture AABBs are overlapping or are valid.\n * \n * @param {function} listener.beginContact\n * @param {function} listener.endContact\n * @param {function} listener.preSolve\n */\nContact.prototype.update = function(listener) {\n\n  // Re-enable this contact.\n  this.m_enabledFlag = true;\n\n  var touching = false;\n  var wasTouching = this.m_touchingFlag;\n\n  var sensorA = this.m_fixtureA.isSensor();\n  var sensorB = this.m_fixtureB.isSensor();\n  var sensor = sensorA || sensorB;\n\n  var bodyA = this.m_fixtureA.getBody();\n  var bodyB = this.m_fixtureB.getBody();\n  var xfA = bodyA.getTransform();\n  var xfB = bodyB.getTransform();\n\n  // Is this contact a sensor?\n  if (sensor) {\n    var shapeA = this.m_fixtureA.getShape();\n    var shapeB = this.m_fixtureB.getShape();\n    touching = Distance.testOverlap(shapeA, this.m_indexA, shapeB,\n        this.m_indexB, xfA, xfB);\n\n    // Sensors don't generate manifolds.\n    this.m_manifold.pointCount = 0;\n  } else {\n\n    // TODO reuse manifold\n    var oldManifold = this.m_manifold;\n    this.m_manifold = new Manifold();\n\n    this.evaluate(this.m_manifold, xfA, xfB);\n    touching = this.m_manifold.pointCount > 0;\n\n    // Match old contact ids to new contact ids and copy the\n    // stored impulses to warm start the solver.\n    for (var i = 0; i < this.m_manifold.pointCount; ++i) {\n      var nmp = this.m_manifold.points[i];\n      nmp.normalImpulse = 0.0;\n      nmp.tangentImpulse = 0.0;\n\n      for (var j = 0; j < oldManifold.pointCount; ++j) {\n        var omp = oldManifold.points[j];\n        if (omp.id.key == nmp.id.key) { // ContactID.key\n          nmp.normalImpulse = omp.normalImpulse;\n          nmp.tangentImpulse = omp.tangentImpulse;\n          break;\n        }\n      }\n    }\n\n    if (touching != wasTouching) {\n      bodyA.setAwake(true);\n      bodyB.setAwake(true);\n    }\n  }\n\n  this.m_touchingFlag = touching;\n\n  if (wasTouching == false && touching == true && listener) {\n    listener.beginContact(this);\n  }\n\n  if (wasTouching == true && touching == false && listener) {\n    listener.endContact(this);\n  }\n\n  if (sensor == false && touching && listener) {\n    listener.preSolve(this, oldManifold);\n  }\n}\n\nContact.prototype.solvePositionConstraint = function(step) {\n  return this._solvePositionConstraint(step, false);\n}\n\nContact.prototype.solvePositionConstraintTOI = function(step, toiA, toiB) {\n  return this._solvePositionConstraint(step, true, toiA, toiB);\n}\n\nContact.prototype._solvePositionConstraint = function(step, toi, toiA, toiB) {\n\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  var velocityA = bodyA.c_velocity;\n  var velocityB = bodyB.c_velocity;\n  var positionA = bodyA.c_position;\n  var positionB = bodyB.c_position;\n\n  var localCenterA = Vec2.clone(this.p_localCenterA);\n  var localCenterB = Vec2.clone(this.p_localCenterB);\n\n  var mA = 0.0;\n  var iA = 0.0;\n  if (!toi || (bodyA == toiA || bodyA == toiB)) {\n    mA = this.p_invMassA;\n    iA = this.p_invIA;\n  }\n\n  var mB = 0.0;\n  var iB = 0.0;\n  if (!toi || (bodyB == toiA || bodyB == toiB)) {\n    mB = this.p_invMassB;\n    iB = this.p_invIB;\n  }\n\n  var cA = Vec2.clone(positionA.c);\n  var aA = positionA.a;\n\n  var cB = Vec2.clone(positionB.c);\n  var aB = positionB.a;\n\n  var minSeparation = 0.0;\n\n  // Solve normal constraints\n  for (var j = 0; j < this.p_pointCount; ++j) {\n    var xfA = Transform.identity();\n    var xfB = Transform.identity();\n    xfA.q.set(aA);\n    xfB.q.set(aB);\n    xfA.p = Vec2.sub(cA, Rot.mulVec2(xfA.q, localCenterA));\n    xfB.p = Vec2.sub(cB, Rot.mulVec2(xfB.q, localCenterB));\n\n    // PositionSolverManifold\n    var normal, point, separation;\n    switch (this.p_type) {\n    case Manifold.e_circles:\n      var pointA = Transform.mulVec2(xfA, this.p_localPoint);\n      var pointB = Transform.mulVec2(xfB, this.p_localPoints[0]);\n      normal = Vec2.sub(pointB, pointA);\n      normal.normalize();\n      point = Vec2.combine(0.5, pointA, 0.5, pointB);\n      separation = Vec2.dot(Vec2.sub(pointB, pointA), normal) - this.p_radiusA\n          - this.p_radiusB;\n      break;\n\n    case Manifold.e_faceA:\n      normal = Rot.mulVec2(xfA.q, this.p_localNormal);\n      var planePoint = Transform.mulVec2(xfA, this.p_localPoint);\n      var clipPoint = Transform.mulVec2(xfB, this.p_localPoints[j]);\n      separation = Vec2.dot(Vec2.sub(clipPoint, planePoint), normal)\n          - this.p_radiusA - this.p_radiusB;\n      point = clipPoint;\n      break;\n\n    case Manifold.e_faceB:\n      normal = Rot.mulVec2(xfB.q, this.p_localNormal);\n      var planePoint = Transform.mulVec2(xfB, this.p_localPoint);\n      var clipPoint = Transform.mulVec2(xfA, this.p_localPoints[j]);\n      separation = Vec2.dot(Vec2.sub(clipPoint, planePoint), normal)\n          - this.p_radiusA - this.p_radiusB;\n      point = clipPoint;\n\n      // Ensure normal points from A to B\n      normal.mul(-1);\n      break;\n    }\n\n    var rA = Vec2.sub(point, cA);\n    var rB = Vec2.sub(point, cB);\n\n    // Track max constraint error.\n    minSeparation = Math.min(minSeparation, separation);\n\n    var baumgarte = toi ? Settings.toiBaugarte : Settings.baumgarte;\n    var linearSlop = Settings.linearSlop;\n    var maxLinearCorrection = Settings.maxLinearCorrection;\n\n    // Prevent large corrections and allow slop.\n    var C = Math.clamp(baumgarte * (separation + linearSlop),\n        -maxLinearCorrection, 0.0);\n\n    // Compute the effective mass.\n    var rnA = Vec2.cross(rA, normal);\n    var rnB = Vec2.cross(rB, normal);\n    var K = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\n\n    // Compute normal impulse\n    var impulse = K > 0.0 ? -C / K : 0.0;\n\n    var P = Vec2.mul(impulse, normal);\n\n    cA.subMul(mA, P);\n    aA -= iA * Vec2.cross(rA, P);\n\n    cB.addMul(mB, P);\n    aB += iB * Vec2.cross(rB, P);\n  }\n\n  positionA.c.set(cA);\n  positionA.a = aA;\n\n  positionB.c.set(cB);\n  positionB.a = aB;\n\n  return minSeparation;\n}\n\n// TODO merge with ManifoldPoint\nfunction VelocityConstraintPoint() {\n  this.rA = Vec2.zero();\n  this.rB = Vec2.zero();\n  this.normalImpulse = 0;\n  this.tangentImpulse = 0;\n  this.normalMass = 0;\n  this.tangentMass = 0;\n  this.velocityBias = 0;\n}\n\nContact.prototype.initVelocityConstraint = function(step) {\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  var velocityA = bodyA.c_velocity;\n  var velocityB = bodyB.c_velocity;\n\n  var positionA = bodyA.c_position;\n  var positionB = bodyB.c_position;\n\n  var radiusA = this.p_radiusA;\n  var radiusB = this.p_radiusB;\n  var manifold = this.getManifold();\n\n  var mA = this.v_invMassA;\n  var mB = this.v_invMassB;\n  var iA = this.v_invIA;\n  var iB = this.v_invIB;\n  var localCenterA = Vec2.clone(this.p_localCenterA);\n  var localCenterB = Vec2.clone(this.p_localCenterB);\n\n  var cA = Vec2.clone(positionA.c);\n  var aA = positionA.a;\n  var vA = Vec2.clone(velocityA.v);\n  var wA = velocityA.w;\n\n  var cB = Vec2.clone(positionB.c);\n  var aB = positionB.a;\n  var vB = Vec2.clone(velocityB.v);\n  var wB = velocityB.w;\n\n  _ASSERT && common.assert(manifold.pointCount > 0);\n\n  var xfA = Transform.identity();\n  var xfB = Transform.identity();\n  xfA.q.set(aA);\n  xfB.q.set(aB);\n  xfA.p.setCombine(1, cA, -1, Rot.mulVec2(xfA.q, localCenterA));\n  xfB.p.setCombine(1, cB, -1, Rot.mulVec2(xfB.q, localCenterB));\n\n  var worldManifold = manifold.getWorldManifold(null, xfA, radiusA, xfB, radiusB);\n\n  this.v_normal.set(worldManifold.normal);\n\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    var vcp = this.v_points[j]; // VelocityConstraintPoint\n\n    vcp.rA.set(Vec2.sub(worldManifold.points[j], cA));\n    vcp.rB.set(Vec2.sub(worldManifold.points[j], cB));\n\n    var rnA = Vec2.cross(vcp.rA, this.v_normal);\n    var rnB = Vec2.cross(vcp.rB, this.v_normal);\n\n    var kNormal = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\n\n    vcp.normalMass = kNormal > 0.0 ? 1.0 / kNormal : 0.0;\n\n    var tangent = Vec2.cross(this.v_normal, 1.0);\n\n    var rtA = Vec2.cross(vcp.rA, tangent);\n    var rtB = Vec2.cross(vcp.rB, tangent);\n\n    var kTangent = mA + mB + iA * rtA * rtA + iB * rtB * rtB;\n\n    vcp.tangentMass = kTangent > 0.0 ? 1.0 / kTangent : 0.0;\n\n    // Setup a velocity bias for restitution.\n    vcp.velocityBias = 0.0;\n    var vRel = Vec2.dot(this.v_normal, vB)\n        + Vec2.dot(this.v_normal, Vec2.cross(wB, vcp.rB))\n        - Vec2.dot(this.v_normal, vA)\n        - Vec2.dot(this.v_normal, Vec2.cross(wA, vcp.rA));\n    if (vRel < -Settings.velocityThreshold) {\n      vcp.velocityBias = -this.v_restitution * vRel;\n    }\n  }\n\n  // If we have two points, then prepare the block solver.\n  if (this.v_pointCount == 2 && step.blockSolve) {\n    var vcp1 = this.v_points[0]; // VelocityConstraintPoint\n    var vcp2 = this.v_points[1]; // VelocityConstraintPoint\n\n    var rn1A = Vec2.cross(vcp1.rA, this.v_normal);\n    var rn1B = Vec2.cross(vcp1.rB, this.v_normal);\n    var rn2A = Vec2.cross(vcp2.rA, this.v_normal);\n    var rn2B = Vec2.cross(vcp2.rB, this.v_normal);\n\n    var k11 = mA + mB + iA * rn1A * rn1A + iB * rn1B * rn1B;\n    var k22 = mA + mB + iA * rn2A * rn2A + iB * rn2B * rn2B;\n    var k12 = mA + mB + iA * rn1A * rn2A + iB * rn1B * rn2B;\n\n    // Ensure a reasonable condition number.\n    var k_maxConditionNumber = 1000.0;\n    if (k11 * k11 < k_maxConditionNumber * (k11 * k22 - k12 * k12)) {\n      // K is safe to invert.\n      this.v_K.ex.set(k11, k12);\n      this.v_K.ey.set(k12, k22);\n      this.v_normalMass.set(this.v_K.getInverse());\n    } else {\n      // The constraints are redundant, just use one.\n      // TODO_ERIN use deepest?\n      this.v_pointCount = 1;\n    }\n  }\n\n  positionA.c.set(cA);\n  positionA.a = aA;\n  velocityA.v.set(vA);\n  velocityA.w = wA;\n\n  positionB.c.set(cB);\n  positionB.a = aB;\n  velocityB.v.set(vB);\n  velocityB.w = wB;\n};\n\nContact.prototype.warmStartConstraint = function(step) {\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  var velocityA = bodyA.c_velocity;\n  var velocityB = bodyB.c_velocity;\n  var positionA = bodyA.c_position;\n  var positionB = bodyB.c_position;\n\n  var mA = this.v_invMassA;\n  var iA = this.v_invIA;\n  var mB = this.v_invMassB;\n  var iB = this.v_invIB;\n\n  var vA = Vec2.clone(velocityA.v);\n  var wA = velocityA.w;\n  var vB = Vec2.clone(velocityB.v);\n  var wB = velocityB.w;\n\n  var normal = this.v_normal;\n  var tangent = Vec2.cross(normal, 1.0);\n\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    var vcp = this.v_points[j]; // VelocityConstraintPoint\n\n    var P = Vec2.combine(vcp.normalImpulse, normal, vcp.tangentImpulse, tangent);\n    wA -= iA * Vec2.cross(vcp.rA, P);\n    vA.subMul(mA, P);\n    wB += iB * Vec2.cross(vcp.rB, P);\n    vB.addMul(mB, P);\n  }\n\n  velocityA.v.set(vA);\n  velocityA.w = wA;\n  velocityB.v.set(vB);\n  velocityB.w = wB;\n};\n\nContact.prototype.storeConstraintImpulses = function(step) {\n  var manifold = this.m_manifold;\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    manifold.points[j].normalImpulse = this.v_points[j].normalImpulse;\n    manifold.points[j].tangentImpulse = this.v_points[j].tangentImpulse;\n  }\n};\n\nContact.prototype.solveVelocityConstraint = function(step) {\n  var bodyA = this.m_fixtureA.m_body;\n  var bodyB = this.m_fixtureB.m_body;\n\n  var velocityA = bodyA.c_velocity;\n  var positionA = bodyA.c_position;\n\n  var velocityB = bodyB.c_velocity;\n  var positionB = bodyB.c_position;\n\n  var mA = this.v_invMassA;\n  var iA = this.v_invIA;\n  var mB = this.v_invMassB;\n  var iB = this.v_invIB;\n\n  var vA = Vec2.clone(velocityA.v);\n  var wA = velocityA.w;\n  var vB = Vec2.clone(velocityB.v);\n  var wB = velocityB.w;\n\n  var normal = this.v_normal;\n  var tangent = Vec2.cross(normal, 1.0);\n  var friction = this.v_friction;\n\n  _ASSERT && common.assert(this.v_pointCount == 1 || this.v_pointCount == 2);\n\n  // Solve tangent constraints first because non-penetration is more important\n  // than friction.\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    var vcp = this.v_points[j]; // VelocityConstraintPoint\n\n    // Relative velocity at contact\n    var dv = Vec2.zero();\n    dv.addCombine(1, vB, 1, Vec2.cross(wB, vcp.rB));\n    dv.subCombine(1, vA, 1, Vec2.cross(wA, vcp.rA));\n\n    // Compute tangent force\n    var vt = Vec2.dot(dv, tangent) - this.v_tangentSpeed;\n    var lambda = vcp.tangentMass * (-vt);\n\n    // Clamp the accumulated force\n    var maxFriction = friction * vcp.normalImpulse;\n    var newImpulse = Math.clamp(vcp.tangentImpulse + lambda, -maxFriction,\n        maxFriction);\n    lambda = newImpulse - vcp.tangentImpulse;\n    vcp.tangentImpulse = newImpulse;\n\n    // Apply contact impulse\n    var P = Vec2.mul(lambda, tangent);\n\n    vA.subMul(mA, P);\n    wA -= iA * Vec2.cross(vcp.rA, P);\n\n    vB.addMul(mB, P);\n    wB += iB * Vec2.cross(vcp.rB, P);\n  }\n\n  // Solve normal constraints\n  if (this.v_pointCount == 1 || step.blockSolve == false) {\n    for (var i = 0; i < this.v_pointCount; ++i) {\n      var vcp = this.v_points[i]; // VelocityConstraintPoint\n\n      // Relative velocity at contact\n      var dv = Vec2.zero();\n      dv.addCombine(1, vB, 1, Vec2.cross(wB, vcp.rB));\n      dv.subCombine(1, vA, 1, Vec2.cross(wA, vcp.rA));\n\n      // Compute normal impulse\n      var vn = Vec2.dot(dv, normal);\n      var lambda = -vcp.normalMass * (vn - vcp.velocityBias);\n\n      // Clamp the accumulated impulse\n      var newImpulse = Math.max(vcp.normalImpulse + lambda, 0.0);\n      lambda = newImpulse - vcp.normalImpulse;\n      vcp.normalImpulse = newImpulse;\n\n      // Apply contact impulse\n      var P = Vec2.mul(lambda, normal);\n\n      vA.subMul(mA, P);\n      wA -= iA * Vec2.cross(vcp.rA, P);\n\n      vB.addMul(mB, P);\n      wB += iB * Vec2.cross(vcp.rB, P);\n    }\n  } else {\n    // Block solver developed in collaboration with Dirk Gregorius (back in\n    // 01/07 on Box2D_Lite).\n    // Build the mini LCP for this contact patch\n    //\n    // vn = A * x + b, vn >= 0, , vn >= 0, x >= 0 and vn_i * x_i = 0 with i =\n    // 1..2\n    //\n    // A = J * W * JT and J = ( -n, -r1 x n, n, r2 x n )\n    // b = vn0 - velocityBias\n    //\n    // The system is solved using the \"Total enumeration method\" (s. Murty).\n    // The complementary constraint vn_i * x_i\n    // implies that we must have in any solution either vn_i = 0 or x_i = 0.\n    // So for the 2D contact problem the cases\n    // vn1 = 0 and vn2 = 0, x1 = 0 and x2 = 0, x1 = 0 and vn2 = 0, x2 = 0 and\n    // vn1 = 0 need to be tested. The first valid\n    // solution that satisfies the problem is chosen.\n    // \n    // In order to account of the accumulated impulse 'a' (because of the\n    // iterative nature of the solver which only requires\n    // that the accumulated impulse is clamped and not the incremental\n    // impulse) we change the impulse variable (x_i).\n    //\n    // Substitute:\n    // \n    // x = a + d\n    // \n    // a := old total impulse\n    // x := new total impulse\n    // d := incremental impulse\n    //\n    // For the current iteration we extend the formula for the incremental\n    // impulse\n    // to compute the new total impulse:\n    //\n    // vn = A * d + b\n    // = A * (x - a) + b\n    // = A * x + b - A * a\n    // = A * x + b'\n    // b' = b - A * a;\n\n    var vcp1 = this.v_points[0]; // VelocityConstraintPoint\n    var vcp2 = this.v_points[1]; // VelocityConstraintPoint\n\n    var a = Vec2.neo(vcp1.normalImpulse, vcp2.normalImpulse);\n    _ASSERT && common.assert(a.x >= 0.0 && a.y >= 0.0);\n\n    // Relative velocity at contact\n    var dv1 = Vec2.zero().add(vB).add(Vec2.cross(wB, vcp1.rB)).sub(vA).sub(Vec2.cross(wA, vcp1.rA));\n    var dv2 = Vec2.zero().add(vB).add(Vec2.cross(wB, vcp2.rB)).sub(vA).sub(Vec2.cross(wA, vcp2.rA));\n\n    // Compute normal velocity\n    var vn1 = Vec2.dot(dv1, normal);\n    var vn2 = Vec2.dot(dv2, normal);\n\n    var b = Vec2.neo(vn1 - vcp1.velocityBias, vn2 - vcp2.velocityBias);\n\n    // Compute b'\n    b.sub(Mat22.mulVec2(this.v_K, a));\n\n    var k_errorTol = 1e-3;\n    // NOT_USED(k_errorTol);\n\n    for (;;) {\n      //\n      // Case 1: vn = 0\n      //\n      // 0 = A * x + b'\n      //\n      // Solve for x:\n      //\n      // x = - inv(A) * b'\n      //\n      var x = Mat22.mulVec2(this.v_normalMass, b).neg();\n\n      if (x.x >= 0.0 && x.y >= 0.0) {\n        // Get the incremental impulse\n        var d = Vec2.sub(x, a);\n\n        // Apply incremental impulse\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n\n        vA.subCombine(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n\n        vB.addCombine(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2));\n\n        // Accumulate\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        if (DEBUG_SOLVER) {\n          // Postconditions\n          dv1 = vB + Vec2.cross(wB, vcp1.rB) - vA - Vec2.cross(wA, vcp1.rA);\n          dv2 = vB + Vec2.cross(wB, vcp2.rB) - vA - Vec2.cross(wA, vcp2.rA);\n\n          // Compute normal velocity\n          vn1 = Dot(dv1, normal);\n          vn2 = Dot(dv2, normal);\n\n          _ASSERT && common.assert(Abs(vn1 - vcp1.velocityBias) < k_errorTol);\n          _ASSERT && common.assert(Abs(vn2 - vcp2.velocityBias) < k_errorTol);\n        }\n        break;\n      }\n\n      //\n      // Case 2: vn1 = 0 and x2 = 0\n      //\n      // 0 = a11 * x1 + a12 * 0 + b1'\n      // vn2 = a21 * x1 + a22 * 0 + b2'\n      //\n      x.x = -vcp1.normalMass * b.x;\n      x.y = 0.0;\n      vn1 = 0.0;\n      vn2 = this.v_K.ex.y * x.x + b.y;\n\n      if (x.x >= 0.0 && vn2 >= 0.0) {\n        // Get the incremental impulse\n        var d = Vec2.sub(x, a);\n\n        // Apply incremental impulse\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n        vA.subCombine(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n\n        vB.addCombine(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2));\n\n        // Accumulate\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        if (DEBUG_SOLVER) {\n          // Postconditions\n          var dv1B = Vec2.add(vB, Vec2.cross(wB, vcp1.rB));\n          var dv1A = Vec2.add(vA, Vec2.cross(wA, vcp1.rA));\n          var dv1 = Vec2.sub(dv1B, dv1A);\n\n          // Compute normal velocity\n          vn1 = Vec2.dot(dv1, normal);\n\n          _ASSERT && common.assert(Math.abs(vn1 - vcp1.velocityBias) < k_errorTol);\n        }\n        break;\n      }\n\n      //\n      // Case 3: vn2 = 0 and x1 = 0\n      //\n      // vn1 = a11 * 0 + a12 * x2 + b1'\n      // 0 = a21 * 0 + a22 * x2 + b2'\n      //\n      x.x = 0.0;\n      x.y = -vcp2.normalMass * b.y;\n      vn1 = this.v_K.ey.x * x.y + b.x;\n      vn2 = 0.0;\n\n      if (x.y >= 0.0 && vn1 >= 0.0) {\n        // Resubstitute for the incremental impulse\n        var d = Vec2.sub(x, a);\n\n        // Apply incremental impulse\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n        vA.subCombine(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n\n        vB.addCombine(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2));\n\n        // Accumulate\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        if (DEBUG_SOLVER) {\n          // Postconditions\n          var dv2B = Vec2.add(vB, Vec2.cross(wB, vcp2.rB));\n          var dv2A = Vec2.add(vA, Vec2.cross(wA, vcp2.rA));\n          var dv1 = Vec2.sub(dv2B, dv2A);\n\n          // Compute normal velocity\n          vn2 = Vec2.dot(dv2, normal);\n\n          _ASSERT && common.assert(Math.abs(vn2 - vcp2.velocityBias) < k_errorTol);\n        }\n        break;\n      }\n\n      //\n      // Case 4: x1 = 0 and x2 = 0\n      // \n      // vn1 = b1\n      // vn2 = b2;\n      //\n      x.x = 0.0;\n      x.y = 0.0;\n      vn1 = b.x;\n      vn2 = b.y;\n\n      if (vn1 >= 0.0 && vn2 >= 0.0) {\n        // Resubstitute for the incremental impulse\n        var d = Vec2.sub(x, a);\n\n        // Apply incremental impulse\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n        vA.subCombine(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n\n        vB.addCombine(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2));\n\n        // Accumulate\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        break;\n      }\n\n      // No solution, give up. This is hit sometimes, but it doesn't seem to\n      // matter.\n      break;\n    }\n  }\n\n  velocityA.v.set(vA);\n  velocityA.w = wA;\n\n  velocityB.v.set(vB);\n  velocityB.w = wB;\n};\n\n/**\n * Friction mixing law. The idea is to allow either fixture to drive the\n * restitution to zero. For example, anything slides on ice.\n */\nfunction mixFriction(friction1, friction2) {\n  return Math.sqrt(friction1 * friction2);\n}\n\n/**\n * Restitution mixing law. The idea is allow for anything to bounce off an\n * inelastic surface. For example, a superball bounces on anything.\n */\nfunction mixRestitution(restitution1, restitution2) {\n  return restitution1 > restitution2 ? restitution1 : restitution2;\n}\n\nvar s_registers = [];\n\n/**\n * @param fn function(fixtureA, indexA, fixtureB, indexB) Contact\n */\nContact.addType = function(type1, type2, callback) {\n\n  s_registers[type1] = s_registers[type1] || {};\n  s_registers[type1][type2] = callback;\n}\n\nContact.create = function(fixtureA, indexA, fixtureB, indexB) {\n  var typeA = fixtureA.getType(); // Shape.Type\n  var typeB = fixtureB.getType(); // Shape.Type\n\n  // TODO: pool contacts\n  var contact, evaluateFcn;\n  if (evaluateFcn = s_registers[typeA] && s_registers[typeA][typeB]) {\n    contact = new Contact(fixtureA, indexA, fixtureB, indexB, evaluateFcn);\n  } else if (evaluateFcn = s_registers[typeB] && s_registers[typeB][typeA]) {\n    contact = new Contact(fixtureB, indexB, fixtureA, indexA, evaluateFcn);\n  } else {\n    return null;\n  }\n\n  // Contact creation may swap fixtures.\n  fixtureA = contact.getFixtureA();\n  fixtureB = contact.getFixtureB();\n  indexA = contact.getChildIndexA();\n  indexB = contact.getChildIndexB();\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  // Connect to body A\n  contact.m_nodeA.contact = contact;\n  contact.m_nodeA.other = bodyB;\n\n  contact.m_nodeA.prev = null;\n  contact.m_nodeA.next = bodyA.m_contactList;\n  if (bodyA.m_contactList != null) {\n    bodyA.m_contactList.prev = contact.m_nodeA;\n  }\n  bodyA.m_contactList = contact.m_nodeA;\n\n  // Connect to body B\n  contact.m_nodeB.contact = contact;\n  contact.m_nodeB.other = bodyA;\n\n  contact.m_nodeB.prev = null;\n  contact.m_nodeB.next = bodyB.m_contactList;\n  if (bodyB.m_contactList != null) {\n    bodyB.m_contactList.prev = contact.m_nodeB;\n  }\n  bodyB.m_contactList = contact.m_nodeB;\n\n  // Wake up the bodies\n  if (fixtureA.isSensor() == false && fixtureB.isSensor() == false) {\n    bodyA.setAwake(true);\n    bodyB.setAwake(true);\n  }\n\n  return contact;\n}\n\nContact.destroy = function(contact, listener) {\n  var fixtureA = contact.m_fixtureA;\n  var fixtureB = contact.m_fixtureB;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  if (contact.isTouching()) {\n    listener.endContact(contact);\n  }\n\n  // Remove from body 1\n  if (contact.m_nodeA.prev) {\n    contact.m_nodeA.prev.next = contact.m_nodeA.next;\n  }\n\n  if (contact.m_nodeA.next) {\n    contact.m_nodeA.next.prev = contact.m_nodeA.prev;\n  }\n\n  if (contact.m_nodeA == bodyA.m_contactList) {\n    bodyA.m_contactList = contact.m_nodeA.next;\n  }\n\n  // Remove from body 2\n  if (contact.m_nodeB.prev) {\n    contact.m_nodeB.prev.next = contact.m_nodeB.next;\n  }\n\n  if (contact.m_nodeB.next) {\n    contact.m_nodeB.next.prev = contact.m_nodeB.prev;\n  }\n\n  if (contact.m_nodeB == bodyB.m_contactList) {\n    bodyB.m_contactList = contact.m_nodeB.next;\n  }\n\n  if (contact.m_manifold.pointCount > 0 && fixtureA.isSensor() == false\n      && fixtureB.isSensor() == false) {\n    bodyA.setAwake(true);\n    bodyB.setAwake(true);\n  }\n\n  var typeA = fixtureA.getType(); // Shape.Type\n  var typeB = fixtureB.getType(); // Shape.Type\n\n  var destroyFcn = s_registers[typeA][typeB].destroyFcn;\n  if (typeof destroyFcn === 'function') {\n    destroyFcn(contact);\n  }\n};\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default Joint;\n\nimport common from './util/common';\n\n/**\n * A joint edge is used to connect bodies and joints together in a joint graph\n * where each body is a node and each joint is an edge. A joint edge belongs to\n * a doubly linked list maintained in each attached body. Each joint has two\n * joint nodes, one for each attached body.\n * \n * @prop {Body} other provides quick access to the other body attached.\n * @prop {Joint} joint the joint\n * @prop {JointEdge} prev the previous joint edge in the body's joint list\n * @prop {JointEdge} next the next joint edge in the body's joint list\n */\nfunction JointEdge() {\n  this.other = null;\n  this.joint = null;\n  this.prev = null;\n  this.next = null;\n};\n\n/**\n * @typedef {Object} JointDef\n *\n * Joint definitions are used to construct joints.\n * \n * @prop userData Use this to attach application specific data to your joints.\n *       void userData;\n * @prop {boolean} collideConnected Set this flag to true if the attached bodies\n *       should collide.\n *\n * @prop {Body} bodyA The first attached body.\n * @prop {Body} bodyB The second attached body.\n */\n\nvar DEFAULTS = {\n  userData : null,\n  collideConnected : false\n};\n\n/**\n * The base joint class. Joints are used to constraint two bodies together in\n * various fashions. Some joints also feature limits and motors.\n * \n * @param {JointDef} def\n */\nfunction Joint(def, bodyA, bodyB) {\n  bodyA = def.bodyA || bodyA;\n  bodyB = def.bodyB || bodyB;\n\n  _ASSERT && common.assert(bodyA);\n  _ASSERT && common.assert(bodyB);\n  _ASSERT && common.assert(bodyA != bodyB);\n\n  this.m_type = 'unknown-joint';\n\n  this.m_bodyA = bodyA;\n  this.m_bodyB = bodyB;\n\n  this.m_index = 0;\n  this.m_collideConnected = !!def.collideConnected;\n\n  this.m_prev = null;\n  this.m_next = null;\n\n  this.m_edgeA = new JointEdge();\n  this.m_edgeB = new JointEdge();\n\n  this.m_islandFlag = false;\n  this.m_userData = def.userData;\n};\n\nJoint.TYPES = {};\n\nJoint._deserialize = function(data, context, restore) {\n  var clazz = Joint.TYPES[data.type];\n  return clazz && restore(clazz, data);\n};\n\n/**\n * Short-cut function to determine if either body is inactive.\n * \n * @returns {boolean}\n */\nJoint.prototype.isActive = function() {\n  return this.m_bodyA.isActive() && this.m_bodyB.isActive();\n}\n\n/**\n * Get the type of the concrete joint.\n * \n * @returns JointType\n */\nJoint.prototype.getType = function() {\n  return this.m_type;\n}\n\n/**\n * Get the first body attached to this joint.\n * \n * @returns Body\n */\nJoint.prototype.getBodyA = function() {\n  return this.m_bodyA;\n}\n\n/**\n * Get the second body attached to this joint.\n * \n * @returns Body\n */\nJoint.prototype.getBodyB = function() {\n  return this.m_bodyB;\n}\n\n/**\n * Get the next joint the world joint list.\n * \n * @returns Joint\n */\nJoint.prototype.getNext = function() {\n  return this.m_next;\n}\n\nJoint.prototype.getUserData = function() {\n  return this.m_userData;\n}\n\nJoint.prototype.setUserData = function(data) {\n  this.m_userData = data;\n}\n\n/**\n * Get collide connected. Note: modifying the collide connect flag won't work\n * correctly because the flag is only checked when fixture AABBs begin to\n * overlap.\n * \n * @returns {boolean}\n */\nJoint.prototype.getCollideConnected = function() {\n  return this.m_collideConnected;\n};\n\n/**\n * Get the anchor point on bodyA in world coordinates.\n * \n * @return {Vec2}\n */\nJoint.prototype.getAnchorA = function() {\n};\n\n/**\n * Get the anchor point on bodyB in world coordinates.\n * \n * @return {Vec2}\n */\nJoint.prototype.getAnchorB = function() {\n};\n\n/**\n * Get the reaction force on bodyB at the joint anchor in Newtons.\n * \n * @param {float} inv_dt\n * @return {Vec2}\n */\nJoint.prototype.getReactionForce = function(inv_dt) {\n};\n\n/**\n * Get the reaction torque on bodyB in N*m.\n * \n * @param {float} inv_dt\n * @return {float}\n */\nJoint.prototype.getReactionTorque = function(inv_dt) {\n};\n\n/**\n * Shift the origin for any points stored in world coordinates.\n * \n * @param {Vec2} newOrigin\n */\nJoint.prototype.shiftOrigin = function(newOrigin) {\n};\n\n/**\n */\nJoint.prototype.initVelocityConstraints = function(step) {\n};\n\n/**\n */\nJoint.prototype.solveVelocityConstraints = function(step) {\n};\n\n/**\n * This returns true if the position errors are within tolerance.\n */\nJoint.prototype.solvePositionConstraints = function(step) {\n};\n","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport const now = function() {\n  return Date.now();\n};\n\nexport const diff = function(time) {\n  return Date.now() - time;\n};\n\nexport default {\n  now,\n  diff,\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default TimeOfImpact;\n\nTimeOfImpact.Input = TOIInput;\nTimeOfImpact.Output = TOIOutput;\n\nimport Settings from '../Settings';\n\nimport common from '../util/common';\nimport stats from '../util/stats';\nimport Timer from '../util/Timer';\n\nimport Math from '../common/Math';\nimport Vec2 from '../common/Vec2';\nimport Vec3 from '../common/Vec3';\nimport Mat22 from '../common/Mat22';\nimport Mat33 from '../common/Mat33';\nimport Rot from '../common/Rot';\nimport Sweep from '../common/Sweep';\nimport Transform from '../common/Transform';\nimport Velocity from '../common/Velocity';\nimport Position from '../common/Position';\n\nimport Distance from './Distance';\n\nvar DistanceInput = Distance.Input;\nvar DistanceOutput = Distance.Output;\nvar DistanceProxy = Distance.Proxy;\nvar SimplexCache = Distance.Cache;\n\n/**\n * Input parameters for TimeOfImpact.\n * \n * @prop {DistanceProxy} proxyA\n * @prop {DistanceProxy} proxyB\n * @prop {Sweep} sweepA\n * @prop {Sweep} sweepB\n * @prop tMax defines sweep interval [0, tMax]\n */\nfunction TOIInput() {\n  this.proxyA = new DistanceProxy();\n  this.proxyB = new DistanceProxy();\n  this.sweepA = new Sweep();\n  this.sweepB = new Sweep();\n  this.tMax;\n};\n\n// TOIOutput State\nTOIOutput.e_unknown = 0;\nTOIOutput.e_failed = 1;\nTOIOutput.e_overlapped = 2;\nTOIOutput.e_touching = 3;\nTOIOutput.e_separated = 4;\n\n/**\n * Output parameters for TimeOfImpact.\n * \n * @prop state\n * @prop t\n */\nfunction TOIOutput() {\n  this.state;\n  this.t;\n};\n\nstats.toiTime = 0;\nstats.toiMaxTime = 0;\nstats.toiCalls = 0;\nstats.toiIters = 0;\nstats.toiMaxIters = 0;\nstats.toiRootIters = 0;\nstats.toiMaxRootIters = 0;\n\n/**\n * Compute the upper bound on time before two shapes penetrate. Time is\n * represented as a fraction between [0,tMax]. This uses a swept separating axis\n * and may miss some intermediate, non-tunneling collision. If you change the\n * time interval, you should call this function again.\n * \n * Note: use Distance to compute the contact point and normal at the time of\n * impact.\n * \n * CCD via the local separating axis method. This seeks progression by computing\n * the largest time at which separation is maintained.\n */\nfunction TimeOfImpact(output, input) {\n  var timer = Timer.now();\n\n  ++stats.toiCalls;\n\n  output.state = TOIOutput.e_unknown;\n  output.t = input.tMax;\n\n  var proxyA = input.proxyA; // DistanceProxy\n  var proxyB = input.proxyB; // DistanceProxy\n\n  var sweepA = input.sweepA; // Sweep\n  var sweepB = input.sweepB; // Sweep\n\n  // Large rotations can make the root finder fail, so we normalize the\n  // sweep angles.\n  sweepA.normalize();\n  sweepB.normalize();\n\n  var tMax = input.tMax;\n\n  var totalRadius = proxyA.m_radius + proxyB.m_radius;\n  var target = Math.max(Settings.linearSlop, totalRadius - 3.0 * Settings.linearSlop);\n  var tolerance = 0.25 * Settings.linearSlop;\n  _ASSERT && common.assert(target > tolerance);\n\n  var t1 = 0.0;\n  var k_maxIterations = Settings.maxTOIIterations;\n  var iter = 0;\n\n  // Prepare input for distance query.\n  var cache = new SimplexCache();\n\n  var distanceInput = new DistanceInput();\n  distanceInput.proxyA = input.proxyA;\n  distanceInput.proxyB = input.proxyB;\n  distanceInput.useRadii = false;\n\n  // The outer loop progressively attempts to compute new separating axes.\n  // This loop terminates when an axis is repeated (no progress is made).\n  for (;;) {\n    var xfA = Transform.identity();\n    var xfB = Transform.identity();\n    sweepA.getTransform(xfA, t1);\n    sweepB.getTransform(xfB, t1);\n\n    // Get the distance between shapes. We can also use the results\n    // to get a separating axis.\n    distanceInput.transformA = xfA;\n    distanceInput.transformB = xfB;\n    var distanceOutput = new DistanceOutput();\n    Distance(distanceOutput, cache, distanceInput);\n\n    // If the shapes are overlapped, we give up on continuous collision.\n    if (distanceOutput.distance <= 0.0) {\n      // Failure!\n      output.state = TOIOutput.e_overlapped;\n      output.t = 0.0;\n      break;\n    }\n\n    if (distanceOutput.distance < target + tolerance) {\n      // Victory!\n      output.state = TOIOutput.e_touching;\n      output.t = t1;\n      break;\n    }\n\n    // Initialize the separating axis.\n    var fcn = new SeparationFunction();\n    fcn.initialize(cache, proxyA, sweepA, proxyB, sweepB, t1);\n\n    // if (false) {\n    //   // Dump the curve seen by the root finder\n    //   var N = 100;\n    //   var dx = 1.0 / N;\n    //   var xs = []; // [ N + 1 ];\n    //   var fs = []; // [ N + 1 ];\n    //   var x = 0.0;\n    //   for (var i = 0; i <= N; ++i) {\n    //     sweepA.getTransform(xfA, x);\n    //     sweepB.getTransform(xfB, x);\n    //     var f = fcn.evaluate(xfA, xfB) - target;\n    //     printf(\"%g %g\\n\", x, f);\n    //     xs[i] = x;\n    //     fs[i] = f;\n    //     x += dx;\n    //   }\n    // }\n\n    // Compute the TOI on the separating axis. We do this by successively\n    // resolving the deepest point. This loop is bounded by the number of\n    // vertices.\n    var done = false;\n    var t2 = tMax;\n    var pushBackIter = 0;\n    for (;;) {\n      // Find the deepest point at t2. Store the witness point indices.\n      var s2 = fcn.findMinSeparation(t2);\n      var indexA = fcn.indexA;\n      var indexB = fcn.indexB;\n\n      // Is the final configuration separated?\n      if (s2 > target + tolerance) {\n        // Victory!\n        output.state = TOIOutput.e_separated;\n        output.t = tMax;\n        done = true;\n        break;\n      }\n\n      // Has the separation reached tolerance?\n      if (s2 > target - tolerance) {\n        // Advance the sweeps\n        t1 = t2;\n        break;\n      }\n\n      // Compute the initial separation of the witness points.\n      var s1 = fcn.evaluate(t1);\n      var indexA = fcn.indexA;\n      var indexB = fcn.indexB;\n\n      // Check for initial overlap. This might happen if the root finder\n      // runs out of iterations.\n      if (s1 < target - tolerance) {\n        output.state = TOIOutput.e_failed;\n        output.t = t1;\n        done = true;\n        break;\n      }\n\n      // Check for touching\n      if (s1 <= target + tolerance) {\n        // Victory! t1 should hold the TOI (could be 0.0).\n        output.state = TOIOutput.e_touching;\n        output.t = t1;\n        done = true;\n        break;\n      }\n\n      // Compute 1D root of: f(x) - target = 0\n      var rootIterCount = 0;\n      var a1 = t1, a2 = t2;\n      for (;;) {\n        // Use a mix of the secant rule and bisection.\n        var t;\n        if (rootIterCount & 1) {\n          // Secant rule to improve convergence.\n          t = a1 + (target - s1) * (a2 - a1) / (s2 - s1);\n        } else {\n          // Bisection to guarantee progress.\n          t = 0.5 * (a1 + a2);\n        }\n\n        ++rootIterCount;\n        ++stats.toiRootIters;\n\n        var s = fcn.evaluate(t);\n        var indexA = fcn.indexA;\n        var indexB = fcn.indexB;\n\n        if (Math.abs(s - target) < tolerance) {\n          // t2 holds a tentative value for t1\n          t2 = t;\n          break;\n        }\n\n        // Ensure we continue to bracket the root.\n        if (s > target) {\n          a1 = t;\n          s1 = s;\n        } else {\n          a2 = t;\n          s2 = s;\n        }\n\n        if (rootIterCount == 50) {\n          break;\n        }\n      }\n\n      stats.toiMaxRootIters = Math.max(stats.toiMaxRootIters, rootIterCount);\n\n      ++pushBackIter;\n\n      if (pushBackIter == Settings.maxPolygonVertices) {\n        break;\n      }\n    }\n\n    ++iter;\n    ++stats.toiIters;\n\n    if (done) {\n      break;\n    }\n\n    if (iter == k_maxIterations) {\n      // Root finder got stuck. Semi-victory.\n      output.state = TOIOutput.e_failed;\n      output.t = t1;\n      break;\n    }\n  }\n\n  stats.toiMaxIters = Math.max(stats.toiMaxIters, iter);\n\n  var time = Timer.diff(timer);\n  stats.toiMaxTime = Math.max(stats.toiMaxTime, time);\n  stats.toiTime += time;\n}\n\n// SeparationFunction Type\nvar e_points = 1;\nvar e_faceA = 2;\nvar e_faceB = 3;\n\nfunction SeparationFunction() {\n  this.m_proxyA = new DistanceProxy();\n  this.m_proxyB = new DistanceProxy();\n  this.m_sweepA;// Sweep\n  this.m_sweepB;// Sweep\n  this.indexA;// integer\n  this.indexB;// integer\n  this.m_type;\n  this.m_localPoint = Vec2.zero();\n  this.m_axis = Vec2.zero();\n};\n\n// TODO_ERIN might not need to return the separation\n\n/**\n * @param {SimplexCache} cache\n * @param {DistanceProxy} proxyA\n * @param {Sweep} sweepA\n * @param {DistanceProxy} proxyB\n * @param {Sweep} sweepB\n * @param {float} t1\n */\nSeparationFunction.prototype.initialize = function(cache, proxyA, sweepA, proxyB, sweepB, t1) {\n  this.m_proxyA = proxyA;\n  this.m_proxyB = proxyB;\n  var count = cache.count;\n  _ASSERT && common.assert(0 < count && count < 3);\n\n  this.m_sweepA = sweepA;\n  this.m_sweepB = sweepB;\n\n  var xfA = Transform.identity();\n  var xfB = Transform.identity();\n  this.m_sweepA.getTransform(xfA, t1);\n  this.m_sweepB.getTransform(xfB, t1);\n\n  if (count == 1) {\n    this.m_type = e_points;\n    var localPointA = this.m_proxyA.getVertex(cache.indexA[0]);\n    var localPointB = this.m_proxyB.getVertex(cache.indexB[0]);\n    var pointA = Transform.mulVec2(xfA, localPointA);\n    var pointB = Transform.mulVec2(xfB, localPointB);\n    this.m_axis.setCombine(1, pointB, -1, pointA);\n    var s = this.m_axis.normalize();\n    return s;\n\n  } else if (cache.indexA[0] == cache.indexA[1]) {\n    // Two points on B and one on A.\n    this.m_type = e_faceB;\n    var localPointB1 = proxyB.getVertex(cache.indexB[0]);\n    var localPointB2 = proxyB.getVertex(cache.indexB[1]);\n\n    this.m_axis = Vec2.cross(Vec2.sub(localPointB2, localPointB1), 1.0);\n    this.m_axis.normalize();\n    var normal = Rot.mulVec2(xfB.q, this.m_axis);\n\n    this.m_localPoint = Vec2.mid(localPointB1, localPointB2);\n    var pointB = Transform.mulVec2(xfB, this.m_localPoint);\n\n    var localPointA = proxyA.getVertex(cache.indexA[0]);\n    var pointA = Transform.mulVec2(xfA, localPointA);\n\n    var s = Vec2.dot(pointA, normal) - Vec2.dot(pointB, normal);\n    if (s < 0.0) {\n      this.m_axis = Vec2.neg(this.m_axis);\n      s = -s;\n    }\n    return s;\n\n  } else {\n    // Two points on A and one or two points on B.\n    this.m_type = e_faceA;\n    var localPointA1 = this.m_proxyA.getVertex(cache.indexA[0]);\n    var localPointA2 = this.m_proxyA.getVertex(cache.indexA[1]);\n\n    this.m_axis = Vec2.cross(Vec2.sub(localPointA2, localPointA1), 1.0);\n    this.m_axis.normalize();\n    var normal = Rot.mulVec2(xfA.q, this.m_axis);\n\n    this.m_localPoint = Vec2.mid(localPointA1, localPointA2);\n    var pointA = Transform.mulVec2(xfA, this.m_localPoint);\n\n    var localPointB = this.m_proxyB.getVertex(cache.indexB[0]);\n    var pointB = Transform.mulVec2(xfB, localPointB);\n\n    var s = Vec2.dot(pointB, normal) - Vec2.dot(pointA, normal);\n    if (s < 0.0) {\n      this.m_axis = Vec2.neg(this.m_axis);\n      s = -s;\n    }\n    return s;\n  }\n};\n\nSeparationFunction.prototype.compute = function(find, t) {\n  // It was findMinSeparation and evaluate\n  var xfA = Transform.identity();\n  var xfB = Transform.identity();\n  this.m_sweepA.getTransform(xfA, t);\n  this.m_sweepB.getTransform(xfB, t);\n\n  switch (this.m_type) {\n  case e_points: {\n    if (find) {\n      var axisA = Rot.mulTVec2(xfA.q, this.m_axis);\n      var axisB = Rot.mulTVec2(xfB.q, Vec2.neg(this.m_axis));\n\n      this.indexA = this.m_proxyA.getSupport(axisA);\n      this.indexB = this.m_proxyB.getSupport(axisB);\n    }\n\n    var localPointA = this.m_proxyA.getVertex(this.indexA);\n    var localPointB = this.m_proxyB.getVertex(this.indexB);\n\n    var pointA = Transform.mulVec2(xfA, localPointA);\n    var pointB = Transform.mulVec2(xfB, localPointB);\n\n    var sep = Vec2.dot(pointB, this.m_axis) - Vec2.dot(pointA, this.m_axis);\n    return sep;\n  }\n\n  case e_faceA: {\n    var normal = Rot.mulVec2(xfA.q, this.m_axis);\n    var pointA = Transform.mulVec2(xfA, this.m_localPoint);\n\n    if (find) {\n      var axisB = Rot.mulTVec2(xfB.q, Vec2.neg(normal));\n\n      this.indexA = -1;\n      this.indexB = this.m_proxyB.getSupport(axisB);\n    }\n\n    var localPointB = this.m_proxyB.getVertex(this.indexB);\n    var pointB = Transform.mulVec2(xfB, localPointB);\n\n    var sep = Vec2.dot(pointB, normal) - Vec2.dot(pointA, normal);\n    return sep;\n  }\n\n  case e_faceB: {\n    var normal = Rot.mulVec2(xfB.q, this.m_axis);\n    var pointB = Transform.mulVec2(xfB, this.m_localPoint);\n\n    if (find) {\n      var axisA = Rot.mulTVec2(xfA.q, Vec2.neg(normal));\n\n      this.indexB = -1;\n      this.indexA = this.m_proxyA.getSupport(axisA);\n    }\n\n    var localPointA = this.m_proxyA.getVertex(this.indexA);\n    var pointA = Transform.mulVec2(xfA, localPointA);\n\n    var sep = Vec2.dot(pointA, normal) - Vec2.dot(pointB, normal);\n    return sep;\n  }\n\n  default:\n    _ASSERT && common.assert(false);\n    if (find) {\n      this.indexA = -1;\n      this.indexB = -1;\n    }\n    return 0.0;\n  }\n};\n\nSeparationFunction.prototype.findMinSeparation = function(t) {\n  return this.compute(true, t);\n};\n\nSeparationFunction.prototype.evaluate = function(t) {\n  return this.compute(false, t);\n};\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default Solver;\n\nSolver.TimeStep = TimeStep;\n\nimport Settings from './Settings';\nimport common from './util/common';\n\nimport Vec2 from './common/Vec2';\nimport Math from './common/Math';\n\nimport Body from './Body';\nimport Contact from './Contact';\nimport Joint from './Joint';\n\nimport TimeOfImpact from './collision/TimeOfImpact';\nvar TOIInput = TimeOfImpact.Input;\nvar TOIOutput = TimeOfImpact.Output;\n\nimport Distance from './collision/Distance';\nvar DistanceInput = Distance.Input;\nvar DistanceOutput = Distance.Output;\nvar DistanceProxy = Distance.Proxy;\nvar SimplexCache = Distance.Cache;\n\nfunction TimeStep(dt) {\n  this.dt = 0; // time step\n  this.inv_dt = 0; // inverse time step (0 if dt == 0)\n  this.velocityIterations = 0;\n  this.positionIterations = 0;\n  this.warmStarting = false;\n  this.blockSolve = true;\n\n  // timestep ratio for variable timestep\n  this.inv_dt0 = 0.0;\n  this.dtRatio = 1; // dt * inv_dt0\n}\n\nTimeStep.prototype.reset = function(dt) {\n  if (this.dt > 0.0) {\n    this.inv_dt0 = this.inv_dt;\n  }\n  this.dt = dt;\n  this.inv_dt = dt == 0 ? 0 : 1 / dt;\n  this.dtRatio = dt * this.inv_dt0;\n}\n\n/**\n * Finds and solves islands. An island is a connected subset of the world.\n * \n * @param {World} world\n */\nfunction Solver(world) {\n  this.m_world = world;\n  this.m_stack = [];\n  this.m_bodies = [];\n  this.m_contacts = [];\n  this.m_joints = [];\n}\n\nSolver.prototype.clear = function() {\n  this.m_stack.length = 0;\n  this.m_bodies.length = 0;\n  this.m_contacts.length = 0;\n  this.m_joints.length = 0;\n}\n\nSolver.prototype.addBody = function(body) {\n  _ASSERT && common.assert(body instanceof Body, 'Not a Body!', body);\n  this.m_bodies.push(body);\n  // why?\n//  body.c_position.c.setZero();\n//  body.c_position.a = 0;\n//  body.c_velocity.v.setZero();\n//  body.c_velocity.w = 0;\n};\n\nSolver.prototype.addContact = function(contact) {\n  _ASSERT && common.assert(contact instanceof Contact, 'Not a Contact!', contact);\n  this.m_contacts.push(contact);\n};\n\nSolver.prototype.addJoint = function(joint) {\n  _ASSERT && common.assert(joint instanceof Joint, 'Not a Joint!', joint);\n  this.m_joints.push(joint);\n};\n\n/**\n * @param {TimeStep} step\n */\nSolver.prototype.solveWorld = function(step) {\n  var world = this.m_world;\n\n  // Clear all the island flags.\n  for (var b = world.m_bodyList; b; b = b.m_next) {\n    b.m_islandFlag = false;\n  }\n  for (var c = world.m_contactList; c; c = c.m_next) {\n    c.m_islandFlag = false;\n  }\n  for (var j = world.m_jointList; j; j = j.m_next) {\n    j.m_islandFlag = false;\n  }\n\n  // Build and simulate all awake islands.\n  var stack = this.m_stack;\n  var loop = -1;\n  for (var seed = world.m_bodyList; seed; seed = seed.m_next) {\n    loop++;\n    if (seed.m_islandFlag) {\n      continue;\n    }\n\n    if (seed.isAwake() == false || seed.isActive() == false) {\n      continue;\n    }\n\n    // The seed can be dynamic or kinematic.\n    if (seed.isStatic()) {\n      continue;\n    }\n\n    // Reset island and stack.\n    this.clear();\n\n    stack.push(seed);\n\n    seed.m_islandFlag = true;\n\n    // Perform a depth first search (DFS) on the constraint graph.\n    while (stack.length > 0) {\n      // Grab the next body off the stack and add it to the island.\n      var b = stack.pop();\n      _ASSERT && common.assert(b.isActive() == true);\n      this.addBody(b);\n\n      // Make sure the body is awake.\n      b.setAwake(true);\n\n      // To keep islands as small as possible, we don't\n      // propagate islands across static bodies.\n      if (b.isStatic()) {\n        continue;\n      }\n      \n      // Search all contacts connected to this body.\n      for (var ce = b.m_contactList; ce; ce = ce.next) {\n        var contact = ce.contact;\n\n        // Has this contact already been added to an island?\n        if (contact.m_islandFlag) {\n          continue;\n        }\n\n        // Is this contact solid and touching?\n        if (contact.isEnabled() == false || contact.isTouching() == false) {\n          continue;\n        }\n\n        // Skip sensors.\n        var sensorA = contact.m_fixtureA.m_isSensor;\n        var sensorB = contact.m_fixtureB.m_isSensor;\n        if (sensorA || sensorB) {\n          continue;\n        }\n\n        this.addContact(contact);\n        contact.m_islandFlag = true;\n\n        var other = ce.other;\n\n        // Was the other body already added to this island?\n        if (other.m_islandFlag) {\n          continue;\n        }\n\n        // _ASSERT && common.assert(stack.length < world.m_bodyCount);\n        stack.push(other);\n        other.m_islandFlag = true;\n      }\n\n      // Search all joints connect to this body.\n      for (var je = b.m_jointList; je; je = je.next) {\n        if (je.joint.m_islandFlag == true) {\n          continue;\n        }\n\n        var other = je.other;\n\n        // Don't simulate joints connected to inactive bodies.\n        if (other.isActive() == false) {\n          continue;\n        }\n\n        this.addJoint(je.joint);\n        je.joint.m_islandFlag = true;\n\n        if (other.m_islandFlag) {\n          continue;\n        }\n\n        // _ASSERT && common.assert(stack.length < world.m_bodyCount);\n        stack.push(other);\n        other.m_islandFlag = true;\n      }\n    }\n\n    this.solveIsland(step);\n\n    // Post solve cleanup.\n    for (var i = 0; i < this.m_bodies.length; ++i) {\n      // Allow static bodies to participate in other islands.\n      // TODO: are they added at all?\n      var b = this.m_bodies[i];\n      if (b.isStatic()) {\n        b.m_islandFlag = false;\n      }\n    }\n  }\n}\n\n/**\n * @param {TimeStep} step\n */\nSolver.prototype.solveIsland = function(step) {\n  // B2: Island Solve\n  var world = this.m_world;\n  var gravity = world.m_gravity;\n  var allowSleep = world.m_allowSleep;\n\n  var h = step.dt;\n\n  // Integrate velocities and apply damping. Initialize the body state.\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n\n    var c = Vec2.clone(body.m_sweep.c);\n    var a = body.m_sweep.a;\n    var v = Vec2.clone(body.m_linearVelocity);\n    var w = body.m_angularVelocity;\n\n    // Store positions for continuous collision.\n    body.m_sweep.c0.set(body.m_sweep.c);\n    body.m_sweep.a0 = body.m_sweep.a;\n\n    if (body.isDynamic()) {\n      // Integrate velocities.\n      v.addMul(h * body.m_gravityScale, gravity);\n      v.addMul(h * body.m_invMass, body.m_force);\n      w += h * body.m_invI * body.m_torque;\n      /**\n       * <pre>\n       * Apply damping.\n       * ODE: dv/dt + c * v = 0\n       * Solution: v(t) = v0 * exp(-c * t)\n       * Time step: v(t + dt) = v0 * exp(-c * (t + dt)) = v0 * exp(-c * t) * exp(-c * dt) = v * exp(-c * dt)\n       * v2 = exp(-c * dt) * v1\n       * Pade approximation:\n       * v2 = v1 * 1 / (1 + c * dt)\n       * </pre>\n       */\n      v.mul(1.0 / (1.0 + h * body.m_linearDamping));\n      w *= 1.0 / (1.0 + h * body.m_angularDamping);\n    }\n\n    body.c_position.c = c;\n    body.c_position.a = a;\n    body.c_velocity.v = v;\n    body.c_velocity.w = w;\n  }\n\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initConstraint(step);\n  }\n\n  _DEBUG && this.printBodies('M: ');\n\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initVelocityConstraint(step);\n  }\n\n  _DEBUG && this.printBodies('R: ');\n\n  if (step.warmStarting) {\n    // Warm start.\n    for (var i = 0; i < this.m_contacts.length; ++i) {\n      var contact = this.m_contacts[i];\n      contact.warmStartConstraint(step);\n    }\n  }\n\n  _DEBUG && this.printBodies('Q: ');\n  \n  for (var i = 0; i < this.m_joints.length; ++i) {\n    var joint = this.m_joints[i];\n    joint.initVelocityConstraints(step);\n  }\n\n  _DEBUG && this.printBodies('E: ');\n\n  // Solve velocity constraints\n  for (var i = 0; i < step.velocityIterations; ++i) {\n    for (var j = 0; j < this.m_joints.length; ++j) {\n      var joint = this.m_joints[j];\n      joint.solveVelocityConstraints(step);\n    }\n\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      contact.solveVelocityConstraint(step);\n    }\n  }\n\n  _DEBUG && this.printBodies('D: ');\n\n  // Store impulses for warm starting\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.storeConstraintImpulses(step);\n  }\n\n  _DEBUG && this.printBodies('C: ');\n\n  // Integrate positions\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n\n    var c = Vec2.clone(body.c_position.c);\n    var a = body.c_position.a;\n    var v = Vec2.clone(body.c_velocity.v);\n    var w = body.c_velocity.w;\n\n    // Check for large velocities\n    var translation = Vec2.mul(h, v);\n    if (Vec2.lengthSquared(translation) > Settings.maxTranslationSquared) {\n      var ratio = Settings.maxTranslation / translation.length();\n      v.mul(ratio);\n    }\n\n    var rotation = h * w;\n    if (rotation * rotation > Settings.maxRotationSquared) {\n      var ratio = Settings.maxRotation / Math.abs(rotation);\n      w *= ratio;\n    }\n\n    // Integrate\n    c.addMul(h, v);\n    a += h * w;\n\n    body.c_position.c.set(c);\n    body.c_position.a = a;\n    body.c_velocity.v.set(v);\n    body.c_velocity.w = w;\n  }\n\n  _DEBUG && this.printBodies('B: ');\n\n  // Solve position constraints\n  var positionSolved = false;\n  for (var i = 0; i < step.positionIterations; ++i) {\n    var minSeparation = 0.0;\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      var separation = contact.solvePositionConstraint(step);\n      minSeparation = Math.min(minSeparation, separation);\n    }\n    // We can't expect minSpeparation >= -Settings.linearSlop because we don't\n    // push the separation above -Settings.linearSlop.\n    var contactsOkay = minSeparation >= -3.0 * Settings.linearSlop;\n\n    var jointsOkay = true;\n    for (var j = 0; j < this.m_joints.length; ++j) {\n      var joint = this.m_joints[j];\n      var jointOkay = joint.solvePositionConstraints(step);\n      jointsOkay = jointsOkay && jointOkay;\n    }\n\n    if (contactsOkay && jointsOkay) {\n      // Exit early if the position errors are small.\n      positionSolved = true;\n      break;\n    }\n  }\n\n  _DEBUG && this.printBodies('L: ');\n\n  // Copy state buffers back to the bodies\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n\n    body.m_sweep.c.set(body.c_position.c);\n    body.m_sweep.a = body.c_position.a;\n    body.m_linearVelocity.set(body.c_velocity.v);\n    body.m_angularVelocity = body.c_velocity.w;\n    body.synchronizeTransform();\n  }\n\n  this.postSolveIsland();\n\n  if (allowSleep) {\n    var minSleepTime = Infinity;\n\n    var linTolSqr = Settings.linearSleepToleranceSqr;\n    var angTolSqr = Settings.angularSleepToleranceSqr;\n\n    for (var i = 0; i < this.m_bodies.length; ++i) {\n      var body = this.m_bodies[i];\n      if (body.isStatic()) {\n        continue;\n      }\n\n      if ((body.m_autoSleepFlag == false)\n          || (body.m_angularVelocity * body.m_angularVelocity > angTolSqr)\n          || (Vec2.lengthSquared(body.m_linearVelocity) > linTolSqr)) {\n        body.m_sleepTime = 0.0;\n        minSleepTime = 0.0;\n      } else {\n        body.m_sleepTime += h;\n        minSleepTime = Math.min(minSleepTime, body.m_sleepTime);\n      }\n    }\n\n    if (minSleepTime >= Settings.timeToSleep && positionSolved) {\n      for (var i = 0; i < this.m_bodies.length; ++i) {\n        var body = this.m_bodies[i];\n        body.setAwake(false);\n      }\n    }\n  }\n};\n\nSolver.prototype.printBodies = function(tag) {\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var b = this.m_bodies[i];\n    common.debug(tag, b.c_position.a, b.c_position.c.x, b.c_position.c.y, b.c_velocity.w, b.c_velocity.v.x, b.c_velocity.v.y);\n  }\n};\n\nvar s_subStep = new TimeStep(); // reuse\n\n/**\n * Find TOI contacts and solve them.\n *\n * @param {TimeStep} step\n */\nSolver.prototype.solveWorldTOI = function(step) {\n  var world = this.m_world;\n\n  if (world.m_stepComplete) {\n    for (var b = world.m_bodyList; b; b = b.m_next) {\n      b.m_islandFlag = false;\n      b.m_sweep.alpha0 = 0.0;\n    }\n\n    for (var c = world.m_contactList; c; c = c.m_next) {\n      // Invalidate TOI\n      c.m_toiFlag = false;\n      c.m_islandFlag = false;\n      c.m_toiCount = 0;\n      c.m_toi = 1.0;\n    }\n  }\n\n  // Find TOI events and solve them.\n  for (;;) {\n    // Find the first TOI.\n    var minContact = null; // Contact\n    var minAlpha = 1.0;\n\n    for (var c = world.m_contactList; c; c = c.m_next) {\n      // Is this contact disabled?\n      if (c.isEnabled() == false) {\n        continue;\n      }\n\n      // Prevent excessive sub-stepping.\n      if (c.m_toiCount > Settings.maxSubSteps) {\n        continue;\n      }\n\n      var alpha = 1.0;\n      if (c.m_toiFlag) {\n        // This contact has a valid cached TOI.\n        alpha = c.m_toi;\n      } else {\n        var fA = c.getFixtureA();\n        var fB = c.getFixtureB();\n\n        // Is there a sensor?\n        if (fA.isSensor() || fB.isSensor()) {\n          continue;\n        }\n\n        var bA = fA.getBody();\n        var bB = fB.getBody();\n\n        _ASSERT && common.assert(bA.isDynamic() || bB.isDynamic());\n\n        var activeA = bA.isAwake() && !bA.isStatic();\n        var activeB = bB.isAwake() && !bB.isStatic();\n\n        // Is at least one body active (awake and dynamic or kinematic)?\n        if (activeA == false && activeB == false) {\n          continue;\n        }\n\n        var collideA = bA.isBullet() || !bA.isDynamic();\n        var collideB = bB.isBullet() || !bB.isDynamic();\n\n        // Are these two non-bullet dynamic bodies?\n        if (collideA == false && collideB == false) {\n          continue;\n        }\n\n        // Compute the TOI for this contact.\n        // Put the sweeps onto the same time interval.\n        var alpha0 = bA.m_sweep.alpha0;\n\n        if (bA.m_sweep.alpha0 < bB.m_sweep.alpha0) {\n          alpha0 = bB.m_sweep.alpha0;\n          bA.m_sweep.advance(alpha0);\n        } else if (bB.m_sweep.alpha0 < bA.m_sweep.alpha0) {\n          alpha0 = bA.m_sweep.alpha0;\n          bB.m_sweep.advance(alpha0);\n        }\n\n        _ASSERT && common.assert(alpha0 < 1.0);\n\n        var indexA = c.getChildIndexA();\n        var indexB = c.getChildIndexB();\n\n        var sweepA = bA.m_sweep;\n        var sweepB = bB.m_sweep;\n\n        // Compute the time of impact in interval [0, minTOI]\n        var input = new TOIInput(); // TODO: reuse\n        input.proxyA.set(fA.getShape(), indexA);\n        input.proxyB.set(fB.getShape(), indexB);\n        input.sweepA.set(bA.m_sweep);\n        input.sweepB.set(bB.m_sweep);\n        input.tMax = 1.0;\n\n        var output = new TOIOutput(); // TODO: reuse\n        TimeOfImpact(output, input);\n\n        // Beta is the fraction of the remaining portion of the [time?].\n        var beta = output.t;\n        if (output.state == TOIOutput.e_touching) {\n          alpha = Math.min(alpha0 + (1.0 - alpha0) * beta, 1.0);\n        } else {\n          alpha = 1.0;\n        }\n\n        c.m_toi = alpha;\n        c.m_toiFlag = true;\n      }\n\n      if (alpha < minAlpha) {\n        // This is the minimum TOI found so far.\n        minContact = c;\n        minAlpha = alpha;\n      }\n    }\n\n    if (minContact == null || 1.0 - 10.0 * Math.EPSILON < minAlpha) {\n      // No more TOI events. Done!\n      world.m_stepComplete = true;\n      break;\n    }\n\n    // Advance the bodies to the TOI.\n    var fA = minContact.getFixtureA();\n    var fB = minContact.getFixtureB();\n    var bA = fA.getBody();\n    var bB = fB.getBody();\n\n    var backup1 = bA.m_sweep.clone();\n    var backup2 = bB.m_sweep.clone();\n\n    bA.advance(minAlpha);\n    bB.advance(minAlpha);\n\n    // The TOI contact likely has some new contact points.\n    minContact.update(world);\n    minContact.m_toiFlag = false;\n    ++minContact.m_toiCount;\n\n    // Is the contact solid?\n    if (minContact.isEnabled() == false || minContact.isTouching() == false) {\n      // Restore the sweeps.\n      minContact.setEnabled(false);\n      bA.m_sweep.set(backup1);\n      bB.m_sweep.set(backup2);\n      bA.synchronizeTransform();\n      bB.synchronizeTransform();\n      continue;\n    }\n\n    bA.setAwake(true);\n    bB.setAwake(true);\n\n    // Build the island\n    this.clear();\n    this.addBody(bA);\n    this.addBody(bB);\n    this.addContact(minContact);\n\n    bA.m_islandFlag = true;\n    bB.m_islandFlag = true;\n    minContact.m_islandFlag = true;\n\n    // Get contacts on bodyA and bodyB.\n    var bodies = [ bA, bB ];\n    for (var i = 0; i < bodies.length; ++i) {\n      var body = bodies[i];\n      if (body.isDynamic()) {\n        for (var ce = body.m_contactList; ce; ce = ce.next) {\n          // if (this.m_bodyCount == this.m_bodyCapacity) { break; }\n          // if (this.m_contactCount == this.m_contactCapacity) { break; }\n\n          var contact = ce.contact;\n\n          // Has this contact already been added to the island?\n          if (contact.m_islandFlag) {\n            continue;\n          }\n\n          // Only add if either is static, kinematic or bullet.\n          var other = ce.other;\n          if (other.isDynamic() && !body.isBullet() && !other.isBullet()) {\n            continue;\n          }\n\n          // Skip sensors.\n          var sensorA = contact.m_fixtureA.m_isSensor;\n          var sensorB = contact.m_fixtureB.m_isSensor;\n          if (sensorA || sensorB) {\n            continue;\n          }\n\n          // Tentatively advance the body to the TOI.\n          var backup = other.m_sweep.clone();\n          if (other.m_islandFlag == false) {\n            other.advance(minAlpha);\n          }\n\n          // Update the contact points\n          contact.update(world);\n\n          // Was the contact disabled by the user?\n          // Are there contact points?\n          if (contact.isEnabled() == false || contact.isTouching() == false) {\n            other.m_sweep.set(backup);\n            other.synchronizeTransform();\n            continue;\n          }\n\n          // Add the contact to the island\n          contact.m_islandFlag = true;\n          this.addContact(contact);\n\n          // Has the other body already been added to the island?\n          if (other.m_islandFlag) {\n            continue;\n          }\n\n          // Add the other body to the island.\n          other.m_islandFlag = true;\n\n          if (!other.isStatic()) {\n            other.setAwake(true);\n          }\n\n          this.addBody(other);\n        }\n      }\n    }\n\n    s_subStep.reset((1.0 - minAlpha) * step.dt);\n    s_subStep.dtRatio = 1.0;\n    s_subStep.positionIterations = 20;\n    s_subStep.velocityIterations = step.velocityIterations;\n    s_subStep.warmStarting = false;\n\n    this.solveIslandTOI(s_subStep, bA, bB);\n\n    // Reset island flags and synchronize broad-phase proxies.\n    for (var i = 0; i < this.m_bodies.length; ++i) {\n      var body = this.m_bodies[i];\n      body.m_islandFlag = false;\n\n      if (!body.isDynamic()) {\n        continue;\n      }\n\n      body.synchronizeFixtures();\n\n      // Invalidate all contact TOIs on this displaced body.\n      for (var ce = body.m_contactList; ce; ce = ce.next) {\n        ce.contact.m_toiFlag = false;\n        ce.contact.m_islandFlag = false;\n      }\n    }\n\n    // Commit fixture proxy movements to the broad-phase so that new contacts\n    // are created.\n    // Also, some contacts can be destroyed.\n    world.findNewContacts();\n\n    if (world.m_subStepping) {\n      world.m_stepComplete = false;\n      break;\n    }\n  }\n\n  if (_DEBUG) for (var b = world.m_bodyList; b; b = b.m_next) {\n    var c = b.m_sweep.c;\n    var a = b.m_sweep.a;\n    var v = b.m_linearVelocity;\n    var w = b.m_angularVelocity;\n  }\n}\n\n/**\n * @param {TimeStep} subStep\n * @param toiA\n * @param toiB\n */\nSolver.prototype.solveIslandTOI = function(subStep, toiA, toiB) {\n  var world = this.m_world;\n\n  // Initialize the body state.\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n    body.c_position.c.set(body.m_sweep.c);\n    body.c_position.a = body.m_sweep.a;\n    body.c_velocity.v.set(body.m_linearVelocity);\n    body.c_velocity.w = body.m_angularVelocity;\n  }\n\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initConstraint(subStep);\n  }\n\n  // Solve position constraints.\n  for (var i = 0; i < subStep.positionIterations; ++i) {\n    var minSeparation = 0.0;\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      var separation = contact.solvePositionConstraintTOI(subStep, toiA, toiB);\n      minSeparation = Math.min(minSeparation, separation);\n    }\n    // We can't expect minSpeparation >= -Settings.linearSlop because we don't\n    // push the separation above -Settings.linearSlop.\n    var contactsOkay = minSeparation >= -1.5 * Settings.linearSlop;\n    if (contactsOkay) {\n      break;\n    }\n  }\n\n  if (false) {\n    // Is the new position really safe?\n    for (var i = 0; i < this.m_contacts.length; ++i) {\n      var c = this.m_contacts[i];\n      var fA = c.getFixtureA();\n      var fB = c.getFixtureB();\n\n      var bA = fA.getBody();\n      var bB = fB.getBody();\n\n      var indexA = c.getChildIndexA();\n      var indexB = c.getChildIndexB();\n\n      var input = new DistanceInput();\n      input.proxyA.set(fA.getShape(), indexA);\n      input.proxyB.set(fB.getShape(), indexB);\n      input.transformA = bA.getTransform();\n      input.transformB = bB.getTransform();\n      input.useRadii = false;\n\n      var output = new DistanceOutput();\n      var cache = new SimplexCache();\n      Distance(output, cache, input);\n\n      if (output.distance == 0 || cache.count == 3) {\n        cache.count += 0;\n      }\n    }\n  }\n\n  // Leap of faith to new safe state.\n  toiA.m_sweep.c0.set(toiA.c_position.c);\n  toiA.m_sweep.a0 = toiA.c_position.a;\n  toiB.m_sweep.c0.set(toiB.c_position.c);\n  toiB.m_sweep.a0 = toiB.c_position.a;\n\n  // No warm starting is needed for TOI events because warm\n  // starting impulses were applied in the discrete solver.\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initVelocityConstraint(subStep);\n  }\n\n  // Solve velocity constraints.\n  for (var i = 0; i < subStep.velocityIterations; ++i) {\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      contact.solveVelocityConstraint(subStep);\n    }\n  }\n\n  // Don't store the TOI contact forces for warm starting\n  // because they can be quite large.\n\n  var h = subStep.dt;\n\n  // Integrate positions\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n\n    var c = Vec2.clone(body.c_position.c);\n    var a = body.c_position.a;\n    var v = Vec2.clone(body.c_velocity.v);\n    var w = body.c_velocity.w;\n\n    // Check for large velocities\n    var translation = Vec2.mul(h, v);\n    if (Vec2.dot(translation, translation) > Settings.maxTranslationSquared) {\n      var ratio = Settings.maxTranslation / translation.length();\n      v.mul(ratio);\n    }\n\n    var rotation = h * w;\n    if (rotation * rotation > Settings.maxRotationSquared) {\n      var ratio = Settings.maxRotation / Math.abs(rotation);\n      w *= ratio;\n    }\n\n    // Integrate\n    c.addMul(h, v);\n    a += h * w;\n\n    body.c_position.c = c;\n    body.c_position.a = a;\n    body.c_velocity.v = v;\n    body.c_velocity.w = w;\n\n    // Sync bodies\n    body.m_sweep.c = c;\n    body.m_sweep.a = a;\n    body.m_linearVelocity = v;\n    body.m_angularVelocity = w;\n    body.synchronizeTransform();\n  }\n\n  this.postSolveIsland();\n};\n\n/**\n * Contact impulses for reporting. Impulses are used instead of forces because\n * sub-step forces may approach infinity for rigid body collisions. These match\n * up one-to-one with the contact points in Manifold.\n */\nfunction ContactImpulse() {\n  this.normalImpulses = [];\n  this.tangentImpulses = [];\n};\n\nSolver.prototype.postSolveIsland = function() {\n  // TODO: report contact.v_points instead of new object?\n  var impulse = new ContactImpulse();\n  for (var c = 0; c < this.m_contacts.length; ++c) {\n    var contact = this.m_contacts[c];\n    for (var p = 0; p < contact.v_points.length; ++p) {\n      impulse.normalImpulses.push(contact.v_points[p].normalImpulse);\n      impulse.tangentImpulses.push(contact.v_points[p].tangentImpulse);\n    }\n    this.m_world.postSolve(contact, impulse);\n  }\n};\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default World;\n\nimport options from './util/options';\nimport common from './util/common';\nimport Vec2 from './common/Vec2';\nimport BroadPhase from './collision/BroadPhase';\nimport Solver from './Solver';\nimport Body from './Body';\nimport Joint from './Joint';\nimport Contact from './Contact';\n\n/**\n * @typedef {Object} WorldDef\n *\n * @prop {Vec2} [gravity = { x : 0, y : 0}]\n * @prop {boolean} [allowSleep = true]\n * @prop {boolean} [warmStarting = true]\n * @prop {boolean} [continuousPhysics = true]\n * @prop {boolean} [subStepping = false]\n * @prop {boolean} [blockSolve = true]\n * @prop {int} [velocityIterations = 8] For the velocity constraint solver.\n * @prop {int} [positionIterations = 3] For the position constraint solver.\n */\nvar WorldDef = {\n  gravity : Vec2.zero(),\n  allowSleep : true,\n  warmStarting : true,\n  continuousPhysics : true,\n  subStepping : false,\n  blockSolve : true,\n  velocityIterations : 8,\n  positionIterations : 3\n};\n\n/**\n * @param {WorldDef|Vec2} def World definition or gravity vector.\n */\nfunction World(def) {\n  if (!(this instanceof World)) {\n    return new World(def);\n  }\n\n  if (def && Vec2.isValid(def)) {\n    def = {gravity : def};\n  }\n\n  def = options(def, WorldDef);\n\n  this.m_solver = new Solver(this);\n\n  this.m_broadPhase = new BroadPhase();\n\n  this.m_contactList = null;\n  this.m_contactCount = 0;\n\n  this.m_bodyList = null;\n  this.m_bodyCount = 0;\n\n  this.m_jointList = null;\n  this.m_jointCount = 0;\n\n  this.m_stepComplete = true;\n\n  this.m_allowSleep = def.allowSleep;\n  this.m_gravity = Vec2.clone(def.gravity);\n\n  this.m_clearForces = true;\n  this.m_newFixture = false;\n  this.m_locked = false;\n\n  // These are for debugging the solver.\n  this.m_warmStarting = def.warmStarting;\n  this.m_continuousPhysics = def.continuousPhysics;\n  this.m_subStepping = def.subStepping;\n\n  this.m_blockSolve = def.blockSolve;\n  this.m_velocityIterations = def.velocityIterations;\n  this.m_positionIterations = def.positionIterations;\n\n  this.m_t = 0;\n\n  // Broad-phase callback.\n  this.addPair = this.createContact.bind(this);\n}\n\nWorld.prototype._serialize = function() {\n  var bodies = [];\n  var joints = [];\n\n  for (var b = this.getBodyList(); b; b = b.getNext()) {\n    bodies.push(b);\n  }\n\n  for (var j = this.getJointList(); j; j = j.getNext()) {\n    if (typeof j._serialize === 'function') {\n      joints.push(j);\n    }\n  }\n\n  return {\n    gravity: this.m_gravity,\n    bodies: bodies,\n    joints: joints,\n  };\n};\n\nWorld._deserialize = function(data, context, restore) {\n  if (!data) {\n    return new World();\n  }\n\n  var world = new World(data.gravity);\n\n  if (data.bodies) {\n    for(var i = data.bodies.length - 1; i >= 0; i -= 1) {\n      world._addBody(restore(Body, data.bodies[i], world));\n    }\n  }\n\n  if (data.joints) {\n    for(var i = data.joints.length - 1; i >= 0; i--) {\n      world.createJoint(restore(Joint, data.joints[i], world));\n    }\n  }\n\n  return world;\n};\n\n/**\n * Get the world body list. With the returned body, use Body.getNext to get the\n * next body in the world list. A null body indicates the end of the list.\n *\n * @return the head of the world body list.\n */\nWorld.prototype.getBodyList = function() {\n  return this.m_bodyList;\n}\n\n/**\n * Get the world joint list. With the returned joint, use Joint.getNext to get\n * the next joint in the world list. A null joint indicates the end of the list.\n *\n * @return the head of the world joint list.\n */\nWorld.prototype.getJointList = function() {\n  return this.m_jointList;\n}\n\n/**\n * Get the world contact list. With the returned contact, use Contact.getNext to\n * get the next contact in the world list. A null contact indicates the end of\n * the list.\n *\n * @return the head of the world contact list. Warning: contacts are created and\n *         destroyed in the middle of a time step. Use ContactListener to avoid\n *         missing contacts.\n */\nWorld.prototype.getContactList = function() {\n  return this.m_contactList;\n}\n\nWorld.prototype.getBodyCount = function() {\n  return this.m_bodyCount;\n}\n\nWorld.prototype.getJointCount = function() {\n  return this.m_jointCount;\n}\n\n/**\n * Get the number of contacts (each may have 0 or more contact points).\n */\nWorld.prototype.getContactCount = function() {\n  return this.m_contactCount;\n}\n\n/**\n * Change the global gravity vector.\n */\nWorld.prototype.setGravity = function(gravity) {\n  this.m_gravity = gravity;\n}\n\n/**\n * Get the global gravity vector.\n */\nWorld.prototype.getGravity = function() {\n  return this.m_gravity;\n}\n\n/**\n * Is the world locked (in the middle of a time step).\n */\nWorld.prototype.isLocked = function() {\n  return this.m_locked;\n}\n\n/**\n * Enable/disable sleep.\n */\nWorld.prototype.setAllowSleeping = function(flag) {\n  if (flag == this.m_allowSleep) {\n    return;\n  }\n\n  this.m_allowSleep = flag;\n  if (this.m_allowSleep == false) {\n    for (var b = this.m_bodyList; b; b = b.m_next) {\n      b.setAwake(true);\n    }\n  }\n}\n\nWorld.prototype.getAllowSleeping = function() {\n  return this.m_allowSleep;\n}\n\n/**\n * Enable/disable warm starting. For testing.\n */\nWorld.prototype.setWarmStarting = function(flag) {\n  this.m_warmStarting = flag;\n}\n\nWorld.prototype.getWarmStarting = function() {\n  return this.m_warmStarting;\n}\n\n/**\n * Enable/disable continuous physics. For testing.\n */\nWorld.prototype.setContinuousPhysics = function(flag) {\n  this.m_continuousPhysics = flag;\n}\n\nWorld.prototype.getContinuousPhysics = function() {\n  return this.m_continuousPhysics;\n}\n\n/**\n * Enable/disable single stepped continuous physics. For testing.\n */\nWorld.prototype.setSubStepping = function(flag) {\n  this.m_subStepping = flag;\n}\n\nWorld.prototype.getSubStepping = function() {\n  return this.m_subStepping;\n}\n\n/**\n * Set flag to control automatic clearing of forces after each time step.\n */\nWorld.prototype.setAutoClearForces = function(flag) {\n  this.m_clearForces = flag;\n}\n\n/**\n * Get the flag that controls automatic clearing of forces after each time step.\n */\nWorld.prototype.getAutoClearForces = function() {\n  return this.m_clearForces;\n}\n\n/**\n * Manually clear the force buffer on all bodies. By default, forces are cleared\n * automatically after each call to step. The default behavior is modified by\n * calling setAutoClearForces. The purpose of this function is to support\n * sub-stepping. Sub-stepping is often used to maintain a fixed sized time step\n * under a variable frame-rate. When you perform sub-stepping you will disable\n * auto clearing of forces and instead call clearForces after all sub-steps are\n * complete in one pass of your game loop.\n *\n * @see setAutoClearForces\n */\nWorld.prototype.clearForces = function() {\n  for (var body = this.m_bodyList; body; body = body.getNext()) {\n    body.m_force.setZero();\n    body.m_torque = 0.0;\n  }\n}\n\n/**\n * @function World~rayCastCallback\n *\n * @param fixture\n */\n\n/**\n * Query the world for all fixtures that potentially overlap the provided AABB.\n *\n * @param {World~queryCallback} queryCallback Called for each fixture\n *          found in the query AABB. It may return `false` to terminate the\n *          query.\n *\n * @param aabb The query box.\n */\nWorld.prototype.queryAABB = function(aabb, queryCallback) {\n  _ASSERT && common.assert(typeof queryCallback === 'function');\n  var broadPhase = this.m_broadPhase;\n  this.m_broadPhase.query(aabb, function(proxyId) { //TODO GC\n    var proxy = broadPhase.getUserData(proxyId); // FixtureProxy\n    return queryCallback(proxy.fixture);\n  });\n}\n\n/**\n * @function World~rayCastCallback\n *\n * Callback class for ray casts. See World.rayCast\n *\n * Called for each fixture found in the query. You control how the ray cast\n * proceeds by returning a float: return -1: ignore this fixture and continue\n * return 0: terminate the ray cast return fraction: clip the ray to this point\n * return 1: don't clip the ray and continue\n *\n * @param fixture The fixture hit by the ray\n * @param point The point of initial intersection\n * @param normal The normal vector at the point of intersection\n * @param fraction\n *\n * @return {float} -1 to filter, 0 to terminate, fraction to clip the ray for\n *         closest hit, 1 to continue\n */\n\n/**\n *\n * Ray-cast the world for all fixtures in the path of the ray. Your callback\n * controls whether you get the closest point, any point, or n-points. The\n * ray-cast ignores shapes that contain the starting point.\n *\n * @param {World~RayCastCallback} reportFixtureCallback A user implemented\n *          callback function.\n * @param point1 The ray starting point\n * @param point2 The ray ending point\n */\nWorld.prototype.rayCast = function(point1, point2, reportFixtureCallback) {\n  _ASSERT && common.assert(typeof reportFixtureCallback === 'function');\n  var broadPhase = this.m_broadPhase;\n\n  this.m_broadPhase.rayCast({\n    maxFraction : 1.0,\n    p1 : point1,\n    p2 : point2\n  }, function(input, proxyId) { // TODO GC\n    var proxy = broadPhase.getUserData(proxyId); // FixtureProxy\n    var fixture = proxy.fixture;\n    var index = proxy.childIndex;\n    var output = {}; // TODO GC\n    var hit = fixture.rayCast(output, input, index);\n    if (hit) {\n      var fraction = output.fraction;\n      var point = Vec2.add(Vec2.mul((1.0 - fraction), input.p1), Vec2.mul(fraction, input.p2));\n      return reportFixtureCallback(fixture, point, output.normal, fraction);\n    }\n    return input.maxFraction;\n  });\n}\n\n/**\n * Get the number of broad-phase proxies.\n */\nWorld.prototype.getProxyCount = function() {\n  return this.m_broadPhase.getProxyCount();\n}\n\n/**\n * Get the height of broad-phase dynamic tree.\n */\nWorld.prototype.getTreeHeight = function() {\n  return this.m_broadPhase.getTreeHeight();\n}\n\n/**\n * Get the balance of broad-phase dynamic tree.\n *\n * @returns {int}\n */\nWorld.prototype.getTreeBalance = function() {\n  return this.m_broadPhase.getTreeBalance();\n}\n\n/**\n * Get the quality metric of broad-phase dynamic tree. The smaller the better.\n * The minimum is 1.\n *\n * @returns {float}\n */\nWorld.prototype.getTreeQuality = function() {\n  return this.m_broadPhase.getTreeQuality();\n}\n\n/**\n * Shift the world origin. Useful for large worlds. The body shift formula is:\n * position -= newOrigin\n *\n * @param {Vec2} newOrigin The new origin with respect to the old origin\n */\nWorld.prototype.shiftOrigin = function(newOrigin) {\n  _ASSERT && common.assert(this.m_locked == false);\n  if (this.m_locked) {\n    return;\n  }\n\n  for (var b = this.m_bodyList; b; b = b.m_next) {\n    b.m_xf.p.sub(newOrigin);\n    b.m_sweep.c0.sub(newOrigin);\n    b.m_sweep.c.sub(newOrigin);\n  }\n\n  for (var j = this.m_jointList; j; j = j.m_next) {\n    j.shiftOrigin(newOrigin);\n  }\n\n  this.m_broadPhase.shiftOrigin(newOrigin);\n}\n\n/**\n * @internal Used for deserialize.\n */\nWorld.prototype._addBody = function(body) {\n  _ASSERT && common.assert(this.isLocked() === false);\n  if (this.isLocked()) {\n    return;\n  }\n\n  // Add to world doubly linked list.\n  body.m_prev = null;\n  body.m_next = this.m_bodyList;\n  if (this.m_bodyList) {\n    this.m_bodyList.m_prev = body;\n  }\n  this.m_bodyList = body;\n  ++this.m_bodyCount;\n}\n\n/**\n * Create a rigid body given a definition. No reference to the definition is\n * retained.\n *\n * Warning: This function is locked during callbacks.\n *\n * @param {BodyDef|Vec2} def Body definition or position.\n * @param {float} angle Body angle if def is position.\n */\nWorld.prototype.createBody = function(def, angle) {\n  _ASSERT && common.assert(this.isLocked() == false);\n  if (this.isLocked()) {\n    return null;\n  }\n\n  if (def && Vec2.isValid(def)) {\n    def = {\n      position : def,\n      angle : angle\n    };\n  }\n\n  var body = new Body(this, def);\n\n  this._addBody(body);\n\n  return body;\n}\n\nWorld.prototype.createDynamicBody = function(def, angle) {\n  if (!def) {\n    def = {};\n  } else if (Vec2.isValid(def)) {\n    def = { position : def, angle : angle };\n  }\n  def.type = 'dynamic';\n  return this.createBody(def);\n}\n\nWorld.prototype.createKinematicBody = function(def, angle) {\n  if (!def) {\n    def = {};\n  } else if (Vec2.isValid(def)) {\n    def = { position : def, angle : angle };\n  }\n  def.type = 'kinematic';\n  return this.createBody(def);\n}\n\n/**\n * Destroy a rigid body given a definition. No reference to the definition is\n * retained.\n *\n * Warning: This automatically deletes all associated shapes and joints.\n *\n * Warning: This function is locked during callbacks.\n *\n * @param {Body} b\n */\nWorld.prototype.destroyBody = function(b) {\n  _ASSERT && common.assert(this.m_bodyCount > 0);\n  _ASSERT && common.assert(this.isLocked() == false);\n  if (this.isLocked()) {\n    return;\n  }\n\n  if (b.m_destroyed) {\n    return false;\n  }\n\n  // Delete the attached joints.\n  var je = b.m_jointList;\n  while (je) {\n    var je0 = je;\n    je = je.next;\n\n    this.publish('remove-joint', je0.joint);\n    this.destroyJoint(je0.joint);\n\n    b.m_jointList = je;\n  }\n  b.m_jointList = null;\n\n  // Delete the attached contacts.\n  var ce = b.m_contactList;\n  while (ce) {\n    var ce0 = ce;\n    ce = ce.next;\n\n    this.destroyContact(ce0.contact);\n\n    b.m_contactList = ce;\n  }\n  b.m_contactList = null;\n\n  // Delete the attached fixtures. This destroys broad-phase proxies.\n  var f = b.m_fixtureList;\n  while (f) {\n    var f0 = f;\n    f = f.m_next;\n\n    this.publish('remove-fixture', f0);\n    f0.destroyProxies(this.m_broadPhase);\n\n    b.m_fixtureList = f;\n  }\n  b.m_fixtureList = null;\n\n  // Remove world body list.\n  if (b.m_prev) {\n    b.m_prev.m_next = b.m_next;\n  }\n\n  if (b.m_next) {\n    b.m_next.m_prev = b.m_prev;\n  }\n\n  if (b == this.m_bodyList) {\n    this.m_bodyList = b.m_next;\n  }\n\n  b.m_destroyed = true;\n\n  --this.m_bodyCount;\n\n  this.publish('remove-body', b);\n\n  return true;\n}\n\n/**\n * Create a joint to constrain bodies together. No reference to the definition\n * is retained. This may cause the connected bodies to cease colliding.\n *\n * Warning: This function is locked during callbacks.\n *\n * @param {Joint} join\n * @param {Body} bodyB\n * @param {Body} bodyA\n */\nWorld.prototype.createJoint = function(joint) {\n  _ASSERT && common.assert(!!joint.m_bodyA);\n  _ASSERT && common.assert(!!joint.m_bodyB);\n  _ASSERT && common.assert(this.isLocked() == false);\n  if (this.isLocked()) {\n    return null;\n  }\n\n  // Connect to the world list.\n  joint.m_prev = null;\n  joint.m_next = this.m_jointList;\n  if (this.m_jointList) {\n    this.m_jointList.m_prev = joint;\n  }\n  this.m_jointList = joint;\n  ++this.m_jointCount;\n\n  // Connect to the bodies' doubly linked lists.\n  joint.m_edgeA.joint = joint;\n  joint.m_edgeA.other = joint.m_bodyB;\n  joint.m_edgeA.prev = null;\n  joint.m_edgeA.next = joint.m_bodyA.m_jointList;\n  if (joint.m_bodyA.m_jointList)\n    joint.m_bodyA.m_jointList.prev = joint.m_edgeA;\n  joint.m_bodyA.m_jointList = joint.m_edgeA;\n\n  joint.m_edgeB.joint = joint;\n  joint.m_edgeB.other = joint.m_bodyA;\n  joint.m_edgeB.prev = null;\n  joint.m_edgeB.next = joint.m_bodyB.m_jointList;\n  if (joint.m_bodyB.m_jointList)\n    joint.m_bodyB.m_jointList.prev = joint.m_edgeB;\n  joint.m_bodyB.m_jointList = joint.m_edgeB;\n\n  // If the joint prevents collisions, then flag any contacts for filtering.\n  if (joint.m_collideConnected == false) {\n    for (var edge = joint.m_bodyB.getContactList(); edge; edge = edge.next) {\n      if (edge.other == joint.m_bodyA) {\n        // Flag the contact for filtering at the next time step (where either\n        // body is awake).\n        edge.contact.flagForFiltering();\n      }\n    }\n  }\n\n  // Note: creating a joint doesn't wake the bodies.\n\n  return joint;\n}\n\n/**\n * Destroy a joint. This may cause the connected bodies to begin colliding.\n * Warning: This function is locked during callbacks.\n *\n * @param {Joint} join\n */\nWorld.prototype.destroyJoint = function(joint) {\n  _ASSERT && common.assert(this.isLocked() == false);\n  if (this.isLocked()) {\n    return;\n  }\n\n  // Remove from the doubly linked list.\n  if (joint.m_prev) {\n    joint.m_prev.m_next = joint.m_next;\n  }\n\n  if (joint.m_next) {\n    joint.m_next.m_prev = joint.m_prev;\n  }\n\n  if (joint == this.m_jointList) {\n    this.m_jointList = joint.m_next;\n  }\n\n  // Disconnect from bodies.\n  var bodyA = joint.m_bodyA;\n  var bodyB = joint.m_bodyB;\n\n  // Wake up connected bodies.\n  bodyA.setAwake(true);\n  bodyB.setAwake(true);\n\n  // Remove from body 1.\n  if (joint.m_edgeA.prev) {\n    joint.m_edgeA.prev.next = joint.m_edgeA.next;\n  }\n\n  if (joint.m_edgeA.next) {\n    joint.m_edgeA.next.prev = joint.m_edgeA.prev;\n  }\n\n  if (joint.m_edgeA == bodyA.m_jointList) {\n    bodyA.m_jointList = joint.m_edgeA.next;\n  }\n\n  joint.m_edgeA.prev = null;\n  joint.m_edgeA.next = null;\n\n  // Remove from body 2\n  if (joint.m_edgeB.prev) {\n    joint.m_edgeB.prev.next = joint.m_edgeB.next;\n  }\n\n  if (joint.m_edgeB.next) {\n    joint.m_edgeB.next.prev = joint.m_edgeB.prev;\n  }\n\n  if (joint.m_edgeB == bodyB.m_jointList) {\n    bodyB.m_jointList = joint.m_edgeB.next;\n  }\n\n  joint.m_edgeB.prev = null;\n  joint.m_edgeB.next = null;\n\n  _ASSERT && common.assert(this.m_jointCount > 0);\n  --this.m_jointCount;\n\n  // If the joint prevents collisions, then flag any contacts for filtering.\n  if (joint.m_collideConnected == false) {\n    var edge = bodyB.getContactList();\n    while (edge) {\n      if (edge.other == bodyA) {\n        // Flag the contact for filtering at the next time step (where either\n        // body is awake).\n        edge.contact.flagForFiltering();\n      }\n\n      edge = edge.next;\n    }\n  }\n\n  this.publish('remove-joint', joint);\n}\n\nvar s_step = new Solver.TimeStep(); // reuse\n\n/**\n * Take a time step. This performs collision detection, integration, and\n * constraint solution.\n *\n * Broad-phase, narrow-phase, solve and solve time of impacts.\n *\n * @param {float} timeStep Time step, this should not vary.\n * @param {int} velocityIterations\n * @param {int} positionIterations\n */\nWorld.prototype.step = function(timeStep, velocityIterations, positionIterations) {\n  this.publish('pre-step', timeStep);\n\n  if ((velocityIterations | 0) !== velocityIterations) {\n    // TODO: remove this in future\n    velocityIterations = 0;\n  }\n\n  velocityIterations = velocityIterations || this.m_velocityIterations;\n  positionIterations = positionIterations || this.m_positionIterations;\n\n  // If new fixtures were added, we need to find the new contacts.\n  if (this.m_newFixture) {\n    this.findNewContacts();\n    this.m_newFixture = false;\n  }\n\n  this.m_locked = true;\n\n  s_step.reset(timeStep);\n  s_step.velocityIterations = velocityIterations;\n  s_step.positionIterations = positionIterations;\n  s_step.warmStarting = this.m_warmStarting;\n  s_step.blockSolve = this.m_blockSolve;\n\n  // Update contacts. This is where some contacts are destroyed.\n  this.updateContacts();\n\n  // Integrate velocities, solve velocity constraints, and integrate positions.\n  if (this.m_stepComplete && timeStep > 0.0) {\n    this.m_solver.solveWorld(s_step);\n\n    // Synchronize fixtures, check for out of range bodies.\n    for (var b = this.m_bodyList; b; b = b.getNext()) {\n      // If a body was not in an island then it did not move.\n      if (b.m_islandFlag == false) {\n        continue;\n      }\n\n      if (b.isStatic()) {\n        continue;\n      }\n\n      // Update fixtures (for broad-phase).\n      b.synchronizeFixtures();\n    }\n    // Look for new contacts.\n    this.findNewContacts();\n  }\n\n  // Handle TOI events.\n  if (this.m_continuousPhysics && timeStep > 0.0) {\n    this.m_solver.solveWorldTOI(s_step);\n  }\n\n  if (this.m_clearForces) {\n    this.clearForces();\n  }\n\n  this.m_locked = false;\n\n  this.publish('post-step', timeStep);\n}\n\n/**\n * Call this method to find new contacts.\n */\nWorld.prototype.findNewContacts = function() {\n  this.m_broadPhase.updatePairs(this.addPair);\n}\n\n/**\n * @private\n *\n * @param {FixtureProxy} proxyA\n * @param {FixtureProxy} proxyB\n */\nWorld.prototype.createContact = function(proxyA, proxyB) {\n  var fixtureA = proxyA.fixture;\n  var fixtureB = proxyB.fixture;\n\n  var indexA = proxyA.childIndex;\n  var indexB = proxyB.childIndex;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  // Are the fixtures on the same body?\n  if (bodyA == bodyB) {\n    return;\n  }\n\n  // TODO_ERIN use a hash table to remove a potential bottleneck when both\n  // bodies have a lot of contacts.\n  // Does a contact already exist?\n  var edge = bodyB.getContactList(); // ContactEdge\n  while (edge) {\n    if (edge.other == bodyA) {\n      var fA = edge.contact.getFixtureA();\n      var fB = edge.contact.getFixtureB();\n      var iA = edge.contact.getChildIndexA();\n      var iB = edge.contact.getChildIndexB();\n\n      if (fA == fixtureA && fB == fixtureB && iA == indexA && iB == indexB) {\n        // A contact already exists.\n        return;\n      }\n\n      if (fA == fixtureB && fB == fixtureA && iA == indexB && iB == indexA) {\n        // A contact already exists.\n        return;\n      }\n    }\n\n    edge = edge.next;\n  }\n\n  if (bodyB.shouldCollide(bodyA) == false) {\n    return;\n  }\n  if (fixtureB.shouldCollide(fixtureA) == false) {\n    return;\n  }\n\n  // Call the factory.\n  var contact = Contact.create(fixtureA, indexA, fixtureB, indexB);\n  if (contact == null) {\n    return;\n  }\n\n  // Insert into the world.\n  contact.m_prev = null;\n  if (this.m_contactList != null) {\n    contact.m_next = this.m_contactList;\n    this.m_contactList.m_prev = contact;\n  }\n  this.m_contactList = contact;\n\n  ++this.m_contactCount;\n}\n\n/**\n * Removes old non-overlapping contacts, applies filters and updates contacts.\n */\nWorld.prototype.updateContacts = function() {\n  // Update awake contacts.\n  var c, next_c = this.m_contactList;\n  while (c = next_c) {\n    next_c = c.getNext()\n    var fixtureA = c.getFixtureA();\n    var fixtureB = c.getFixtureB();\n    var indexA = c.getChildIndexA();\n    var indexB = c.getChildIndexB();\n    var bodyA = fixtureA.getBody();\n    var bodyB = fixtureB.getBody();\n\n    // Is this contact flagged for filtering?\n    if (c.m_filterFlag) {\n      if (bodyB.shouldCollide(bodyA) == false) {\n        this.destroyContact(c);\n        continue;\n      }\n\n      if (fixtureB.shouldCollide(fixtureA) == false) {\n        this.destroyContact(c);\n        continue;\n      }\n\n      // Clear the filtering flag.\n      c.m_filterFlag = false;\n    }\n\n    var activeA = bodyA.isAwake() && !bodyA.isStatic();\n    var activeB = bodyB.isAwake() && !bodyB.isStatic();\n\n    // At least one body must be awake and it must be dynamic or kinematic.\n    if (activeA == false && activeB == false) {\n      continue;\n    }\n\n    var proxyIdA = fixtureA.m_proxies[indexA].proxyId;\n    var proxyIdB = fixtureB.m_proxies[indexB].proxyId;\n    var overlap = this.m_broadPhase.testOverlap(proxyIdA, proxyIdB);\n\n    // Here we destroy contacts that cease to overlap in the broad-phase.\n    if (overlap == false) {\n      this.destroyContact(c);\n      continue;\n    }\n\n    // The contact persists.\n    c.update(this);\n  }\n}\n\n/**\n * @param {Contact} contact\n */\nWorld.prototype.destroyContact = function(contact) {\n  Contact.destroy(contact, this);\n\n  // Remove from the world.\n  if (contact.m_prev) {\n    contact.m_prev.m_next = contact.m_next;\n  }\n  if (contact.m_next) {\n    contact.m_next.m_prev = contact.m_prev;\n  }\n  if (contact == this.m_contactList) {\n    this.m_contactList = contact.m_next;\n  }\n\n  --this.m_contactCount;\n}\n\nWorld.prototype._listeners = null;\n\n/**\n * Register an event listener.\n *\n * @param {string} name\n * @param {function} listener\n */\nWorld.prototype.on = function(name, listener) {\n  if (typeof name !== 'string' || typeof listener !== 'function') {\n    return this;\n  }\n  if (!this._listeners) {\n    this._listeners = {};\n  }\n  if (!this._listeners[name]) {\n    this._listeners[name] = [];\n  }\n  this._listeners[name].push(listener);\n  return this;\n};\n\n/**\n * Remove an event listener.\n *\n * @param {string} name\n * @param {function} listener\n */\nWorld.prototype.off = function(name, listener) {\n  if (typeof name !== 'string' || typeof listener !== 'function') {\n    return this;\n  }\n  var listeners = this._listeners && this._listeners[name];\n  if (!listeners || !listeners.length) {\n    return this;\n  }\n  var index = listeners.indexOf(listener);\n  if (index >= 0) {\n    listeners.splice(index, 1);\n  }\n  return this;\n};\n\nWorld.prototype.publish = function(name, arg1, arg2, arg3) {\n  var listeners = this._listeners && this._listeners[name];\n  if (!listeners || !listeners.length) {\n    return 0;\n  }\n  for (var l = 0; l < listeners.length; l++) {\n    listeners[l].call(this, arg1, arg2, arg3);\n  }\n  return listeners.length;\n};\n\n/**\n * @event World#remove-body\n * @event World#remove-joint\n * @event World#remove-fixture\n *\n * Joints and fixtures are destroyed when their associated body is destroyed.\n * Register a destruction listener so that you may nullify references to these\n * joints and shapes.\n *\n * `function(object)` is called when any joint or fixture is about to\n * be destroyed due to the destruction of one of its attached or parent bodies.\n */\n\n/**\n * @private\n * @param {Contact} contact\n */\nWorld.prototype.beginContact = function(contact) {\n  this.publish('begin-contact', contact);\n};\n\n/**\n * @event World#begin-contact\n *\n * Called when two fixtures begin to touch.\n *\n * Implement contact callbacks to get contact information. You can use these\n * results for things like sounds and game logic. You can also get contact\n * results by traversing the contact lists after the time step. However, you\n * might miss some contacts because continuous physics leads to sub-stepping.\n * Additionally you may receive multiple callbacks for the same contact in a\n * single time step. You should strive to make your callbacks efficient because\n * there may be many callbacks per time step.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * @private\n * @param {Contact} contact\n */\nWorld.prototype.endContact = function(contact) {\n  this.publish('end-contact', contact);\n};\n\n/**\n * @event World#end-contact\n *\n * Called when two fixtures cease to touch.\n *\n * Implement contact callbacks to get contact information. You can use these\n * results for things like sounds and game logic. You can also get contact\n * results by traversing the contact lists after the time step. However, you\n * might miss some contacts because continuous physics leads to sub-stepping.\n * Additionally you may receive multiple callbacks for the same contact in a\n * single time step. You should strive to make your callbacks efficient because\n * there may be many callbacks per time step.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * @private\n * @param {Contact} contact\n * @param {Manifold} oldManifold\n */\nWorld.prototype.preSolve = function(contact, oldManifold) {\n  this.publish('pre-solve', contact, oldManifold);\n};\n\n/**\n * @event World#pre-solve\n *\n * This is called after a contact is updated. This allows you to inspect a\n * contact before it goes to the solver. If you are careful, you can modify the\n * contact manifold (e.g. disable contact). A copy of the old manifold is\n * provided so that you can detect changes. Note: this is called only for awake\n * bodies. Note: this is called even when the number of contact points is zero.\n * Note: this is not called for sensors. Note: if you set the number of contact\n * points to zero, you will not get an endContact callback. However, you may get\n * a beginContact callback the next step.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * @private\n * @param {Contact} contact\n * @param {ContactImpulse} impulse\n */\nWorld.prototype.postSolve = function(contact, impulse) {\n  this.publish('post-solve', contact, impulse);\n};\n\n/**\n * @event World#post-solve\n *\n * This lets you inspect a contact after the solver is finished. This is useful\n * for inspecting impulses. Note: the contact manifold does not include time of\n * impact impulses, which can be arbitrarily large if the sub-step is small.\n * Hence the impulse is provided explicitly in a separate data structure. Note:\n * this is only called for contacts that are touching, solid, and awake.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * Register a contact filter to provide specific control over collision.\n * Otherwise the default filter is used (defaultFilter). The listener is owned\n * by you and must remain in scope.\n *\n * Moved to Fixture.\n */\n","import World from '../World';\nimport Body from '../Body';\nimport Joint from '../Joint';\nimport Fixture from '../Fixture';\nimport Shape from '../Shape';\nimport Vec2 from '../common/Vec2';\nimport Vec3 from '../common/Vec3';\n\nvar SID = 0;\n\nfunction Serializer(opts) {\n  opts = opts || {};\n\n  var rootClass = opts.rootClass || World;\n\n  var preSerialize = opts.preSerialize || function (obj) { return obj; };\n  var postSerialize = opts.postSerialize || function (data, obj) { return data; };\n\n  var preDeserialize = opts.preDeserialize || function (data) { return data; };\n  var postDeserialize = opts.postDeserialize || function (obj, data) { return obj; };\n\n  // This is used to create ref objects during serialize\n  var refTypes = {\n    'World': World,\n    'Body': Body,\n    'Joint': Joint,\n    'Fixture': Fixture,\n    'Shape': Shape,\n  };\n\n  // This is used by restore to deserialize objects and refs\n  var restoreTypes = Object.assign({\n    'Vec2': Vec2,\n    'Vec3': Vec3,\n  }, refTypes);\n\n  this.toJson = function (root) {\n    var json = [];\n\n    var queue = [root];\n    var refMap = {};\n\n    function storeRef(value, typeName) {\n      value.__sid = value.__sid || ++SID;\n      if (!refMap[value.__sid]) {\n        queue.push(value);\n        var index = json.length + queue.length;\n        var ref = {\n          refIndex: index,\n          refType: typeName\n        };\n        refMap[value.__sid] = ref;\n      }\n      return refMap[value.__sid];\n    }\n\n    function serialize(obj) {\n      obj = preSerialize(obj);\n      var data = obj._serialize();\n      data = postSerialize(data, obj);\n      return data;\n    }\n\n    function toJson(value, top) {\n      if (typeof value !== 'object' || value === null) {\n        return value;\n      }\n      if (typeof value._serialize === 'function') {\n        if (value !== top) {\n          for (var typeName in refTypes) {\n            if (value instanceof refTypes[typeName]) {\n              return storeRef(value, typeName);\n            }\n          }\n        }\n        value = serialize(value);\n      }\n      if (Array.isArray(value)) {\n        var newValue = [];\n        for (var key = 0; key < value.length; key++) {\n          newValue[key] = toJson(value[key]);\n        }\n        value = newValue;\n\n      } else {\n        var newValue = {};\n        for (var key in value) {\n          if (value.hasOwnProperty(key)) {\n            newValue[key] = toJson(value[key]);\n          }\n        }\n        value = newValue;\n      }\n      return value;\n    }\n\n    while (queue.length) {\n      var obj = queue.shift();\n      var str = toJson(obj, obj);\n      json.push(str);\n    }\n\n    return json;\n  };\n\n  this.fromJson = function (json) {\n    var refMap = {};\n\n    function deserialize(cls, data, ctx) {\n      data = preDeserialize(data);\n      var obj = cls._deserialize(data, ctx, restoreRef);\n      obj = postDeserialize(obj, data);\n      return obj;\n    }\n\n    function restoreRef(cls, ref, ctx) {\n      if (!ref.refIndex) {\n        return cls && cls._deserialize && deserialize(cls, ref, ctx);\n      }\n      cls = restoreTypes[ref.refType] || cls;\n      var index = ref.refIndex;\n      if (!refMap[index]) {\n        var data = json[index];\n        var obj = deserialize(cls, data, ctx);\n        refMap[index] = obj;\n      }\n      return refMap[index];\n    }\n\n    var root = rootClass._deserialize(json[0], null, restoreRef);\n\n    return root;\n  }\n}\n\nvar serializer = new Serializer();\n\nSerializer.toJson = serializer.toJson;\nSerializer.fromJson = serializer.fromJson;\n\nexport default Serializer;\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default CircleShape;\n\nimport common from '../util/common';\nimport options from '../util/options';\nimport Math from '../common/Math';\nimport Transform from '../common/Transform';\nimport Rot from '../common/Rot';\nimport Vec2 from '../common/Vec2';\nimport AABB from '../collision/AABB';\nimport Settings from '../Settings';\nimport Shape from '../Shape';\n\nCircleShape._super = Shape;\nCircleShape.prototype = Object.create(CircleShape._super.prototype);\n\nCircleShape.TYPE = 'circle';\nShape.TYPES[CircleShape.TYPE] = CircleShape;\n\nfunction CircleShape(a, b) {\n  if (!(this instanceof CircleShape)) {\n    return new CircleShape(a, b);\n  }\n\n  CircleShape._super.call(this);\n\n  this.m_type = CircleShape.TYPE;\n  this.m_p = Vec2.zero();\n  this.m_radius = 1;\n\n  if (typeof a === 'object' && Vec2.isValid(a)) {\n    this.m_p.set(a);\n\n    if (typeof b === 'number') {\n      this.m_radius = b;\n    }\n\n  } else if (typeof a === 'number') {\n    this.m_radius = a;\n  }\n}\n\nCircleShape.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n\n    p: this.m_p,\n    radius: this.m_radius,\n  };\n};\n\nCircleShape._deserialize = function(data) {\n  return new CircleShape(data.p, data.radius);\n};\n\nCircleShape.prototype.getRadius = function() {\n  return this.m_radius;\n}\n\nCircleShape.prototype.getCenter = function() {\n  return this.m_p;\n}\n\nCircleShape.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(index == 0);\n  return this.m_p;\n}\n\nCircleShape.prototype.getVertexCount = function(index) {\n  return 1;\n}\n\n/**\n * @deprecated\n */\nCircleShape.prototype._clone = function() {\n  var clone = new CircleShape();\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_p = this.m_p.clone();\n  return clone;\n}\n\nCircleShape.prototype.getChildCount = function() {\n  return 1;\n}\n\nCircleShape.prototype.testPoint = function(xf, p) {\n  var center = Vec2.add(xf.p, Rot.mulVec2(xf.q, this.m_p));\n  var d = Vec2.sub(p, center);\n  return Vec2.dot(d, d) <= this.m_radius * this.m_radius;\n}\n\n// Collision Detection in Interactive 3D Environments by Gino van den Bergen\n// From Section 3.1.2\n// x = s + a * r\n// norm(x) = radius\nCircleShape.prototype.rayCast = function(output, input, xf, childIndex) {\n\n  var position = Vec2.add(xf.p, Rot.mulVec2(xf.q, this.m_p));\n  var s = Vec2.sub(input.p1, position);\n  var b = Vec2.dot(s, s) - this.m_radius * this.m_radius;\n\n  // Solve quadratic equation.\n  var r = Vec2.sub(input.p2, input.p1);\n  var c = Vec2.dot(s, r);\n  var rr = Vec2.dot(r, r);\n  var sigma = c * c - rr * b;\n\n  // Check for negative discriminant and short segment.\n  if (sigma < 0.0 || rr < Math.EPSILON) {\n    return false;\n  }\n\n  // Find the point of intersection of the line with the circle.\n  var a = -(c + Math.sqrt(sigma));\n\n  // Is the intersection point on the segment?\n  if (0.0 <= a && a <= input.maxFraction * rr) {\n    a /= rr;\n    output.fraction = a;\n    output.normal = Vec2.add(s, Vec2.mul(a, r));\n    output.normal.normalize();\n    return true;\n  }\n\n  return false;\n}\n\nCircleShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  var p = Vec2.add(xf.p, Rot.mulVec2(xf.q, this.m_p));\n  aabb.lowerBound.set(p.x - this.m_radius, p.y - this.m_radius);\n  aabb.upperBound.set(p.x + this.m_radius, p.y + this.m_radius);\n}\n\nCircleShape.prototype.computeMass = function(massData, density) {\n  massData.mass = density * Math.PI * this.m_radius * this.m_radius;\n  massData.center = this.m_p;\n  // inertia about the local origin\n  massData.I = massData.mass\n      * (0.5 * this.m_radius * this.m_radius + Vec2.dot(this.m_p, this.m_p));\n}\n\nCircleShape.prototype.computeDistanceProxy = function(proxy) {\n  proxy.m_vertices.push(this.m_p);\n  proxy.m_count = 1;\n  proxy.m_radius = this.m_radius;\n};\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default EdgeShape;\n\nimport options from '../util/options';\nimport Settings from '../Settings';\nimport Shape from '../Shape';\nimport Math from '../common/Math';\nimport Transform from '../common/Transform';\nimport Rot from '../common/Rot';\nimport Vec2 from '../common/Vec2';\nimport AABB from '../collision/AABB';\n\nEdgeShape._super = Shape;\nEdgeShape.prototype = Object.create(EdgeShape._super.prototype);\n\nEdgeShape.TYPE = 'edge';\nShape.TYPES[EdgeShape.TYPE] = EdgeShape;\n\n/**\n * A line segment (edge) shape. These can be connected in chains or loops to\n * other edge shapes. The connectivity information is used to ensure correct\n * contact normals.\n */\nfunction EdgeShape(v1, v2) {\n  if (!(this instanceof EdgeShape)) {\n    return new EdgeShape(v1, v2);\n  }\n\n  EdgeShape._super.call(this);\n\n  this.m_type = EdgeShape.TYPE;\n  this.m_radius = Settings.polygonRadius;\n\n  // These are the edge vertices\n  this.m_vertex1 = v1 ? Vec2.clone(v1) : Vec2.zero();\n  this.m_vertex2 = v2 ? Vec2.clone(v2) : Vec2.zero();\n\n  // Optional adjacent vertices. These are used for smooth collision.\n  // Used by chain shape.\n  this.m_vertex0 = Vec2.zero();\n  this.m_vertex3 = Vec2.zero();\n  this.m_hasVertex0 = false;\n  this.m_hasVertex3 = false;\n}\n\nEdgeShape.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n\n    vertex1: this.m_vertex1,\n    vertex2: this.m_vertex2,\n\n    vertex0: this.m_vertex0,\n    vertex3: this.m_vertex3,\n    hasVertex0: this.m_hasVertex0,\n    hasVertex3: this.m_hasVertex3,\n  };\n};\n\nEdgeShape._deserialize = function(data) {\n  var shape = new EdgeShape(data.vertex1, data.vertex2);\n  if (shape.hasVertex0) {\n    shape.setPrev(data.vertex0);\n  }\n  if (shape.hasVertex3) {\n    shape.setNext(data.vertex3);\n  }\n  return shape;\n};\n\nEdgeShape.prototype.setNext = function(v3) {\n  if (v3) {\n    this.m_vertex3.set(v3);\n    this.m_hasVertex3 = true;\n  } else {\n    this.m_vertex3.setZero();\n    this.m_hasVertex3 = false;\n  }\n  return this;\n};\n\nEdgeShape.prototype.setPrev = function(v0) {\n  if (v0) {\n    this.m_vertex0.set(v0);\n    this.m_hasVertex0 = true;\n  } else {\n    this.m_vertex0.setZero();\n    this.m_hasVertex0 = false;\n  }\n  return this;\n};\n\n/**\n * Set this as an isolated edge.\n */\nEdgeShape.prototype._set = function(v1, v2) {\n  this.m_vertex1.set(v1);\n  this.m_vertex2.set(v2);\n  this.m_hasVertex0 = false;\n  this.m_hasVertex3 = false;\n  return this;\n}\n\n/**\n * @deprecated\n */\nEdgeShape.prototype._clone = function() {\n  var clone = new EdgeShape();\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_vertex1.set(this.m_vertex1);\n  clone.m_vertex2.set(this.m_vertex2);\n  clone.m_vertex0.set(this.m_vertex0);\n  clone.m_vertex3.set(this.m_vertex3);\n  clone.m_hasVertex0 = this.m_hasVertex0;\n  clone.m_hasVertex3 = this.m_hasVertex3;\n  return clone;\n}\n\nEdgeShape.prototype.getChildCount = function() {\n  return 1;\n}\n\nEdgeShape.prototype.testPoint = function(xf, p) {\n  return false;\n}\n\n// p = p1 + t * d\n// v = v1 + s * e\n// p1 + t * d = v1 + s * e\n// s * e - t * d = p1 - v1\nEdgeShape.prototype.rayCast = function(output, input, xf, childIndex) {\n  // NOT_USED(childIndex);\n\n  // Put the ray into the edge's frame of reference.\n  var p1 = Rot.mulTVec2(xf.q, Vec2.sub(input.p1, xf.p));\n  var p2 = Rot.mulTVec2(xf.q, Vec2.sub(input.p2, xf.p));\n  var d = Vec2.sub(p2, p1);\n\n  var v1 = this.m_vertex1;\n  var v2 = this.m_vertex2;\n  var e = Vec2.sub(v2, v1);\n  var normal = Vec2.neo(e.y, -e.x);\n  normal.normalize();\n\n  // q = p1 + t * d\n  // dot(normal, q - v1) = 0\n  // dot(normal, p1 - v1) + t * dot(normal, d) = 0\n  var numerator = Vec2.dot(normal, Vec2.sub(v1, p1));\n  var denominator = Vec2.dot(normal, d);\n\n  if (denominator == 0.0) {\n    return false;\n  }\n\n  var t = numerator / denominator;\n  if (t < 0.0 || input.maxFraction < t) {\n    return false;\n  }\n\n  var q = Vec2.add(p1, Vec2.mul(t, d));\n\n  // q = v1 + s * r\n  // s = dot(q - v1, r) / dot(r, r)\n  var r = Vec2.sub(v2, v1);\n  var rr = Vec2.dot(r, r);\n  if (rr == 0.0) {\n    return false;\n  }\n\n  var s = Vec2.dot(Vec2.sub(q, v1), r) / rr;\n  if (s < 0.0 || 1.0 < s) {\n    return false;\n  }\n\n  output.fraction = t;\n  if (numerator > 0.0) {\n    output.normal = Rot.mulVec2(xf.q, normal).neg();\n  } else {\n    output.normal = Rot.mulVec2(xf.q, normal);\n  }\n  return true;\n}\n\nEdgeShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  var v1 = Transform.mulVec2(xf, this.m_vertex1);\n  var v2 = Transform.mulVec2(xf, this.m_vertex2);\n\n  aabb.combinePoints(v1, v2);\n  aabb.extend(this.m_radius)\n}\n\nEdgeShape.prototype.computeMass = function(massData, density) {\n  massData.mass = 0.0;\n  massData.center.setCombine(0.5, this.m_vertex1, 0.5, this.m_vertex2);\n  massData.I = 0.0;\n}\n\nEdgeShape.prototype.computeDistanceProxy = function(proxy) {\n  proxy.m_vertices.push(this.m_vertex1);\n  proxy.m_vertices.push(this.m_vertex2);\n  proxy.m_count = 2;\n  proxy.m_radius = this.m_radius;\n};\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default PolygonShape;\n\nimport common from '../util/common';\nimport options from '../util/options';\nimport Math from '../common/Math';\nimport Transform from '../common/Transform';\nimport Rot from '../common/Rot';\nimport Vec2 from '../common/Vec2';\nimport AABB from '../collision/AABB';\nimport Settings from '../Settings';\nimport Shape from '../Shape';\n\nPolygonShape._super = Shape;\nPolygonShape.prototype = Object.create(PolygonShape._super.prototype);\n\nPolygonShape.TYPE = 'polygon';\nShape.TYPES[PolygonShape.TYPE] = PolygonShape;\n\n/**\n * A convex polygon. It is assumed that the interior of the polygon is to the\n * left of each edge. Polygons have a maximum number of vertices equal to\n * Settings.maxPolygonVertices. In most cases you should not need many vertices\n * for a convex polygon. extends Shape\n */\nfunction PolygonShape(vertices) {\n  if (!(this instanceof PolygonShape)) {\n    return new PolygonShape(vertices);\n  }\n\n  PolygonShape._super.call(this);\n\n  this.m_type = PolygonShape.TYPE;\n  this.m_radius = Settings.polygonRadius;\n  this.m_centroid = Vec2.zero();\n  this.m_vertices = []; // Vec2[Settings.maxPolygonVertices]\n  this.m_normals = []; // Vec2[Settings.maxPolygonVertices]\n  this.m_count = 0;\n\n  if (vertices && vertices.length) {\n    this._set(vertices);\n  }\n}\n\nPolygonShape.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n\n    vertices: this.m_vertices,\n  };\n};\n\nPolygonShape._deserialize = function(data, fixture, restore) {\n  var vertices = [];\n  if (data.vertices) {\n    for (var i = 0; i < data.vertices.length; i++) {\n      vertices.push(restore(Vec2, data.vertices[i]));\n    }\n  }\n\n  var shape = new PolygonShape(vertices);\n  return shape;\n};\n\nPolygonShape.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(0 <= index && index < this.m_count);\n  return this.m_vertices[index];\n}\n\n/**\n * @deprecated\n */\nPolygonShape.prototype._clone = function() {\n  var clone = new PolygonShape();\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_count = this.m_count;\n  clone.m_centroid.set(this.m_centroid);\n  for (var i = 0; i < this.m_count; i++) {\n    clone.m_vertices.push(this.m_vertices[i].clone());\n  }\n  for (var i = 0; i < this.m_normals.length; i++) {\n    clone.m_normals.push(this.m_normals[i].clone());\n  }\n  return clone;\n}\n\nPolygonShape.prototype.getChildCount = function() {\n  return 1;\n}\n\nfunction ComputeCentroid(vs, count) {\n  _ASSERT && common.assert(count >= 3);\n\n  var c = Vec2.zero();\n  var area = 0.0;\n\n  // pRef is the reference point for forming triangles.\n  // It's location doesn't change the result (except for rounding error).\n  var pRef = Vec2.zero();\n  if (false) {\n    // This code would put the reference point inside the polygon.\n    for (var i = 0; i < count; ++i) {\n      pRef.add(vs[i]);\n    }\n    pRef.mul(1.0 / count);\n  }\n\n  var inv3 = 1.0 / 3.0;\n\n  for (var i = 0; i < count; ++i) {\n    // Triangle vertices.\n    var p1 = pRef;\n    var p2 = vs[i];\n    var p3 = i + 1 < count ? vs[i + 1] : vs[0];\n\n    var e1 = Vec2.sub(p2, p1);\n    var e2 = Vec2.sub(p3, p1);\n\n    var D = Vec2.cross(e1, e2);\n\n    var triangleArea = 0.5 * D;\n    area += triangleArea;\n\n    // Area weighted centroid\n    c.addMul(triangleArea * inv3, p1);\n    c.addMul(triangleArea * inv3, p2);\n    c.addMul(triangleArea * inv3, p3);\n  }\n\n  // Centroid\n  _ASSERT && common.assert(area > Math.EPSILON);\n  c.mul(1.0 / area);\n  return c;\n}\n\nPolygonShape.prototype._reset = function() {\n  this._set(this.m_vertices)\n}\n\n/**\n * @private\n *\n * Create a convex hull from the given array of local points. The count must be\n * in the range [3, Settings.maxPolygonVertices].\n *\n * Warning: the points may be re-ordered, even if they form a convex polygon\n * Warning: collinear points are handled but not removed. Collinear points may\n * lead to poor stacking behavior.\n */\nPolygonShape.prototype._set = function(vertices) {\n  _ASSERT && common.assert(3 <= vertices.length && vertices.length <= Settings.maxPolygonVertices);\n  if (vertices.length < 3) {\n    this._setAsBox(1.0, 1.0);\n    return;\n  }\n\n  var n = Math.min(vertices.length, Settings.maxPolygonVertices);\n\n  // Perform welding and copy vertices into local buffer.\n  var ps = []; // [Settings.maxPolygonVertices];\n  for (var i = 0; i < n; ++i) {\n    var v = vertices[i];\n\n    var unique = true;\n    for (var j = 0; j < ps.length; ++j) {\n      if (Vec2.distanceSquared(v, ps[j]) < 0.25 * Settings.linearSlopSquared) {\n        unique = false;\n        break;\n      }\n    }\n\n    if (unique) {\n      ps.push(v);\n    }\n  }\n\n  n = ps.length;\n  if (n < 3) {\n    // Polygon is degenerate.\n    _ASSERT && common.assert(false);\n    this._setAsBox(1.0, 1.0);\n    return;\n  }\n\n  // Create the convex hull using the Gift wrapping algorithm\n  // http://en.wikipedia.org/wiki/Gift_wrapping_algorithm\n\n  // Find the right most point on the hull (in case of multiple points bottom most is used)\n  var i0 = 0;\n  var x0 = ps[0].x;\n  for (var i = 1; i < n; ++i) {\n    var x = ps[i].x;\n    if (x > x0 || (x === x0 && ps[i].y < ps[i0].y)) {\n      i0 = i;\n      x0 = x;\n    }\n  }\n\n  var hull = []; // [Settings.maxPolygonVertices];\n  var m = 0;\n  var ih = i0;\n\n  for (;;) {\n    hull[m] = ih;\n\n    var ie = 0;\n    for (var j = 1; j < n; ++j) {\n      if (ie === ih) {\n        ie = j;\n        continue;\n      }\n\n      var r = Vec2.sub(ps[ie], ps[hull[m]]);\n      var v = Vec2.sub(ps[j], ps[hull[m]]);\n      var c = Vec2.cross(r, v);\n      // c < 0 means counter-clockwise wrapping, c > 0 means clockwise wrapping\n      if (c < 0.0) {\n        ie = j;\n      }\n\n      // Collinearity check\n      if (c === 0.0 && v.lengthSquared() > r.lengthSquared()) {\n        ie = j;\n      }\n    }\n\n    ++m;\n    ih = ie;\n\n    if (ie === i0) {\n      break;\n    }\n  }\n\n  if (m < 3) {\n    // Polygon is degenerate.\n    _ASSERT && common.assert(false);\n    this._setAsBox(1.0, 1.0);\n    return;\n  }\n\n  this.m_count = m;\n\n  // Copy vertices.\n  this.m_vertices = [];\n  for (var i = 0; i < m; ++i) {\n    this.m_vertices[i] = ps[hull[i]];\n  }\n\n  // Compute normals. Ensure the edges have non-zero length.\n  for (var i = 0; i < m; ++i) {\n    var i1 = i;\n    var i2 = i + 1 < m ? i + 1 : 0;\n    var edge = Vec2.sub(this.m_vertices[i2], this.m_vertices[i1]);\n    _ASSERT && common.assert(edge.lengthSquared() > Math.EPSILON * Math.EPSILON);\n    this.m_normals[i] = Vec2.cross(edge, 1.0);\n    this.m_normals[i].normalize();\n  }\n\n  // Compute the polygon centroid.\n  this.m_centroid = ComputeCentroid(this.m_vertices, m);\n}\n\n/**\n * @private\n */\nPolygonShape.prototype._setAsBox = function(hx, hy, center, angle) {\n  // start with right-bottom, counter-clockwise, as in Gift wrapping algorithm in PolygonShape._set()\n  this.m_vertices[0] = Vec2.neo(hx, -hy);\n  this.m_vertices[1] = Vec2.neo(hx, hy);\n  this.m_vertices[2] = Vec2.neo(-hx, hy);\n  this.m_vertices[3] = Vec2.neo(-hx, -hy);\n\n  this.m_normals[0] = Vec2.neo(1.0, 0.0);\n  this.m_normals[1] = Vec2.neo(0.0, 1.0);\n  this.m_normals[2] = Vec2.neo(-1.0, 0.0);\n  this.m_normals[3] = Vec2.neo(0.0, -1.0);\n\n  this.m_count = 4;\n\n  if (Vec2.isValid(center)) {\n    angle = angle || 0;\n\n    this.m_centroid.set(center);\n\n    var xf = Transform.identity();\n    xf.p.set(center);\n    xf.q.set(angle);\n\n    // Transform vertices and normals.\n    for (var i = 0; i < this.m_count; ++i) {\n      this.m_vertices[i] = Transform.mulVec2(xf, this.m_vertices[i]);\n      this.m_normals[i] = Rot.mulVec2(xf.q, this.m_normals[i]);\n    }\n  }\n}\n\nPolygonShape.prototype.testPoint = function(xf, p) {\n  var pLocal = Rot.mulTVec2(xf.q, Vec2.sub(p, xf.p));\n\n  for (var i = 0; i < this.m_count; ++i) {\n    var dot = Vec2.dot(this.m_normals[i], Vec2.sub(pLocal, this.m_vertices[i]));\n    if (dot > 0.0) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nPolygonShape.prototype.rayCast = function(output, input, xf, childIndex) {\n\n  // Put the ray into the polygon's frame of reference.\n  var p1 = Rot.mulTVec2(xf.q, Vec2.sub(input.p1, xf.p));\n  var p2 = Rot.mulTVec2(xf.q, Vec2.sub(input.p2, xf.p));\n  var d = Vec2.sub(p2, p1);\n\n  var lower = 0.0;\n  var upper = input.maxFraction;\n\n  var index = -1;\n\n  for (var i = 0; i < this.m_count; ++i) {\n    // p = p1 + a * d\n    // dot(normal, p - v) = 0\n    // dot(normal, p1 - v) + a * dot(normal, d) = 0\n    var numerator = Vec2.dot(this.m_normals[i], Vec2.sub(this.m_vertices[i], p1));\n    var denominator = Vec2.dot(this.m_normals[i], d);\n\n    if (denominator == 0.0) {\n      if (numerator < 0.0) {\n        return false;\n      }\n    } else {\n      // Note: we want this predicate without division:\n      // lower < numerator / denominator, where denominator < 0\n      // Since denominator < 0, we have to flip the inequality:\n      // lower < numerator / denominator <==> denominator * lower > numerator.\n      if (denominator < 0.0 && numerator < lower * denominator) {\n        // Increase lower.\n        // The segment enters this half-space.\n        lower = numerator / denominator;\n        index = i;\n      } else if (denominator > 0.0 && numerator < upper * denominator) {\n        // Decrease upper.\n        // The segment exits this half-space.\n        upper = numerator / denominator;\n      }\n    }\n\n    // The use of epsilon here causes the assert on lower to trip\n    // in some cases. Apparently the use of epsilon was to make edge\n    // shapes work, but now those are handled separately.\n    // if (upper < lower - Math.EPSILON)\n    if (upper < lower) {\n      return false;\n    }\n  }\n\n  _ASSERT && common.assert(0.0 <= lower && lower <= input.maxFraction);\n\n  if (index >= 0) {\n    output.fraction = lower;\n    output.normal = Rot.mulVec2(xf.q, this.m_normals[index]);\n    return true;\n  }\n\n  return false;\n};\n\nPolygonShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  var minX = Infinity, minY = Infinity;\n  var maxX = -Infinity, maxY = -Infinity;\n  for (var i = 0; i < this.m_count; ++i) {\n    var v = Transform.mulVec2(xf, this.m_vertices[i]);\n    minX = Math.min(minX, v.x);\n    maxX = Math.max(maxX, v.x);\n    minY = Math.min(minY, v.y);\n    maxY = Math.max(maxY, v.y);\n  }\n\n  aabb.lowerBound.set(minX, minY);\n  aabb.upperBound.set(maxX, maxY);\n  aabb.extend(this.m_radius);\n}\n\nPolygonShape.prototype.computeMass = function(massData, density) {\n  // Polygon mass, centroid, and inertia.\n  // Let rho be the polygon density in mass per unit area.\n  // Then:\n  // mass = rho * int(dA)\n  // centroid.x = (1/mass) * rho * int(x * dA)\n  // centroid.y = (1/mass) * rho * int(y * dA)\n  // I = rho * int((x*x + y*y) * dA)\n  //\n  // We can compute these integrals by summing all the integrals\n  // for each triangle of the polygon. To evaluate the integral\n  // for a single triangle, we make a change of variables to\n  // the (u,v) coordinates of the triangle:\n  // x = x0 + e1x * u + e2x * v\n  // y = y0 + e1y * u + e2y * v\n  // where 0 <= u && 0 <= v && u + v <= 1.\n  //\n  // We integrate u from [0,1-v] and then v from [0,1].\n  // We also need to use the Jacobian of the transformation:\n  // D = cross(e1, e2)\n  //\n  // Simplification: triangle centroid = (1/3) * (p1 + p2 + p3)\n  //\n  // The rest of the derivation is handled by computer algebra.\n\n  _ASSERT && common.assert(this.m_count >= 3);\n\n  var center = Vec2.zero();\n  var area = 0.0;\n  var I = 0.0;\n\n  // s is the reference point for forming triangles.\n  // It's location doesn't change the result (except for rounding error).\n  var s = Vec2.zero();\n\n  // This code would put the reference point inside the polygon.\n  for (var i = 0; i < this.m_count; ++i) {\n    s.add(this.m_vertices[i]);\n  }\n  s.mul(1.0 / this.m_count);\n\n  var k_inv3 = 1.0 / 3.0;\n\n  for (var i = 0; i < this.m_count; ++i) {\n    // Triangle vertices.\n    var e1 = Vec2.sub(this.m_vertices[i], s);\n    var e2 = i + 1 < this.m_count ? Vec2.sub(this.m_vertices[i + 1], s) : Vec2\n        .sub(this.m_vertices[0], s);\n\n    var D = Vec2.cross(e1, e2);\n\n    var triangleArea = 0.5 * D;\n    area += triangleArea;\n\n    // Area weighted centroid\n    center.addCombine(triangleArea * k_inv3, e1, triangleArea * k_inv3, e2);\n\n    var ex1 = e1.x;\n    var ey1 = e1.y;\n    var ex2 = e2.x;\n    var ey2 = e2.y;\n\n    var intx2 = ex1 * ex1 + ex2 * ex1 + ex2 * ex2;\n    var inty2 = ey1 * ey1 + ey2 * ey1 + ey2 * ey2;\n\n    I += (0.25 * k_inv3 * D) * (intx2 + inty2);\n  }\n\n  // Total mass\n  massData.mass = density * area;\n\n  // Center of mass\n  _ASSERT && common.assert(area > Math.EPSILON);\n  center.mul(1.0 / area);\n  massData.center.setCombine(1, center, 1, s);\n\n  // Inertia tensor relative to the local origin (point s).\n  massData.I = density * I;\n\n  // Shift to center of mass then to original body origin.\n  massData.I += massData.mass\n      * (Vec2.dot(massData.center, massData.center) - Vec2.dot(center, center));\n}\n\n// Validate convexity. This is a very time consuming operation.\n// @returns true if valid\nPolygonShape.prototype.validate = function() {\n  for (var i = 0; i < this.m_count; ++i) {\n    var i1 = i;\n    var i2 = i < this.m_count - 1 ? i1 + 1 : 0;\n    var p = this.m_vertices[i1];\n    var e = Vec2.sub(this.m_vertices[i2], p);\n\n    for (var j = 0; j < this.m_count; ++j) {\n      if (j == i1 || j == i2) {\n        continue;\n      }\n\n      var v = Vec2.sub(this.m_vertices[j], p);\n      var c = Vec2.cross(e, v);\n      if (c < 0.0) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nPolygonShape.prototype.computeDistanceProxy = function(proxy) {\n  proxy.m_vertices = this.m_vertices;\n  proxy.m_count = this.m_count;\n  proxy.m_radius = this.m_radius;\n};\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default ChainShape;\n\nimport common from '../util/common';\nimport options from '../util/options';\nimport Math from '../common/Math';\nimport Transform from '../common/Transform';\nimport Rot from '../common/Rot';\nimport Vec2 from '../common/Vec2';\nimport AABB from '../collision/AABB';\nimport Settings from '../Settings';\nimport Shape from '../Shape';\nimport EdgeShape from './EdgeShape';\n\nChainShape._super = Shape;\nChainShape.prototype = Object.create(ChainShape._super.prototype);\n\nChainShape.TYPE = 'chain';\nShape.TYPES[ChainShape.TYPE] = ChainShape;\n\n/**\n * A chain shape is a free form sequence of line segments. The chain has\n * two-sided collision, so you can use inside and outside collision. Therefore,\n * you may use any winding order. Connectivity information is used to create\n * smooth collisions.\n *\n * WARNING: The chain will not collide properly if there are self-intersections.\n */\nfunction ChainShape(vertices, loop) {\n  if (!(this instanceof ChainShape)) {\n    return new ChainShape(vertices, loop);\n  }\n\n  ChainShape._super.call(this);\n\n  this.m_type = ChainShape.TYPE;\n  this.m_radius = Settings.polygonRadius;\n  this.m_vertices = [];\n  this.m_count = 0;\n  this.m_prevVertex = null;\n  this.m_nextVertex = null;\n  this.m_hasPrevVertex = false;\n  this.m_hasNextVertex = false;\n\n  this.m_isLoop = loop;\n\n  if (vertices && vertices.length) {\n    if (loop) {\n      this._createLoop(vertices);\n    } else {\n      this._createChain(vertices);\n    }\n  }\n}\n\nChainShape.prototype._serialize = function() {\n  const data = {\n    type: this.m_type,\n    vertices: this.m_vertices,\n    isLoop: this.m_isLoop,\n    hasPrevVertex: this.m_hasPrevVertex,\n    hasNextVertex: this.m_hasNextVertex,\n  };\n  if (this.m_prevVertex) {\n    data.prevVertex = this.m_prevVertex;\n  }\n  if (this.m_nextVertex) {\n    data.nextVertex = this.m_nextVertex;\n  }\n  return data;\n};\n\nChainShape._deserialize = function(data, fixture, restore) {\n  var vertices = [];\n  if (data.vertices) {\n    for (var i = 0; i < data.vertices.length; i++) {\n      vertices.push(restore(Vec2, data.vertices[i]));\n    }\n  }\n  var shape = new ChainShape(vertices, data.isLoop);\n  if (data.prevVertex) {\n    shape.setPrevVertex(data.prevVertex);\n  }\n  if (data.nextVertex) {\n    shape.setNextVertex(data.nextVertex);\n  }\n  return shape;\n};\n\n// ChainShape.clear = function() {\n// this.m_vertices.length = 0;\n// this.m_count = 0;\n// }\n\n/**\n * Create a loop. This automatically adjusts connectivity.\n *\n * @param vertices an array of vertices, these are copied\n * @param count the vertex count\n */\nChainShape.prototype._createLoop = function(vertices) {\n  _ASSERT && common.assert(this.m_vertices.length == 0 && this.m_count == 0);\n  _ASSERT && common.assert(vertices.length >= 3);\n  for (var i = 1; i < vertices.length; ++i) {\n    var v1 = vertices[i - 1];\n    var v2 = vertices[i];\n    // If the code crashes here, it means your vertices are too close together.\n    _ASSERT && common.assert(Vec2.distanceSquared(v1, v2) > Settings.linearSlopSquared);\n  }\n\n  this.m_vertices = [];\n  this.m_count = vertices.length + 1;\n  for (var i = 0; i < vertices.length; ++i) {\n    this.m_vertices[i] = Vec2.clone(vertices[i]);\n  }\n  this.m_vertices[vertices.length] = Vec2.clone(vertices[0]);\n\n  this.m_prevVertex = this.m_vertices[this.m_count - 2];\n  this.m_nextVertex = this.m_vertices[1];\n  this.m_hasPrevVertex = true;\n  this.m_hasNextVertex = true;\n  return this;\n}\n\n/**\n * Create a chain with isolated end vertices.\n *\n * @param vertices an array of vertices, these are copied\n * @param count the vertex count\n */\nChainShape.prototype._createChain = function(vertices) {\n  _ASSERT && common.assert(this.m_vertices.length == 0 && this.m_count == 0);\n  _ASSERT && common.assert(vertices.length >= 2);\n  for (var i = 1; i < vertices.length; ++i) {\n    // If the code crashes here, it means your vertices are too close together.\n    var v1 = vertices[i - 1];\n    var v2 = vertices[i];\n    _ASSERT && common.assert(Vec2.distanceSquared(v1, v2) > Settings.linearSlopSquared);\n  }\n\n  this.m_count = vertices.length;\n  for (var i = 0; i < vertices.length; ++i) {\n    this.m_vertices[i] = Vec2.clone(vertices[i]);\n  }\n\n  this.m_hasPrevVertex = false;\n  this.m_hasNextVertex = false;\n  this.m_prevVertex = null;\n  this.m_nextVertex = null;\n  return this;\n}\n\nChainShape.prototype._reset = function() {\n  if (this.m_isLoop) {\n    this._createLoop(this.m_vertices);\n  } else {\n    this._createChain(this.m_vertices);\n  }\n}\n\n/**\n * Establish connectivity to a vertex that precedes the first vertex. Don't call\n * this for loops.\n */\nChainShape.prototype.setPrevVertex = function(prevVertex) {\n  this.m_prevVertex = prevVertex;\n  this.m_hasPrevVertex = true;\n}\n\n/**\n * Establish connectivity to a vertex that follows the last vertex. Don't call\n * this for loops.\n */\nChainShape.prototype.setNextVertex = function(nextVertex) {\n  this.m_nextVertex = nextVertex;\n  this.m_hasNextVertex = true;\n}\n\n/**\n * @deprecated\n */\nChainShape.prototype._clone = function() {\n  var clone = new ChainShape();\n  clone.createChain(this.m_vertices);\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_prevVertex = this.m_prevVertex;\n  clone.m_nextVertex = this.m_nextVertex;\n  clone.m_hasPrevVertex = this.m_hasPrevVertex;\n  clone.m_hasNextVertex = this.m_hasNextVertex;\n  return clone;\n}\n\nChainShape.prototype.getChildCount = function() {\n  // edge count = vertex count - 1\n  return this.m_count - 1;\n}\n\n// Get a child edge.\nChainShape.prototype.getChildEdge = function(edge, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count - 1);\n  edge.m_type = EdgeShape.TYPE;\n  edge.m_radius = this.m_radius;\n\n  edge.m_vertex1 = this.m_vertices[childIndex];\n  edge.m_vertex2 = this.m_vertices[childIndex + 1];\n\n  if (childIndex > 0) {\n    edge.m_vertex0 = this.m_vertices[childIndex - 1];\n    edge.m_hasVertex0 = true;\n  } else {\n    edge.m_vertex0 = this.m_prevVertex;\n    edge.m_hasVertex0 = this.m_hasPrevVertex;\n  }\n\n  if (childIndex < this.m_count - 2) {\n    edge.m_vertex3 = this.m_vertices[childIndex + 2];\n    edge.m_hasVertex3 = true;\n  } else {\n    edge.m_vertex3 = this.m_nextVertex;\n    edge.m_hasVertex3 = this.m_hasNextVertex;\n  }\n}\n\nChainShape.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(0 <= index && index <= this.m_count);\n  if (index < this.m_count) {\n    return this.m_vertices[index];\n  } else {\n    return this.m_vertices[0];\n  }\n}\n\n/**\n * This always return false.\n */\nChainShape.prototype.testPoint = function(xf, p) {\n  return false;\n}\n\nChainShape.prototype.rayCast = function(output, input, xf, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count);\n\n  var edgeShape = new EdgeShape(this.getVertex(childIndex), this.getVertex(childIndex + 1));\n  return edgeShape.rayCast(output, input, xf, 0);\n}\n\nChainShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count);\n\n  var v1 = Transform.mulVec2(xf, this.getVertex(childIndex));\n  var v2 = Transform.mulVec2(xf, this.getVertex(childIndex + 1));\n\n  aabb.combinePoints(v1, v2);\n}\n\n/**\n * Chains have zero mass.\n */\nChainShape.prototype.computeMass = function(massData, density) {\n  massData.mass = 0.0;\n  massData.center = Vec2.neo();\n  massData.I = 0.0;\n}\n\nChainShape.prototype.computeDistanceProxy = function(proxy, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count);\n  proxy.m_buffer[0] = this.getVertex(childIndex);\n  proxy.m_buffer[1] = this.getVertex(childIndex + 1);\n  proxy.m_vertices = proxy.m_buffer;\n  proxy.m_count = 2;\n  proxy.m_radius = this.m_radius;\n};\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default BoxShape;\n\nimport common from '../util/common';\nimport PolygonShape from './PolygonShape';\n\nBoxShape._super = PolygonShape;\nBoxShape.prototype = Object.create(BoxShape._super.prototype);\n\nBoxShape.TYPE = 'polygon';\n\n/**\n * A rectangle polygon which extend PolygonShape.\n */\nfunction BoxShape(hx, hy, center, angle) {\n  if (!(this instanceof BoxShape)) {\n    return new BoxShape(hx, hy, center, angle);\n  }\n\n  BoxShape._super.call(this);\n\n  this._setAsBox(hx, hy, center, angle);\n}\n\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nimport common from '../util/common';\nimport Math from '../common/Math';\nimport Transform from '../common/Transform';\nimport Vec2 from '../common/Vec2';\nimport Settings from '../Settings';\nimport Shape from '../Shape';\nimport Contact from '../Contact';\nimport Manifold from '../Manifold';\nimport CircleShape from './CircleShape';\n\nContact.addType(CircleShape.TYPE, CircleShape.TYPE, CircleCircleContact);\n\nfunction CircleCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB, indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == CircleShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n  CollideCircles(manifold, fixtureA.getShape(), xfA, fixtureB.getShape(), xfB);\n}\n\nfunction CollideCircles(manifold, circleA, xfA, circleB, xfB) {\n  manifold.pointCount = 0;\n\n  var pA = Transform.mulVec2(xfA, circleA.m_p);\n  var pB = Transform.mulVec2(xfB, circleB.m_p);\n\n  var distSqr = Vec2.distanceSquared(pB, pA);\n  var rA = circleA.m_radius;\n  var rB = circleB.m_radius;\n  var radius = rA + rB;\n  if (distSqr > radius * radius) {\n    return;\n  }\n\n  manifold.type = Manifold.e_circles;\n  manifold.localPoint.set(circleA.m_p);\n  manifold.localNormal.setZero();\n  manifold.pointCount = 1;\n  manifold.points[0].localPoint.set(circleB.m_p);\n\n  // manifold.points[0].id.key = 0;\n  manifold.points[0].id.cf.indexA = 0;\n  manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n  manifold.points[0].id.cf.indexB = 0;\n  manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n}\n\nexport { CollideCircles };\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nimport common from '../util/common';\nimport Math from '../common/Math';\nimport Transform from '../common/Transform';\nimport Vec2 from '../common/Vec2';\nimport Rot from '../common/Rot';\nimport Settings from '../Settings';\nimport Shape from '../Shape';\nimport Contact from '../Contact';\nimport Manifold from '../Manifold';\nimport EdgeShape from './EdgeShape';\nimport ChainShape from './ChainShape';\nimport CircleShape from './CircleShape';\n\nContact.addType(EdgeShape.TYPE, CircleShape.TYPE, EdgeCircleContact);\nContact.addType(ChainShape.TYPE, CircleShape.TYPE, ChainCircleContact);\n\nfunction EdgeCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB,\n    indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == EdgeShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n\n  var shapeA = fixtureA.getShape();\n  var shapeB = fixtureB.getShape();\n\n  CollideEdgeCircle(manifold, shapeA, xfA, shapeB, xfB);\n}\n\nfunction ChainCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB,\n    indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == ChainShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n\n  var chain = fixtureA.getShape();\n  var edge = new EdgeShape();\n  chain.getChildEdge(edge, indexA);\n\n  var shapeA = edge;\n  var shapeB = fixtureB.getShape();\n\n  CollideEdgeCircle(manifold, shapeA, xfA, shapeB, xfB);\n}\n\n// Compute contact points for edge versus circle.\n// This accounts for edge connectivity.\nfunction CollideEdgeCircle(manifold, edgeA, xfA, circleB, xfB) {\n  manifold.pointCount = 0;\n\n  // Compute circle in frame of edge\n  var Q = Transform.mulTVec2(xfA, Transform.mulVec2(xfB, circleB.m_p));\n\n  var A = edgeA.m_vertex1;\n  var B = edgeA.m_vertex2;\n  var e = Vec2.sub(B, A);\n\n  // Barycentric coordinates\n  var u = Vec2.dot(e, Vec2.sub(B, Q));\n  var v = Vec2.dot(e, Vec2.sub(Q, A));\n\n  var radius = edgeA.m_radius + circleB.m_radius;\n\n  // Region A\n  if (v <= 0.0) {\n    var P = Vec2.clone(A);\n    var d = Vec2.sub(Q, P);\n    var dd = Vec2.dot(d, d);\n    if (dd > radius * radius) {\n      return;\n    }\n\n    // Is there an edge connected to A?\n    if (edgeA.m_hasVertex0) {\n      var A1 = edgeA.m_vertex0;\n      var B1 = A;\n      var e1 = Vec2.sub(B1, A1);\n      var u1 = Vec2.dot(e1, Vec2.sub(B1, Q));\n\n      // Is the circle in Region AB of the previous edge?\n      if (u1 > 0.0) {\n        return;\n      }\n    }\n\n    manifold.type = Manifold.e_circles;\n    manifold.localNormal.setZero();\n    manifold.localPoint.set(P);\n    manifold.pointCount = 1;\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n    return;\n  }\n\n  // Region B\n  if (u <= 0.0) {\n    var P = Vec2.clone(B);\n    var d = Vec2.sub(Q, P);\n    var dd = Vec2.dot(d, d);\n    if (dd > radius * radius) {\n      return;\n    }\n\n    // Is there an edge connected to B?\n    if (edgeA.m_hasVertex3) {\n      var B2 = edgeA.m_vertex3;\n      var A2 = B;\n      var e2 = Vec2.sub(B2, A2);\n      var v2 = Vec2.dot(e2, Vec2.sub(Q, A2));\n\n      // Is the circle in Region AB of the next edge?\n      if (v2 > 0.0) {\n        return;\n      }\n    }\n\n    manifold.type = Manifold.e_circles;\n    manifold.localNormal.setZero();\n    manifold.localPoint.set(P);\n    manifold.pointCount = 1;\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 1;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n    return;\n  }\n\n  // Region AB\n  var den = Vec2.dot(e, e);\n  _ASSERT && common.assert(den > 0.0);\n  var P = Vec2.combine(u / den, A, v / den, B);\n  var d = Vec2.sub(Q, P);\n  var dd = Vec2.dot(d, d);\n  if (dd > radius * radius) {\n    return;\n  }\n\n  var n = Vec2.neo(-e.y, e.x);\n  if (Vec2.dot(n, Vec2.sub(Q, A)) < 0.0) {\n    n.set(-n.x, -n.y);\n  }\n  n.normalize();\n\n  manifold.type = Manifold.e_faceA;\n  manifold.localNormal = n;\n  manifold.localPoint.set(A);\n  manifold.pointCount = 1;\n  manifold.points[0].localPoint.set(circleB.m_p);\n\n  // manifold.points[0].id.key = 0;\n  manifold.points[0].id.cf.indexA = 0;\n  manifold.points[0].id.cf.typeA = Manifold.e_face;\n  manifold.points[0].id.cf.indexB = 0;\n  manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n}\n\nexport { CollideEdgeCircle };\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nimport common from '../util/common';\nimport Math from '../common/Math';\nimport Transform from '../common/Transform';\nimport Rot from '../common/Rot';\nimport Vec2 from '../common/Vec2';\nimport AABB from '../collision/AABB';\nimport Settings from '../Settings';\nimport Manifold from '../Manifold';\nimport Contact from '../Contact';\nimport Shape from '../Shape';\nimport PolygonShape from './PolygonShape';\n\nexport { CollidePolygons };\n\nContact.addType(PolygonShape.TYPE, PolygonShape.TYPE, PolygonContact);\n\nfunction PolygonContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB, indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == PolygonShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == PolygonShape.TYPE);\n  CollidePolygons(manifold, fixtureA.getShape(), xfA, fixtureB.getShape(), xfB);\n}\n\n/**\n * Find the max separation between poly1 and poly2 using edge normals from\n * poly1.\n */\nfunction FindMaxSeparation(poly1, xf1, poly2, xf2) {\n  var count1 = poly1.m_count;\n  var count2 = poly2.m_count;\n  var n1s = poly1.m_normals;\n  var v1s = poly1.m_vertices;\n  var v2s = poly2.m_vertices;\n  var xf = Transform.mulTXf(xf2, xf1);\n\n  var bestIndex = 0;\n  var maxSeparation = -Infinity;\n  for (var i = 0; i < count1; ++i) {\n    // Get poly1 normal in frame2.\n    var n = Rot.mulVec2(xf.q, n1s[i]);\n    var v1 = Transform.mulVec2(xf, v1s[i]);\n\n    // Find deepest point for normal i.\n    var si = Infinity;\n    for (var j = 0; j < count2; ++j) {\n      var sij = Vec2.dot(n, v2s[j]) - Vec2.dot(n, v1);\n      if (sij < si) {\n        si = sij;\n      }\n    }\n\n    if (si > maxSeparation) {\n      maxSeparation = si;\n      bestIndex = i;\n    }\n  }\n\n  // used to keep last FindMaxSeparation call values\n  FindMaxSeparation._maxSeparation = maxSeparation;\n  FindMaxSeparation._bestIndex = bestIndex;\n}\n\n/**\n * @param {ClipVertex[2]} c\n * @param {int} edge1\n */\nfunction FindIncidentEdge(c, poly1, xf1, edge1, poly2, xf2) {\n  var normals1 = poly1.m_normals;\n\n  var count2 = poly2.m_count;\n  var vertices2 = poly2.m_vertices;\n  var normals2 = poly2.m_normals;\n\n  _ASSERT && common.assert(0 <= edge1 && edge1 < poly1.m_count);\n\n  // Get the normal of the reference edge in poly2's frame.\n  var normal1 = Rot.mulT(xf2.q, Rot.mulVec2(xf1.q, normals1[edge1]));\n\n  // Find the incident edge on poly2.\n  var index = 0;\n  var minDot = Infinity;\n  for (var i = 0; i < count2; ++i) {\n    var dot = Vec2.dot(normal1, normals2[i]);\n    if (dot < minDot) {\n      minDot = dot;\n      index = i;\n    }\n  }\n\n  // Build the clip vertices for the incident edge.\n  var i1 = index;\n  var i2 = i1 + 1 < count2 ? i1 + 1 : 0;\n\n  c[0].v = Transform.mulVec2(xf2, vertices2[i1]);\n  c[0].id.cf.indexA = edge1;\n  c[0].id.cf.indexB = i1;\n  c[0].id.cf.typeA = Manifold.e_face;\n  c[0].id.cf.typeB = Manifold.e_vertex;\n\n  c[1].v = Transform.mulVec2(xf2, vertices2[i2]);\n  c[1].id.cf.indexA = edge1;\n  c[1].id.cf.indexB = i2;\n  c[1].id.cf.typeA = Manifold.e_face;\n  c[1].id.cf.typeB = Manifold.e_vertex;\n}\n\n/**\n * \n * Find edge normal of max separation on A - return if separating axis is found<br>\n * Find edge normal of max separation on B - return if separation axis is found<br>\n * Choose reference edge as min(minA, minB)<br>\n * Find incident edge<br>\n * Clip\n * \n * The normal points from 1 to 2\n */\nfunction CollidePolygons(manifold, polyA, xfA, polyB, xfB) {\n  manifold.pointCount = 0;\n  var totalRadius = polyA.m_radius + polyB.m_radius;\n\n  FindMaxSeparation(polyA, xfA, polyB, xfB);\n  var edgeA = FindMaxSeparation._bestIndex;\n  var separationA = FindMaxSeparation._maxSeparation;\n  if (separationA > totalRadius)\n    return;\n\n  FindMaxSeparation(polyB, xfB, polyA, xfA);\n  var edgeB = FindMaxSeparation._bestIndex;\n  var separationB = FindMaxSeparation._maxSeparation;\n  if (separationB > totalRadius)\n    return;\n\n  var poly1; // reference polygon\n  var poly2; // incident polygon\n  var xf1;\n  var xf2;\n  var edge1; // reference edge\n  var flip;\n  var k_tol = 0.1 * Settings.linearSlop;\n\n  if (separationB > separationA + k_tol) {\n    poly1 = polyB;\n    poly2 = polyA;\n    xf1 = xfB;\n    xf2 = xfA;\n    edge1 = edgeB;\n    manifold.type = Manifold.e_faceB;\n    flip = 1;\n  } else {\n    poly1 = polyA;\n    poly2 = polyB;\n    xf1 = xfA;\n    xf2 = xfB;\n    edge1 = edgeA;\n    manifold.type = Manifold.e_faceA;\n    flip = 0;\n  }\n\n  var incidentEdge = [ new Manifold.ClipVertex(), new Manifold.ClipVertex() ];\n  FindIncidentEdge(incidentEdge, poly1, xf1, edge1, poly2, xf2);\n\n  var count1 = poly1.m_count;\n  var vertices1 = poly1.m_vertices;\n\n  var iv1 = edge1;\n  var iv2 = edge1 + 1 < count1 ? edge1 + 1 : 0;\n\n  var v11 = vertices1[iv1];\n  var v12 = vertices1[iv2];\n\n  var localTangent = Vec2.sub(v12, v11);\n  localTangent.normalize();\n\n  var localNormal = Vec2.cross(localTangent, 1.0);\n  var planePoint = Vec2.combine(0.5, v11, 0.5, v12);\n\n  var tangent = Rot.mulVec2(xf1.q, localTangent);\n  var normal = Vec2.cross(tangent, 1.0);\n\n  v11 = Transform.mulVec2(xf1, v11);\n  v12 = Transform.mulVec2(xf1, v12);\n\n  // Face offset.\n  var frontOffset = Vec2.dot(normal, v11);\n\n  // Side offsets, extended by polytope skin thickness.\n  var sideOffset1 = -Vec2.dot(tangent, v11) + totalRadius;\n  var sideOffset2 = Vec2.dot(tangent, v12) + totalRadius;\n\n  // Clip incident edge against extruded edge1 side edges.\n  var clipPoints1 = [ new Manifold.ClipVertex(), new Manifold.ClipVertex() ];\n  var clipPoints2 = [ new Manifold.ClipVertex(), new Manifold.ClipVertex() ];\n  var np;\n\n  // Clip to box side 1\n  np = Manifold.clipSegmentToLine(clipPoints1, incidentEdge, Vec2.neg(tangent),\n      sideOffset1, iv1);\n\n  if (np < 2) {\n    return;\n  }\n\n  // Clip to negative box side 1\n  np = Manifold.clipSegmentToLine(clipPoints2, clipPoints1, tangent,\n      sideOffset2, iv2);\n\n  if (np < 2) {\n    return;\n  }\n\n  // Now clipPoints2 contains the clipped points.\n  manifold.localNormal = localNormal;\n  manifold.localPoint = planePoint;\n\n  var pointCount = 0;\n  for (var i = 0; i < clipPoints2.length/* maxManifoldPoints */; ++i) {\n    var separation = Vec2.dot(normal, clipPoints2[i].v) - frontOffset;\n\n    if (separation <= totalRadius) {\n      var cp = manifold.points[pointCount]; // ManifoldPoint\n      cp.localPoint.set(Transform.mulTVec2(xf2, clipPoints2[i].v));\n      cp.id = clipPoints2[i].id;\n      if (flip) {\n        // Swap features\n        var cf = cp.id.cf; // ContactFeature\n        var indexA = cf.indexA;\n        var indexB = cf.indexB;\n        var typeA = cf.typeA;\n        var typeB = cf.typeB;\n        cf.indexA = indexB;\n        cf.indexB = indexA;\n        cf.typeA = typeB;\n        cf.typeB = typeA;\n      }\n      ++pointCount;\n    }\n  }\n\n  manifold.pointCount = pointCount;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nimport common from '../util/common';\nimport Math from '../common/Math';\nimport Transform from '../common/Transform';\nimport Rot from '../common/Rot';\nimport Vec2 from '../common/Vec2';\nimport AABB from '../collision/AABB';\nimport Settings from '../Settings';\nimport Manifold from '../Manifold';\nimport Contact from '../Contact';\nimport Shape from '../Shape';\nimport CircleShape from './CircleShape';\nimport PolygonShape from './PolygonShape';\n\nContact.addType(PolygonShape.TYPE, CircleShape.TYPE, PolygonCircleContact);\n\nfunction PolygonCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB, indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == PolygonShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n  CollidePolygonCircle(manifold, fixtureA.getShape(), xfA, fixtureB.getShape(),\n      xfB);\n}\n\nfunction CollidePolygonCircle(manifold, polygonA, xfA, circleB, xfB) {\n  manifold.pointCount = 0;\n\n  // Compute circle position in the frame of the polygon.\n  var c = Transform.mulVec2(xfB, circleB.m_p);\n  var cLocal = Transform.mulTVec2(xfA, c);\n\n  // Find the min separating edge.\n  var normalIndex = 0;\n  var separation = -Infinity;\n  var radius = polygonA.m_radius + circleB.m_radius;\n  var vertexCount = polygonA.m_count;\n  var vertices = polygonA.m_vertices;\n  var normals = polygonA.m_normals;\n\n  for (var i = 0; i < vertexCount; ++i) {\n    var s = Vec2.dot(normals[i], Vec2.sub(cLocal, vertices[i]));\n\n    if (s > radius) {\n      // Early out.\n      return;\n    }\n\n    if (s > separation) {\n      separation = s;\n      normalIndex = i;\n    }\n  }\n\n  // Vertices that subtend the incident face.\n  var vertIndex1 = normalIndex;\n  var vertIndex2 = vertIndex1 + 1 < vertexCount ? vertIndex1 + 1 : 0;\n  var v1 = vertices[vertIndex1];\n  var v2 = vertices[vertIndex2];\n\n  // If the center is inside the polygon ...\n  if (separation < Math.EPSILON) {\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.set(normals[normalIndex]);\n    manifold.localPoint.setCombine(0.5, v1, 0.5, v2);\n    manifold.points[0].localPoint = circleB.m_p;\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n    return;\n  }\n\n  // Compute barycentric coordinates\n  var u1 = Vec2.dot(Vec2.sub(cLocal, v1), Vec2.sub(v2, v1));\n  var u2 = Vec2.dot(Vec2.sub(cLocal, v2), Vec2.sub(v1, v2));\n  if (u1 <= 0.0) {\n    if (Vec2.distanceSquared(cLocal, v1) > radius * radius) {\n      return;\n    }\n\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.setCombine(1, cLocal, -1, v1);\n    manifold.localNormal.normalize();\n    manifold.localPoint = v1;\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n  } else if (u2 <= 0.0) {\n    if (Vec2.distanceSquared(cLocal, v2) > radius * radius) {\n      return;\n    }\n\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.setCombine(1, cLocal, -1, v2);\n    manifold.localNormal.normalize();\n    manifold.localPoint.set(v2);\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n  } else {\n    var faceCenter = Vec2.mid(v1, v2);\n    var separation = Vec2.dot(cLocal, normals[vertIndex1])\n        - Vec2.dot(faceCenter, normals[vertIndex1]);\n    if (separation > radius) {\n      return;\n    }\n\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.set(normals[vertIndex1]);\n    manifold.localPoint.set(faceCenter);\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n  }\n}\n\nexport { CollidePolygonCircle };\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nimport common from '../util/common';\nimport Math from '../common/Math';\nimport Transform from '../common/Transform';\nimport Vec2 from '../common/Vec2';\nimport Rot from '../common/Rot';\nimport Settings from '../Settings';\nimport Shape from '../Shape';\nimport Contact from '../Contact';\nimport Manifold from '../Manifold';\nimport EdgeShape from './EdgeShape';\nimport ChainShape from './ChainShape';\nimport PolygonShape from './PolygonShape';\n\nContact.addType(EdgeShape.TYPE, PolygonShape.TYPE, EdgePolygonContact);\nContact.addType(ChainShape.TYPE, PolygonShape.TYPE, ChainPolygonContact);\n\nfunction EdgePolygonContact(manifold, xfA, fA, indexA, xfB, fB, indexB) {\n  _ASSERT && common.assert(fA.getType() == EdgeShape.TYPE);\n  _ASSERT && common.assert(fB.getType() == PolygonShape.TYPE);\n\n  CollideEdgePolygon(manifold, fA.getShape(), xfA, fB.getShape(), xfB);\n}\n\nfunction ChainPolygonContact(manifold, xfA, fA, indexA, xfB, fB, indexB) {\n  _ASSERT && common.assert(fA.getType() == ChainShape.TYPE);\n  _ASSERT && common.assert(fB.getType() == PolygonShape.TYPE);\n\n  var chain = fA.getShape();\n  var edge = new EdgeShape();\n  chain.getChildEdge(edge, indexA);\n\n  CollideEdgePolygon(manifold, edge, xfA, fB.getShape(), xfB);\n}\n\n// EPAxis Type\nvar e_unknown = -1;\nvar e_edgeA = 1;\nvar e_edgeB = 2;\n\n// VertexType unused?\nvar e_isolated = 0;\nvar e_concave = 1;\nvar e_convex = 2;\n\n// This structure is used to keep track of the best separating axis.\nfunction EPAxis() {\n  this.type; // Type\n  this.index;\n  this.separation;\n};\n\n// This holds polygon B expressed in frame A.\nfunction TempPolygon() {\n  this.vertices = []; // Vec2[Settings.maxPolygonVertices]\n  this.normals = []; // Vec2[Settings.maxPolygonVertices];\n  this.count = 0;\n};\n\n// Reference face used for clipping\nfunction ReferenceFace() {\n  this.i1, this.i2; // int\n  this.v1, this.v2; // v\n  this.normal = Vec2.zero();\n  this.sideNormal1 = Vec2.zero();\n  this.sideOffset1; // float\n  this.sideNormal2 = Vec2.zero();\n  this.sideOffset2; // float\n};\n\n// reused\nvar edgeAxis = new EPAxis();\nvar polygonAxis = new EPAxis();\nvar polygonBA = new TempPolygon();\nvar rf = new ReferenceFace();\n\n/**\n * This function collides and edge and a polygon, taking into account edge\n * adjacency.\n */\nfunction CollideEdgePolygon(manifold, edgeA, xfA, polygonB, xfB) {\n  // Algorithm:\n  // 1. Classify v1 and v2\n  // 2. Classify polygon centroid as front or back\n  // 3. Flip normal if necessary\n  // 4. Initialize normal range to [-pi, pi] about face normal\n  // 5. Adjust normal range according to adjacent edges\n  // 6. Visit each separating axes, only accept axes within the range\n  // 7. Return if _any_ axis indicates separation\n  // 8. Clip\n\n  var m_type1, m_type2; // VertexType unused?\n\n  var xf = Transform.mulTXf(xfA, xfB);\n\n  var centroidB = Transform.mulVec2(xf, polygonB.m_centroid);\n\n  var v0 = edgeA.m_vertex0;\n  var v1 = edgeA.m_vertex1;\n  var v2 = edgeA.m_vertex2;\n  var v3 = edgeA.m_vertex3;\n\n  var hasVertex0 = edgeA.m_hasVertex0;\n  var hasVertex3 = edgeA.m_hasVertex3;\n\n  var edge1 = Vec2.sub(v2, v1);\n  edge1.normalize();\n  var normal1 = Vec2.neo(edge1.y, -edge1.x);\n  var offset1 = Vec2.dot(normal1, Vec2.sub(centroidB, v1));\n  var offset0 = 0.0;\n  var offset2 = 0.0;\n  var convex1 = false;\n  var convex2 = false;\n\n  // Is there a preceding edge?\n  if (hasVertex0) {\n    var edge0 = Vec2.sub(v1, v0);\n    edge0.normalize();\n    var normal0 = Vec2.neo(edge0.y, -edge0.x);\n    convex1 = Vec2.cross(edge0, edge1) >= 0.0;\n    offset0 = Vec2.dot(normal0, centroidB) - Vec2.dot(normal0, v0);\n  }\n\n  // Is there a following edge?\n  if (hasVertex3) {\n    var edge2 = Vec2.sub(v3, v2);\n    edge2.normalize();\n    var normal2 = Vec2.neo(edge2.y, -edge2.x);\n    convex2 = Vec2.cross(edge1, edge2) > 0.0;\n    offset2 = Vec2.dot(normal2, centroidB) - Vec2.dot(normal2, v2);\n  }\n\n  var front;\n  var normal = Vec2.zero();\n  var lowerLimit = Vec2.zero();\n  var upperLimit = Vec2.zero();\n\n  // Determine front or back collision. Determine collision normal limits.\n  if (hasVertex0 && hasVertex3) {\n    if (convex1 && convex2) {\n      front = offset0 >= 0.0 || offset1 >= 0.0 || offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal0);\n        upperLimit.set(normal2);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.setMul(-1, normal1);\n      }\n    } else if (convex1) {\n      front = offset0 >= 0.0 || (offset1 >= 0.0 && offset2 >= 0.0);\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal0);\n        upperLimit.set(normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal2);\n        upperLimit.setMul(-1, normal1);\n      }\n    } else if (convex2) {\n      front = offset2 >= 0.0 || (offset0 >= 0.0 && offset1 >= 0.0);\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal1);\n        upperLimit.set(normal2);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.setMul(-1, normal0);\n      }\n    } else {\n      front = offset0 >= 0.0 && offset1 >= 0.0 && offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal1);\n        upperLimit.set(normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal2);\n        upperLimit.setMul(-1, normal0);\n      }\n    }\n  } else if (hasVertex0) {\n    if (convex1) {\n      front = offset0 >= 0.0 || offset1 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal0);\n        upperLimit.setMul(-1, normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.set(normal1);\n        upperLimit.setMul(-1, normal1);\n      }\n    } else {\n      front = offset0 >= 0.0 && offset1 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal1);\n        upperLimit.setMul(-1, normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.set(normal1);\n        upperLimit.setMul(-1, normal0);\n      }\n    }\n  } else if (hasVertex3) {\n    if (convex2) {\n      front = offset1 >= 0.0 || offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.set(normal2);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.set(normal1);\n      }\n    } else {\n      front = offset1 >= 0.0 && offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.set(normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal2);\n        upperLimit.set(normal1);\n      }\n    }\n  } else {\n    front = offset1 >= 0.0;\n    if (front) {\n      normal.set(normal1);\n      lowerLimit.setMul(-1, normal1);\n      upperLimit.setMul(-1, normal1);\n    } else {\n      normal.setMul(-1, normal1);\n      lowerLimit.set(normal1);\n      upperLimit.set(normal1);\n    }\n  }\n\n  // Get polygonB in frameA\n  polygonBA.count = polygonB.m_count;\n  for (var i = 0; i < polygonB.m_count; ++i) {\n    polygonBA.vertices[i] = Transform.mulVec2(xf, polygonB.m_vertices[i]);\n    polygonBA.normals[i] = Rot.mulVec2(xf.q, polygonB.m_normals[i]);\n  }\n\n  var radius = 2.0 * Settings.polygonRadius;\n\n  manifold.pointCount = 0;\n\n  { // ComputeEdgeSeparation\n    edgeAxis.type = e_edgeA;\n    edgeAxis.index = front ? 0 : 1;\n    edgeAxis.separation = Infinity;\n\n    for (var i = 0; i < polygonBA.count; ++i) {\n      var s = Vec2.dot(normal, Vec2.sub(polygonBA.vertices[i], v1));\n      if (s < edgeAxis.separation) {\n        edgeAxis.separation = s;\n      }\n    }\n  }\n\n  // If no valid normal can be found than this edge should not collide.\n  if (edgeAxis.type == e_unknown) {\n    return;\n  }\n\n  if (edgeAxis.separation > radius) {\n    return;\n  }\n\n  { // ComputePolygonSeparation\n    polygonAxis.type = e_unknown;\n    polygonAxis.index = -1;\n    polygonAxis.separation = -Infinity;\n\n    var perp = Vec2.neo(-normal.y, normal.x);\n\n    for (var i = 0; i < polygonBA.count; ++i) {\n      var n = Vec2.neg(polygonBA.normals[i]);\n\n      var s1 = Vec2.dot(n, Vec2.sub(polygonBA.vertices[i], v1));\n      var s2 = Vec2.dot(n, Vec2.sub(polygonBA.vertices[i], v2));\n      var s = Math.min(s1, s2);\n\n      if (s > radius) {\n        // No collision\n        polygonAxis.type = e_edgeB;\n        polygonAxis.index = i;\n        polygonAxis.separation = s;\n        break;\n      }\n\n      // Adjacency\n      if (Vec2.dot(n, perp) >= 0.0) {\n        if (Vec2.dot(Vec2.sub(n, upperLimit), normal) < -Settings.angularSlop) {\n          continue;\n        }\n      } else {\n        if (Vec2.dot(Vec2.sub(n, lowerLimit), normal) < -Settings.angularSlop) {\n          continue;\n        }\n      }\n\n      if (s > polygonAxis.separation) {\n        polygonAxis.type = e_edgeB;\n        polygonAxis.index = i;\n        polygonAxis.separation = s;\n      }\n    }\n  }\n\n  if (polygonAxis.type != e_unknown && polygonAxis.separation > radius) {\n    return;\n  }\n\n  // Use hysteresis for jitter reduction.\n  var k_relativeTol = 0.98;\n  var k_absoluteTol = 0.001;\n\n  var primaryAxis;\n  if (polygonAxis.type == e_unknown) {\n    primaryAxis = edgeAxis;\n  } else if (polygonAxis.separation > k_relativeTol * edgeAxis.separation + k_absoluteTol) {\n    primaryAxis = polygonAxis;\n  } else {\n    primaryAxis = edgeAxis;\n  }\n\n  var ie = [ new Manifold.ClipVertex(), new Manifold.ClipVertex() ];\n\n  if (primaryAxis.type == e_edgeA) {\n    manifold.type = Manifold.e_faceA;\n\n    // Search for the polygon normal that is most anti-parallel to the edge\n    // normal.\n    var bestIndex = 0;\n    var bestValue = Vec2.dot(normal, polygonBA.normals[0]);\n    for (var i = 1; i < polygonBA.count; ++i) {\n      var value = Vec2.dot(normal, polygonBA.normals[i]);\n      if (value < bestValue) {\n        bestValue = value;\n        bestIndex = i;\n      }\n    }\n\n    var i1 = bestIndex;\n    var i2 = i1 + 1 < polygonBA.count ? i1 + 1 : 0;\n\n    ie[0].v = polygonBA.vertices[i1];\n    ie[0].id.cf.indexA = 0;\n    ie[0].id.cf.indexB = i1;\n    ie[0].id.cf.typeA = Manifold.e_face;\n    ie[0].id.cf.typeB = Manifold.e_vertex;\n\n    ie[1].v = polygonBA.vertices[i2];\n    ie[1].id.cf.indexA = 0;\n    ie[1].id.cf.indexB = i2;\n    ie[1].id.cf.typeA = Manifold.e_face;\n    ie[1].id.cf.typeB = Manifold.e_vertex;\n\n    if (front) {\n      rf.i1 = 0;\n      rf.i2 = 1;\n      rf.v1 = v1;\n      rf.v2 = v2;\n      rf.normal.set(normal1);\n    } else {\n      rf.i1 = 1;\n      rf.i2 = 0;\n      rf.v1 = v2;\n      rf.v2 = v1;\n      rf.normal.setMul(-1, normal1);\n    }\n  } else {\n    manifold.type = Manifold.e_faceB;\n\n    ie[0].v = v1;\n    ie[0].id.cf.indexA = 0;\n    ie[0].id.cf.indexB = primaryAxis.index;\n    ie[0].id.cf.typeA = Manifold.e_vertex;\n    ie[0].id.cf.typeB = Manifold.e_face;\n\n    ie[1].v = v2;\n    ie[1].id.cf.indexA = 0;\n    ie[1].id.cf.indexB = primaryAxis.index;\n    ie[1].id.cf.typeA = Manifold.e_vertex;\n    ie[1].id.cf.typeB = Manifold.e_face;\n\n    rf.i1 = primaryAxis.index;\n    rf.i2 = rf.i1 + 1 < polygonBA.count ? rf.i1 + 1 : 0;\n    rf.v1 = polygonBA.vertices[rf.i1];\n    rf.v2 = polygonBA.vertices[rf.i2];\n    rf.normal.set(polygonBA.normals[rf.i1]);\n  }\n\n  rf.sideNormal1.set(rf.normal.y, -rf.normal.x);\n  rf.sideNormal2.setMul(-1, rf.sideNormal1);\n  rf.sideOffset1 = Vec2.dot(rf.sideNormal1, rf.v1);\n  rf.sideOffset2 = Vec2.dot(rf.sideNormal2, rf.v2);\n\n  // Clip incident edge against extruded edge1 side edges.\n  var clipPoints1 = [ new Manifold.ClipVertex(), new Manifold.ClipVertex() ];\n  var clipPoints2 = [ new Manifold.ClipVertex(), new Manifold.ClipVertex() ];\n\n  var np;\n\n  // Clip to box side 1\n  np = Manifold.clipSegmentToLine(clipPoints1, ie, rf.sideNormal1, rf.sideOffset1, rf.i1);\n\n  if (np < Settings.maxManifoldPoints) {\n    return;\n  }\n\n  // Clip to negative box side 1\n  np = Manifold.clipSegmentToLine(clipPoints2, clipPoints1, rf.sideNormal2, rf.sideOffset2, rf.i2);\n\n  if (np < Settings.maxManifoldPoints) {\n    return;\n  }\n\n  // Now clipPoints2 contains the clipped points.\n  if (primaryAxis.type == e_edgeA) {\n    manifold.localNormal = Vec2.clone(rf.normal);\n    manifold.localPoint = Vec2.clone(rf.v1);\n  } else {\n    manifold.localNormal = Vec2.clone(polygonB.m_normals[rf.i1]);\n    manifold.localPoint = Vec2.clone(polygonB.m_vertices[rf.i1]);\n  }\n\n  var pointCount = 0;\n  for (var i = 0; i < Settings.maxManifoldPoints; ++i) {\n    var separation = Vec2.dot(rf.normal, Vec2.sub(clipPoints2[i].v, rf.v1));\n\n    if (separation <= radius) {\n      var cp = manifold.points[pointCount]; // ManifoldPoint\n\n      if (primaryAxis.type == e_edgeA) {\n        cp.localPoint = Transform.mulT(xf, clipPoints2[i].v);\n        cp.id = clipPoints2[i].id;\n      } else {\n        cp.localPoint = clipPoints2[i].v;\n        cp.id.cf.typeA = clipPoints2[i].id.cf.typeB;\n        cp.id.cf.typeB = clipPoints2[i].id.cf.typeA;\n        cp.id.cf.indexA = clipPoints2[i].id.cf.indexB;\n        cp.id.cf.indexB = clipPoints2[i].id.cf.indexA;\n      }\n\n      ++pointCount;\n    }\n  }\n\n  manifold.pointCount = pointCount;\n}\n\nexport { CollideEdgePolygon };\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default DistanceJoint;\n\nimport options from '../util/options';\nimport Settings from '../Settings';\n\nimport Math from '../common/Math';\nimport Vec2 from '../common/Vec2';\nimport Vec3 from '../common/Vec3';\nimport Mat22 from '../common/Mat22';\nimport Mat33 from '../common/Mat33';\nimport Rot from '../common/Rot';\nimport Sweep from '../common/Sweep';\nimport Transform from '../common/Transform';\nimport Velocity from '../common/Velocity';\nimport Position from '../common/Position';\n\nimport Joint from '../Joint';\nimport Body from '../Body';\n\nDistanceJoint.TYPE = 'distance-joint';\nJoint.TYPES[DistanceJoint.TYPE] = DistanceJoint;\n\nDistanceJoint._super = Joint;\nDistanceJoint.prototype = Object.create(DistanceJoint._super.prototype);\n\n/**\n * @typedef {Object} DistanceJointDef\n *\n * Distance joint definition. This requires defining an anchor point on both\n * bodies and the non-zero length of the distance joint. The definition uses\n * local anchor points so that the initial configuration can violate the\n * constraint slightly. This helps when saving and loading a game. Warning: Do\n * not use a zero or short length.\n * \n * @prop {float} frequencyHz The mass-spring-damper frequency in Hertz. A value\n *       of 0 disables softness.\n * @prop {float} dampingRatio The damping ratio. 0 = no damping, 1 = critical\n *       damping.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {number} length Distance length.\n */\n\nvar DEFAULTS = {\n  frequencyHz : 0.0,\n  dampingRatio : 0.0\n};\n\n/**\n * A distance joint constrains two points on two bodies to remain at a fixed\n * distance from each other. You can view this as a massless, rigid rod.\n *\n * @param {DistanceJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Vec2} anchorA Anchor A in global coordination.\n * @param {Vec2} anchorB Anchor B in global coordination.\n */\nfunction DistanceJoint(def, bodyA, bodyB, anchorA, anchorB) {\n  if (!(this instanceof DistanceJoint)) {\n    return new DistanceJoint(def, bodyA, bodyB, anchorA, anchorB);\n  }\n\n  // order of constructor arguments is changed in v0.2\n  if (bodyB && anchorA && ('m_type' in anchorA) && ('x' in bodyB) && ('y' in bodyB)) {\n    var temp = bodyB;\n    bodyB = anchorA;\n    anchorA = temp;\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = DistanceJoint.TYPE;\n\n  // Solver shared\n  this.m_localAnchorA = Vec2.clone(anchorA ? bodyA.getLocalPoint(anchorA) : def.localAnchorA || Vec2.zero());\n  this.m_localAnchorB = Vec2.clone(anchorB ? bodyB.getLocalPoint(anchorB) : def.localAnchorB || Vec2.zero());\n  this.m_length = Math.isFinite(def.length) ? def.length :\n    Vec2.distance(bodyA.getWorldPoint(this.m_localAnchorA), bodyB.getWorldPoint(this.m_localAnchorB));\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n  this.m_impulse = 0.0;\n  this.m_gamma = 0.0;\n  this.m_bias = 0.0;\n\n  // Solver temp\n  this.m_u; // Vec2\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA;\n  this.m_invMassB;\n  this.m_invIA;\n  this.m_invIB;\n  this.m_mass;\n\n  // 1-D constrained system\n  // m (v2 - v1) = lambda\n  // v2 + (beta/h) * x1 + gamma * lambda = 0, gamma has units of inverse mass.\n  // x2 = x1 + h * v2\n\n  // 1-D mass-damper-spring system\n  // m (v2 - v1) + h * d * v2 + h * k *\n\n  // C = norm(p2 - p1) - L\n  // u = (p2 - p1) / norm(p2 - p1)\n  // Cdot = dot(u, v2 + cross(w2, r2) - v1 - cross(w1, r1))\n  // J = [-u -cross(r1, u) u cross(r2, u)]\n  // K = J * invM * JT\n  // = invMass1 + invI1 * cross(r1, u)^2 + invMass2 + invI2 * cross(r2, u)^2\n};\n\nDistanceJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    frequencyHz: this.m_frequencyHz,\n    dampingRatio: this.m_dampingRatio,\n\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    length: this.m_length,\n\n    impulse: this.m_impulse,\n    gamma: this.m_gamma,\n    bias: this.m_bias,\n  };\n};\n\nDistanceJoint._deserialize = function(data, world, restore) {\n  data = Object.assign({}, data);\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new DistanceJoint(data);\n  return joint;\n};\n\n/**\n * @internal\n */\nDistanceJoint.prototype._setAnchors = function(def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n\n  if (def.length > 0) {\n    this.m_length = +def.length;\n  } else if (def.length < 0) { // don't change length\n  } else if (def.anchorA || def.anchorA || def.anchorA || def.anchorA) {\n    this.m_length = Vec2.distance(\n        this.m_bodyA.getWorldPoint(this.m_localAnchorA),\n        this.m_bodyB.getWorldPoint(this.m_localAnchorB)\n    );\n  }\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nDistanceJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nDistanceJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * Set/get the natural length. Manipulating the length can lead to non-physical\n * behavior when the frequency is zero.\n */\nDistanceJoint.prototype.setLength = function(length) {\n  this.m_length = length;\n}\n\nDistanceJoint.prototype.getLength = function() {\n  return this.m_length;\n}\n\nDistanceJoint.prototype.setFrequency = function(hz) {\n  this.m_frequencyHz = hz;\n}\n\nDistanceJoint.prototype.getFrequency = function() {\n  return this.m_frequencyHz;\n}\n\nDistanceJoint.prototype.setDampingRatio = function(ratio) {\n  this.m_dampingRatio = ratio;\n}\n\nDistanceJoint.prototype.getDampingRatio = function() {\n  return this.m_dampingRatio;\n}\n\nDistanceJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nDistanceJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nDistanceJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(this.m_impulse, this.m_u).mul(inv_dt);\n}\n\nDistanceJoint.prototype.getReactionTorque = function(inv_dt) {\n  return 0.0;\n}\n\nDistanceJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  this.m_u = Vec2.sub(Vec2.add(cB, this.m_rB), Vec2.add(cA, this.m_rA));\n\n  // Handle singularity.\n  var length = this.m_u.length();\n  if (length > Settings.linearSlop) {\n    this.m_u.mul(1.0 / length);\n  } else {\n    this.m_u.set(0.0, 0.0);\n  }\n\n  var crAu = Vec2.cross(this.m_rA, this.m_u);\n  var crBu = Vec2.cross(this.m_rB, this.m_u);\n  var invMass = this.m_invMassA + this.m_invIA * crAu * crAu + this.m_invMassB\n      + this.m_invIB * crBu * crBu;\n\n  // Compute the effective mass matrix.\n  this.m_mass = invMass != 0.0 ? 1.0 / invMass : 0.0;\n\n  if (this.m_frequencyHz > 0.0) {\n    var C = length - this.m_length;\n\n    // Frequency\n    var omega = 2.0 * Math.PI * this.m_frequencyHz;\n\n    // Damping coefficient\n    var d = 2.0 * this.m_mass * this.m_dampingRatio * omega;\n\n    // Spring stiffness\n    var k = this.m_mass * omega * omega;\n\n    // magic formulas\n    var h = step.dt;\n    this.m_gamma = h * (d + h * k);\n    this.m_gamma = this.m_gamma != 0.0 ? 1.0 / this.m_gamma : 0.0;\n    this.m_bias = C * h * k * this.m_gamma;\n\n    invMass += this.m_gamma;\n    this.m_mass = invMass != 0.0 ? 1.0 / invMass : 0.0;\n  } else {\n    this.m_gamma = 0.0;\n    this.m_bias = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Scale the impulse to support a variable time step.\n    this.m_impulse *= step.dtRatio;\n\n    var P = Vec2.mul(this.m_impulse, this.m_u);\n\n    vA.subMul(this.m_invMassA, P);\n    wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n\n    vB.addMul(this.m_invMassB, P);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n\n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nDistanceJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  // Cdot = dot(u, v + cross(w, r))\n  var vpA = Vec2.add(vA, Vec2.cross(wA, this.m_rA));\n  var vpB = Vec2.add(vB, Vec2.cross(wB, this.m_rB));\n  var Cdot = Vec2.dot(this.m_u, vpB) - Vec2.dot(this.m_u, vpA);\n\n  var impulse = -this.m_mass\n      * (Cdot + this.m_bias + this.m_gamma * this.m_impulse);\n  this.m_impulse += impulse;\n\n  var P = Vec2.mul(impulse, this.m_u);\n  vA.subMul(this.m_invMassA, P);\n  wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n  vB.addMul(this.m_invMassB, P);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nDistanceJoint.prototype.solvePositionConstraints = function(step) {\n  if (this.m_frequencyHz > 0.0) {\n    // There is no position correction for soft distance constraints.\n    return true;\n  }\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_localCenterA);\n  var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_localCenterB);\n  var u = Vec2.sub(Vec2.add(cB, rB), Vec2.add(cA, rA));\n\n  var length = u.normalize();\n  var C = length - this.m_length;\n  C = Math\n      .clamp(C, -Settings.maxLinearCorrection, Settings.maxLinearCorrection);\n\n  var impulse = -this.m_mass * C;\n  var P = Vec2.mul(impulse, u);\n\n  cA.subMul(this.m_invMassA, P);\n  aA -= this.m_invIA * Vec2.cross(rA, P);\n  cB.addMul(this.m_invMassB, P);\n  aB += this.m_invIB * Vec2.cross(rB, P);\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n\n  return Math.abs(C) < Settings.linearSlop;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default FrictionJoint;\n\nimport common from '../util/common';\nimport options from '../util/options';\nimport Settings from '../Settings';\n\nimport Math from '../common/Math';\nimport Vec2 from '../common/Vec2';\nimport Vec3 from '../common/Vec3';\nimport Mat22 from '../common/Mat22';\nimport Mat33 from '../common/Mat33';\nimport Rot from '../common/Rot';\nimport Sweep from '../common/Sweep';\nimport Transform from '../common/Transform';\nimport Velocity from '../common/Velocity';\nimport Position from '../common/Position';\n\nimport Joint from '../Joint';\nimport Body from '../Body';\n\nFrictionJoint.TYPE = 'friction-joint';\nJoint.TYPES[FrictionJoint.TYPE] = FrictionJoint;\n\nFrictionJoint._super = Joint;\nFrictionJoint.prototype = Object.create(FrictionJoint._super.prototype);\n\n/**\n * @typedef {Object} FrictionJointDef\n *\n * Friction joint definition.\n * \n * @prop {float} maxForce The maximum friction force in N.\n * @prop {float} maxTorque The maximum friction torque in N-m.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n */\n\nvar DEFAULTS = {\n  maxForce : 0.0,\n  maxTorque : 0.0,\n};\n\n/**\n * Friction joint. This is used for top-down friction. It provides 2D\n * translational friction and angular friction.\n *\n * @param {FrictionJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Vec2} anchor Anchor in global coordination.\n */\nfunction FrictionJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof FrictionJoint)) {\n    return new FrictionJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = FrictionJoint.TYPE;\n\n  this.m_localAnchorA = Vec2.clone(anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero());\n  this.m_localAnchorB = Vec2.clone(anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero());\n\n  // Solver shared\n  this.m_linearImpulse = Vec2.zero();\n  this.m_angularImpulse = 0.0;\n  this.m_maxForce = def.maxForce;\n  this.m_maxTorque = def.maxTorque;\n\n  // Solver temp\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_linearMass; // Mat22\n  this.m_angularMass; // float\n\n  // Point-to-point constraint\n  // Cdot = v2 - v1\n  // = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n\n  // Angle constraint\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\nFrictionJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    maxForce: this.m_maxForce,\n    maxTorque: this.m_maxTorque,\n\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n  };\n};\n\nFrictionJoint._deserialize = function(data, world, restore) {\n  data = Object.assign({}, data);\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new FrictionJoint(data);\n  return joint;\n};\n\n/**\n * @internal\n */\nFrictionJoint.prototype._setAnchors = function(def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n}\n\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nFrictionJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nFrictionJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * Set the maximum friction force in N.\n */\nFrictionJoint.prototype.setMaxForce = function(force) {\n  _ASSERT && common.assert(Math.isFinite(force) && force >= 0.0);\n  this.m_maxForce = force;\n}\n\n/**\n * Get the maximum friction force in N.\n */\nFrictionJoint.prototype.getMaxForce = function() {\n  return this.m_maxForce;\n}\n\n/**\n * Set the maximum friction torque in N*m.\n */\nFrictionJoint.prototype.setMaxTorque = function(torque) {\n  _ASSERT && common.assert(Math.isFinite(torque) && torque >= 0.0);\n  this.m_maxTorque = torque;\n}\n\n/**\n * Get the maximum friction torque in N*m.\n */\nFrictionJoint.prototype.getMaxTorque = function() {\n  return this.m_maxTorque;\n}\n\nFrictionJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nFrictionJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nFrictionJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(inv_dt, this.m_linearImpulse);\n}\n\nFrictionJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_angularImpulse;\n}\n\nFrictionJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  // Compute the effective mass matrix.\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA, mB = this.m_invMassB; // float\n  var iA = this.m_invIA, iB = this.m_invIB; // float\n\n  var K = new Mat22()\n  K.ex.x = mA + mB + iA * this.m_rA.y * this.m_rA.y + iB * this.m_rB.y\n      * this.m_rB.y;\n  K.ex.y = -iA * this.m_rA.x * this.m_rA.y - iB * this.m_rB.x * this.m_rB.y;\n  K.ey.x = K.ex.y;\n  K.ey.y = mA + mB + iA * this.m_rA.x * this.m_rA.x + iB * this.m_rB.x\n      * this.m_rB.x;\n\n  this.m_linearMass = K.getInverse();\n\n  this.m_angularMass = iA + iB;\n  if (this.m_angularMass > 0.0) {\n    this.m_angularMass = 1.0 / this.m_angularMass;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_linearImpulse.mul(step.dtRatio);\n    this.m_angularImpulse *= step.dtRatio;\n\n    var P = Vec2.neo(this.m_linearImpulse.x, this.m_linearImpulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_angularImpulse);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_angularImpulse);\n\n  } else {\n    this.m_linearImpulse.setZero();\n    this.m_angularImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nFrictionJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA, mB = this.m_invMassB; // float\n  var iA = this.m_invIA, iB = this.m_invIB; // float\n\n  var h = step.dt; // float\n\n  // Solve angular friction\n  {\n    var Cdot = wB - wA; // float\n    var impulse = -this.m_angularMass * Cdot; // float\n\n    var oldImpulse = this.m_angularImpulse; // float\n    var maxImpulse = h * this.m_maxTorque; // float\n    this.m_angularImpulse = Math.clamp(this.m_angularImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_angularImpulse - oldImpulse;\n\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  }\n\n  // Solve linear friction\n  {\n    var Cdot = Vec2.sub(Vec2.add(vB, Vec2.cross(wB, this.m_rB)), Vec2.add(vA,\n        Vec2.cross(wA, this.m_rA))); // Vec2\n\n    var impulse = Vec2.neg(Mat22.mulVec2(this.m_linearMass, Cdot)); // Vec2\n    var oldImpulse = this.m_linearImpulse; // Vec2\n    this.m_linearImpulse.add(impulse);\n\n    var maxImpulse = h * this.m_maxForce; // float\n\n    if (this.m_linearImpulse.lengthSquared() > maxImpulse * maxImpulse) {\n      this.m_linearImpulse.normalize();\n      this.m_linearImpulse.mul(maxImpulse);\n    }\n\n    impulse = Vec2.sub(this.m_linearImpulse, oldImpulse);\n\n    vA.subMul(mA, impulse);\n    wA -= iA * Vec2.cross(this.m_rA, impulse);\n\n    vB.addMul(mB, impulse);\n    wB += iB * Vec2.cross(this.m_rB, impulse);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nFrictionJoint.prototype.solvePositionConstraints = function(step) {\n  return true;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default RevoluteJoint;\n\nimport common from '../util/common';\nimport options from '../util/options';\nimport Settings from '../Settings';\n\nimport Math from '../common/Math';\nimport Vec2 from '../common/Vec2';\nimport Vec3 from '../common/Vec3';\nimport Mat22 from '../common/Mat22';\nimport Mat33 from '../common/Mat33';\nimport Rot from '../common/Rot';\nimport Sweep from '../common/Sweep';\nimport Transform from '../common/Transform';\nimport Velocity from '../common/Velocity';\nimport Position from '../common/Position';\n\nimport Joint from '../Joint';\nimport Body from '../Body';\n\nvar inactiveLimit = 0;\nvar atLowerLimit = 1;\nvar atUpperLimit = 2;\nvar equalLimits = 3;\n\nRevoluteJoint.TYPE = 'revolute-joint';\nJoint.TYPES[RevoluteJoint.TYPE] = RevoluteJoint;\n\nRevoluteJoint._super = Joint;\nRevoluteJoint.prototype = Object.create(RevoluteJoint._super.prototype);\n\n/**\n * @typedef {Object} RevoluteJointDef\n *\n * Revolute joint definition. This requires defining an anchor point where the\n * bodies are joined. The definition uses local anchor points so that the\n * initial configuration can violate the constraint slightly. You also need to\n * specify the initial relative angle for joint limits. This helps when saving\n * and loading a game.\n *\n * The local anchor points are measured from the body's origin rather than the\n * center of mass because: 1. you might not know where the center of mass will\n * be. 2. if you add/remove shapes from a body and recompute the mass, the\n * joints will be broken.\n *\n * @prop {bool} enableLimit A flag to enable joint limits.\n * @prop {bool} enableMotor A flag to enable the joint motor.\n * @prop {float} lowerAngle The lower angle for the joint limit (radians).\n * @prop {float} upperAngle The upper angle for the joint limit (radians).\n * @prop {float} motorSpeed The desired motor speed. Usually in radians per\n *       second.\n * @prop {float} maxMotorTorque The maximum motor torque used to achieve the\n *       desired motor speed. Usually in N-m.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {float} referenceAngle The bodyB angle minus bodyA angle in the\n *       reference state (radians).\n */\n\nvar DEFAULTS = {\n  lowerAngle : 0.0,\n  upperAngle : 0.0,\n  maxMotorTorque : 0.0,\n  motorSpeed : 0.0,\n  enableLimit : false,\n  enableMotor : false\n};\n\n/**\n * A revolute joint constrains two bodies to share a common point while they are\n * free to rotate about the point. The relative rotation about the shared point\n * is the joint angle. You can limit the relative rotation with a joint limit\n * that specifies a lower and upper angle. You can use a motor to drive the\n * relative rotation about the shared point. A maximum motor torque is provided\n * so that infinite forces are not generated.\n *\n * @param {RevoluteJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction RevoluteJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof RevoluteJoint)) {\n    return new RevoluteJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = RevoluteJoint.TYPE;\n\n  this.m_localAnchorA =  Vec2.clone(anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero());\n  this.m_localAnchorB =  Vec2.clone(anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero());\n  this.m_referenceAngle = Math.isFinite(def.referenceAngle) ? def.referenceAngle : bodyB.getAngle() - bodyA.getAngle();\n\n  this.m_impulse = Vec3();\n  this.m_motorImpulse = 0.0;\n\n  this.m_lowerAngle = def.lowerAngle;\n  this.m_upperAngle = def.upperAngle;\n  this.m_maxMotorTorque = def.maxMotorTorque;\n  this.m_motorSpeed = def.motorSpeed;\n  this.m_enableLimit = def.enableLimit;\n  this.m_enableMotor = def.enableMotor;\n\n  // Solver temp\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  // effective mass for point-to-point constraint.\n  this.m_mass = new Mat33();\n  // effective mass for motor/limit angular constraint.\n  this.m_motorMass; // float\n  this.m_limitState = inactiveLimit;\n\n  // Point-to-point constraint\n  // C = p2 - p1\n  // Cdot = v2 - v1\n  // = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n\n  // Motor constraint\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\nRevoluteJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    lowerAngle: this.m_lowerAngle,\n    upperAngle: this.m_upperAngle,\n    maxMotorTorque: this.m_maxMotorTorque,\n    motorSpeed: this.m_motorSpeed,\n    enableLimit: this.m_enableLimit,\n    enableMotor: this.m_enableMotor,\n\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    referenceAngle: this.m_referenceAngle,\n  };\n};\n\nRevoluteJoint._deserialize = function(data, world, restore) {\n  data = Object.assign({}, data);\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new RevoluteJoint(data);\n  return joint;\n};\n\n/**\n * @internal\n */\nRevoluteJoint.prototype._setAnchors = function(def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nRevoluteJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nRevoluteJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * Get the reference angle.\n */\nRevoluteJoint.prototype.getReferenceAngle = function() {\n  return this.m_referenceAngle;\n}\n\n/**\n * Get the current joint angle in radians.\n */\nRevoluteJoint.prototype.getJointAngle = function() {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n  return bB.m_sweep.a - bA.m_sweep.a - this.m_referenceAngle;\n}\n\n/**\n * Get the current joint angle speed in radians per second.\n */\nRevoluteJoint.prototype.getJointSpeed = function() {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n  return bB.m_angularVelocity - bA.m_angularVelocity;\n}\n\n/**\n * Is the joint motor enabled?\n */\nRevoluteJoint.prototype.isMotorEnabled = function() {\n  return this.m_enableMotor;\n}\n\n/**\n * Enable/disable the joint motor.\n */\nRevoluteJoint.prototype.enableMotor = function(flag) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_enableMotor = flag;\n}\n\n/**\n * Get the current motor torque given the inverse time step. Unit is N*m.\n */\nRevoluteJoint.prototype.getMotorTorque = function(inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n}\n\n/**\n * Set the motor speed in radians per second.\n */\nRevoluteJoint.prototype.setMotorSpeed = function(speed) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_motorSpeed = speed;\n}\n\n/**\n * Get the motor speed in radians per second.\n */\nRevoluteJoint.prototype.getMotorSpeed = function() {\n  return this.m_motorSpeed;\n}\n\n/**\n * Set the maximum motor torque, usually in N-m.\n */\nRevoluteJoint.prototype.setMaxMotorTorque = function(torque) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_maxMotorTorque = torque;\n}\n\nRevoluteJoint.prototype.getMaxMotorTorque = function() {\n  return this.m_maxMotorTorque;\n}\n\n/**\n * Is the joint limit enabled?\n */\nRevoluteJoint.prototype.isLimitEnabled = function() {\n  return this.m_enableLimit;\n}\n\n/**\n * Enable/disable the joint limit.\n */\nRevoluteJoint.prototype.enableLimit = function(flag) {\n  if (flag != this.m_enableLimit) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_enableLimit = flag;\n    this.m_impulse.z = 0.0;\n  }\n}\n\n/**\n * Get the lower joint limit in radians.\n */\nRevoluteJoint.prototype.getLowerLimit = function() {\n  return this.m_lowerAngle;\n}\n\n/**\n * Get the upper joint limit in radians.\n */\nRevoluteJoint.prototype.getUpperLimit = function() {\n  return this.m_upperAngle;\n}\n\n/**\n * Set the joint limits in radians.\n */\nRevoluteJoint.prototype.setLimits = function(lower, upper) {\n  _ASSERT && common.assert(lower <= upper);\n\n  if (lower != this.m_lowerAngle || upper != this.m_upperAngle) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_impulse.z = 0.0;\n    this.m_lowerAngle = lower;\n    this.m_upperAngle = upper;\n  }\n}\n\nRevoluteJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nRevoluteJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\n/**\n * Get the reaction force given the inverse time step. Unit is N.\n */\nRevoluteJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.neo(this.m_impulse.x, this.m_impulse.y).mul(inv_dt);\n}\n\n/**\n * Get the reaction torque due to the joint limit given the inverse time step.\n * Unit is N*m.\n */\nRevoluteJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_impulse.z;\n}\n\nRevoluteJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var fixedRotation = (iA + iB === 0.0); // bool\n\n  this.m_mass.ex.x = mA + mB + this.m_rA.y * this.m_rA.y * iA + this.m_rB.y\n      * this.m_rB.y * iB;\n  this.m_mass.ey.x = -this.m_rA.y * this.m_rA.x * iA - this.m_rB.y\n      * this.m_rB.x * iB;\n  this.m_mass.ez.x = -this.m_rA.y * iA - this.m_rB.y * iB;\n  this.m_mass.ex.y = this.m_mass.ey.x;\n  this.m_mass.ey.y = mA + mB + this.m_rA.x * this.m_rA.x * iA + this.m_rB.x\n      * this.m_rB.x * iB;\n  this.m_mass.ez.y = this.m_rA.x * iA + this.m_rB.x * iB;\n  this.m_mass.ex.z = this.m_mass.ez.x;\n  this.m_mass.ey.z = this.m_mass.ez.y;\n  this.m_mass.ez.z = iA + iB;\n\n  this.m_motorMass = iA + iB;\n  if (this.m_motorMass > 0.0) {\n    this.m_motorMass = 1.0 / this.m_motorMass;\n  }\n\n  if (this.m_enableMotor == false || fixedRotation) {\n    this.m_motorImpulse = 0.0;\n  }\n\n  if (this.m_enableLimit && fixedRotation == false) {\n    var jointAngle = aB - aA - this.m_referenceAngle; // float\n\n    if (Math.abs(this.m_upperAngle - this.m_lowerAngle) < 2.0 * Settings.angularSlop) {\n      this.m_limitState = equalLimits;\n\n    } else if (jointAngle <= this.m_lowerAngle) {\n      if (this.m_limitState != atLowerLimit) {\n        this.m_impulse.z = 0.0;\n      }\n      this.m_limitState = atLowerLimit;\n\n    } else if (jointAngle >= this.m_upperAngle) {\n      if (this.m_limitState != atUpperLimit) {\n        this.m_impulse.z = 0.0;\n      }\n      this.m_limitState = atUpperLimit;\n\n    } else {\n      this.m_limitState = inactiveLimit;\n      this.m_impulse.z = 0.0;\n    }\n\n  } else {\n    this.m_limitState = inactiveLimit;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_impulse.mul(step.dtRatio);\n    this.m_motorImpulse *= step.dtRatio;\n\n    var P = Vec2.neo(this.m_impulse.x, this.m_impulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_motorImpulse + this.m_impulse.z);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_motorImpulse + this.m_impulse.z);\n\n  } else {\n    this.m_impulse.setZero();\n    this.m_motorImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nRevoluteJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var fixedRotation = (iA + iB === 0.0); // bool\n\n  // Solve motor constraint.\n  if (this.m_enableMotor && this.m_limitState != equalLimits\n      && fixedRotation == false) {\n    var Cdot = wB - wA - this.m_motorSpeed; // float\n    var impulse = -this.m_motorMass * Cdot; // float\n    var oldImpulse = this.m_motorImpulse; // float\n    var maxImpulse = step.dt * this.m_maxMotorTorque; // float\n    this.m_motorImpulse = Math.clamp(this.m_motorImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_motorImpulse - oldImpulse;\n\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  }\n\n  // Solve limit constraint.\n  if (this.m_enableLimit && this.m_limitState != inactiveLimit\n      && fixedRotation == false) {\n    var Cdot1 = Vec2.zero();\n    Cdot1.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot1.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA));\n    var Cdot2 = wB - wA; // float\n    var Cdot = Vec3(Cdot1.x, Cdot1.y, Cdot2);\n\n    var impulse = Vec3.neg(this.m_mass.solve33(Cdot)); // Vec3\n\n    if (this.m_limitState == equalLimits) {\n      this.m_impulse.add(impulse);\n\n    } else if (this.m_limitState == atLowerLimit) {\n      var newImpulse = this.m_impulse.z + impulse.z; // float\n\n      if (newImpulse < 0.0) {\n        var rhs = Vec2.combine(-1, Cdot1, this.m_impulse.z, Vec2.neo(this.m_mass.ez.x, this.m_mass.ez.y)); // Vec2\n        var reduced = this.m_mass.solve22(rhs); // Vec2\n        impulse.x = reduced.x;\n        impulse.y = reduced.y;\n        impulse.z = -this.m_impulse.z;\n        this.m_impulse.x += reduced.x;\n        this.m_impulse.y += reduced.y;\n        this.m_impulse.z = 0.0;\n\n      } else {\n        this.m_impulse.add(impulse);\n      }\n\n    } else if (this.m_limitState == atUpperLimit) {\n      var newImpulse = this.m_impulse.z + impulse.z; // float\n\n      if (newImpulse > 0.0) {\n        var rhs = Vec2.combine(-1, Cdot1, this.m_impulse.z, Vec2.neo(this.m_mass.ez.x, this.m_mass.ez.y)); // Vec2\n        var reduced = this.m_mass.solve22(rhs); // Vec2\n        impulse.x = reduced.x;\n        impulse.y = reduced.y;\n        impulse.z = -this.m_impulse.z;\n        this.m_impulse.x += reduced.x;\n        this.m_impulse.y += reduced.y;\n        this.m_impulse.z = 0.0;\n\n      } else {\n        this.m_impulse.add(impulse);\n      }\n    }\n\n    var P = Vec2.neo(impulse.x, impulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + impulse.z);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + impulse.z);\n\n  } else {\n    // Solve point-to-point constraint\n    var Cdot = Vec2.zero();\n    Cdot.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA));\n    var impulse = this.m_mass.solve22(Vec2.neg(Cdot)); // Vec2\n\n    this.m_impulse.x += impulse.x;\n    this.m_impulse.y += impulse.y;\n\n    vA.subMul(mA, impulse);\n    wA -= iA * Vec2.cross(this.m_rA, impulse);\n\n    vB.addMul(mB, impulse);\n    wB += iB * Vec2.cross(this.m_rB, impulse);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nRevoluteJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var angularError = 0.0; // float\n  var positionError = 0.0; // float\n\n  var fixedRotation = (this.m_invIA + this.m_invIB == 0.0); // bool\n\n  // Solve angular limit constraint.\n  if (this.m_enableLimit && this.m_limitState != inactiveLimit\n      && fixedRotation == false) {\n    var angle = aB - aA - this.m_referenceAngle; // float\n    var limitImpulse = 0.0; // float\n\n    if (this.m_limitState == equalLimits) {\n      // Prevent large angular corrections\n      var C = Math.clamp(angle - this.m_lowerAngle,\n          -Settings.maxAngularCorrection, Settings.maxAngularCorrection); // float\n      limitImpulse = -this.m_motorMass * C;\n      angularError = Math.abs(C);\n\n    } else if (this.m_limitState == atLowerLimit) {\n      var C = angle - this.m_lowerAngle; // float\n      angularError = -C;\n\n      // Prevent large angular corrections and allow some slop.\n      C = Math.clamp(C + Settings.angularSlop, -Settings.maxAngularCorrection,\n          0.0);\n      limitImpulse = -this.m_motorMass * C;\n\n    } else if (this.m_limitState == atUpperLimit) {\n      var C = angle - this.m_upperAngle; // float\n      angularError = C;\n\n      // Prevent large angular corrections and allow some slop.\n      C = Math.clamp(C - Settings.angularSlop, 0.0,\n          Settings.maxAngularCorrection);\n      limitImpulse = -this.m_motorMass * C;\n    }\n\n    aA -= this.m_invIA * limitImpulse;\n    aB += this.m_invIB * limitImpulse;\n  }\n\n  // Solve point-to-point constraint.\n  {\n    qA.set(aA);\n    qB.set(aB);\n    var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA)); // Vec2\n    var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB)); // Vec2\n\n    var C = Vec2.zero();\n    C.addCombine(1, cB, 1, rB);\n    C.subCombine(1, cA, 1, rA);\n    positionError = C.length();\n\n    var mA = this.m_invMassA;\n    var mB = this.m_invMassB; // float\n    var iA = this.m_invIA;\n    var iB = this.m_invIB; // float\n\n    var K = new Mat22();\n    K.ex.x = mA + mB + iA * rA.y * rA.y + iB * rB.y * rB.y;\n    K.ex.y = -iA * rA.x * rA.y - iB * rB.x * rB.y;\n    K.ey.x = K.ex.y;\n    K.ey.y = mA + mB + iA * rA.x * rA.x + iB * rB.x * rB.x;\n\n    var impulse = Vec2.neg(K.solve(C)); // Vec2\n\n    cA.subMul(mA, impulse);\n    aA -= iA * Vec2.cross(rA, impulse);\n\n    cB.addMul(mB, impulse);\n    aB += iB * Vec2.cross(rB, impulse);\n  }\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n\n  return positionError <= Settings.linearSlop\n      && angularError <= Settings.angularSlop;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default PrismaticJoint;\n\nimport common from '../util/common';\nimport options from '../util/options';\nimport Settings from '../Settings';\n\nimport Math from '../common/Math';\nimport Vec2 from '../common/Vec2';\nimport Vec3 from '../common/Vec3';\nimport Mat22 from '../common/Mat22';\nimport Mat33 from '../common/Mat33';\nimport Rot from '../common/Rot';\nimport Sweep from '../common/Sweep';\nimport Transform from '../common/Transform';\nimport Velocity from '../common/Velocity';\nimport Position from '../common/Position';\n\nimport Joint from '../Joint';\nimport Body from '../Body';\n\nvar inactiveLimit = 0;\nvar atLowerLimit = 1;\nvar atUpperLimit = 2;\nvar equalLimits = 3;\n\nPrismaticJoint.TYPE = 'prismatic-joint';\nJoint.TYPES[PrismaticJoint.TYPE] = PrismaticJoint;\n\nPrismaticJoint._super = Joint;\nPrismaticJoint.prototype = Object.create(PrismaticJoint._super.prototype);\n\n/**\n * @typedef {Object} PrismaticJointDef\n *\n * Prismatic joint definition. This requires defining a line of motion using an\n * axis and an anchor point. The definition uses local anchor points and a local\n * axis so that the initial configuration can violate the constraint slightly.\n * The joint translation is zero when the local anchor points coincide in world\n * space. Using local anchors and a local axis helps when saving and loading a\n * game.\n * \n * @prop {boolean} enableLimit Enable/disable the joint limit.\n * @prop {float} lowerTranslation The lower translation limit, usually in\n *       meters.\n * @prop {float} upperTranslation The upper translation limit, usually in\n *       meters.\n * @prop {boolean} enableMotor Enable/disable the joint motor.\n * @prop {float} maxMotorForce The maximum motor torque, usually in N-m.\n * @prop {float} motorSpeed The desired motor speed in radians per second.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {Vec2} localAxisA The local translation unit axis in bodyA.\n * @prop {float} referenceAngle The constrained angle between the bodies:\n *       bodyB_angle - bodyA_angle.\n */\n\nvar DEFAULTS = {\n  enableLimit : false,\n  lowerTranslation : 0.0,\n  upperTranslation : 0.0,\n  enableMotor : false,\n  maxMotorForce : 0.0,\n  motorSpeed : 0.0\n};\n\n/**\n * A prismatic joint. This joint provides one degree of freedom: translation\n * along an axis fixed in bodyA. Relative rotation is prevented. You can use a\n * joint limit to restrict the range of motion and a joint motor to drive the\n * motion or to model joint friction.\n *\n * @param {PrismaticJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction PrismaticJoint(def, bodyA, bodyB, anchor, axis) {\n  if (!(this instanceof PrismaticJoint)) {\n    return new PrismaticJoint(def, bodyA, bodyB, anchor, axis);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = PrismaticJoint.TYPE;\n\n  this.m_localAnchorA = Vec2.clone(anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero());\n  this.m_localAnchorB = Vec2.clone(anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero());\n  this.m_localXAxisA = Vec2.clone(axis ? bodyA.getLocalVector(axis) : def.localAxisA || Vec2.neo(1.0, 0.0));\n  this.m_localXAxisA.normalize();\n  this.m_localYAxisA = Vec2.cross(1.0, this.m_localXAxisA);\n  this.m_referenceAngle = Math.isFinite(def.referenceAngle) ? def.referenceAngle : bodyB.getAngle() - bodyA.getAngle();\n\n  this.m_impulse = Vec3();\n  this.m_motorMass = 0.0;\n  this.m_motorImpulse = 0.0;\n\n  this.m_lowerTranslation = def.lowerTranslation;\n  this.m_upperTranslation = def.upperTranslation;\n  this.m_maxMotorForce = def.maxMotorForce;\n  this.m_motorSpeed = def.motorSpeed;\n  this.m_enableLimit = def.enableLimit;\n  this.m_enableMotor = def.enableMotor;\n  this.m_limitState = inactiveLimit;\n\n  this.m_axis = Vec2.zero();\n  this.m_perp = Vec2.zero();\n\n  // Solver temp\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_axis, this.m_perp; // Vec2\n  this.m_s1, this.m_s2; // float\n  this.m_a1, this.m_a2; // float\n  this.m_K = new Mat33();\n  this.m_motorMass; // float\n\n  // Linear constraint (point-to-line)\n  // d = p2 - p1 = x2 + r2 - x1 - r1\n  // C = dot(perp, d)\n  // Cdot = dot(d, cross(w1, perp)) + dot(perp, v2 + cross(w2, r2) - v1 -\n  // cross(w1, r1))\n  // = -dot(perp, v1) - dot(cross(d + r1, perp), w1) + dot(perp, v2) +\n  // dot(cross(r2, perp), v2)\n  // J = [-perp, -cross(d + r1, perp), perp, cross(r2,perp)]\n  //\n  // Angular constraint\n  // C = a2 - a1 + a_initial\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  //\n  // K = J * invM * JT\n  //\n  // J = [-a -s1 a s2]\n  // [0 -1 0 1]\n  // a = perp\n  // s1 = cross(d + r1, a) = cross(p2 - x1, a)\n  // s2 = cross(r2, a) = cross(p2 - x2, a)\n\n  // Motor/Limit linear constraint\n  // C = dot(ax1, d)\n  // Cdot = = -dot(ax1, v1) - dot(cross(d + r1, ax1), w1) + dot(ax1, v2) +\n  // dot(cross(r2, ax1), v2)\n  // J = [-ax1 -cross(d+r1,ax1) ax1 cross(r2,ax1)]\n\n  // Block Solver\n  // We develop a block solver that includes the joint limit. This makes the\n  // limit stiff (inelastic) even\n  // when the mass has poor distribution (leading to large torques about the\n  // joint anchor points).\n  //\n  // The Jacobian has 3 rows:\n  // J = [-uT -s1 uT s2] // linear\n  // [0 -1 0 1] // angular\n  // [-vT -a1 vT a2] // limit\n  //\n  // u = perp\n  // v = axis\n  // s1 = cross(d + r1, u), s2 = cross(r2, u)\n  // a1 = cross(d + r1, v), a2 = cross(r2, v)\n\n  // M * (v2 - v1) = JT * df\n  // J * v2 = bias\n  //\n  // v2 = v1 + invM * JT * df\n  // J * (v1 + invM * JT * df) = bias\n  // K * df = bias - J * v1 = -Cdot\n  // K = J * invM * JT\n  // Cdot = J * v1 - bias\n  //\n  // Now solve for f2.\n  // df = f2 - f1\n  // K * (f2 - f1) = -Cdot\n  // f2 = invK * (-Cdot) + f1\n  //\n  // Clamp accumulated limit impulse.\n  // lower: f2(3) = max(f2(3), 0)\n  // upper: f2(3) = min(f2(3), 0)\n  //\n  // Solve for correct f2(1:2)\n  // K(1:2, 1:2) * f2(1:2) = -Cdot(1:2) - K(1:2,3) * f2(3) + K(1:2,1:3) * f1\n  // = -Cdot(1:2) - K(1:2,3) * f2(3) + K(1:2,1:2) * f1(1:2) + K(1:2,3) * f1(3)\n  // K(1:2, 1:2) * f2(1:2) = -Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3)) +\n  // K(1:2,1:2) * f1(1:2)\n  // f2(1:2) = invK(1:2,1:2) * (-Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3))) +\n  // f1(1:2)\n  //\n  // Now compute impulse to be applied:\n  // df = f2 - f1\n}\n\nPrismaticJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    lowerTranslation: this.m_lowerTranslation,\n    upperTranslation: this.m_upperTranslation,\n    maxMotorForce: this.m_maxMotorForce,\n    motorSpeed: this.m_motorSpeed,\n    enableLimit: this.m_enableLimit,\n    enableMotor: this.m_enableMotor,\n\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    localAxisA: this.m_localXAxisA,\n    referenceAngle: this.m_referenceAngle,\n  };\n};\n\nPrismaticJoint._deserialize = function(data, world, restore) {\n  data = Object.assign({}, data);\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  data.localAxisA = Vec2(data.localAxisA);\n  var joint = new PrismaticJoint(data);\n  return joint;\n};\n\n/**\n * @internal\n */\nPrismaticJoint.prototype._setAnchors = function(def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n\n  if (def.localAxisA) {\n    this.m_localXAxisA.set(def.localAxisA);\n    this.m_localYAxisA.set(Vec2.cross(1.0, def.localAxisA));\n  }\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nPrismaticJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nPrismaticJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * The local joint axis relative to bodyA.\n */\nPrismaticJoint.prototype.getLocalAxisA = function() {\n  return this.m_localXAxisA;\n}\n\n/**\n * Get the reference angle.\n */\nPrismaticJoint.prototype.getReferenceAngle = function() {\n  return this.m_referenceAngle;\n}\n\n/**\n * Get the current joint translation, usually in meters.\n */\nPrismaticJoint.prototype.getJointTranslation = function() {\n  var pA = this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n  var pB = this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n  var d = Vec2.sub(pB, pA);\n  var axis = this.m_bodyA.getWorldVector(this.m_localXAxisA);\n\n  var translation = Vec2.dot(d, axis);\n  return translation;\n}\n\n/**\n * Get the current joint translation speed, usually in meters per second.\n */\nPrismaticJoint.prototype.getJointSpeed = function() {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n\n  var rA = Rot.mulVec2(bA.m_xf.q, Vec2.sub(this.m_localAnchorA, bA.m_sweep.localCenter)); // Vec2\n  var rB = Rot.mulVec2(bB.m_xf.q, Vec2.sub(this.m_localAnchorB, bB.m_sweep.localCenter)); // Vec2\n  var p1 = Vec2.add(bA.m_sweep.c, rA); // Vec2\n  var p2 = Vec2.add(bB.m_sweep.c, rB); // Vec2\n  var d = Vec2.sub(p2, p1); // Vec2\n  var axis = Rot.mulVec2(bA.m_xf.q, this.m_localXAxisA); // Vec2\n\n  var vA = bA.m_linearVelocity; // Vec2\n  var vB = bB.m_linearVelocity; // Vec2\n  var wA = bA.m_angularVelocity; // float\n  var wB = bB.m_angularVelocity; // float\n\n  var speed = Vec2.dot(d, Vec2.cross(wA, axis))\n      + Vec2.dot(axis, Vec2.sub(Vec2.addCross(vB, wB, rB), Vec2.addCross(vA, wA, rA))); // float\n  return speed;\n}\n\n/**\n * Is the joint limit enabled?\n */\nPrismaticJoint.prototype.isLimitEnabled = function() {\n  return this.m_enableLimit;\n}\n\n/**\n * Enable/disable the joint limit.\n */\nPrismaticJoint.prototype.enableLimit = function(flag) {\n  if (flag != this.m_enableLimit) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_enableLimit = flag;\n    this.m_impulse.z = 0.0;\n  }\n}\n\n/**\n * Get the lower joint limit, usually in meters.\n */\nPrismaticJoint.prototype.getLowerLimit = function() {\n  return this.m_lowerTranslation;\n}\n\n/**\n * Get the upper joint limit, usually in meters.\n */\nPrismaticJoint.prototype.getUpperLimit = function() {\n  return this.m_upperTranslation;\n}\n\n/**\n * Set the joint limits, usually in meters.\n */\nPrismaticJoint.prototype.setLimits = function(lower, upper) {\n  _ASSERT && common.assert(lower <= upper);\n  if (lower != this.m_lowerTranslation || upper != this.m_upperTranslation) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_lowerTranslation = lower;\n    this.m_upperTranslation = upper;\n    this.m_impulse.z = 0.0;\n  }\n}\n\n/**\n * Is the joint motor enabled?\n */\nPrismaticJoint.prototype.isMotorEnabled = function() {\n  return this.m_enableMotor;\n}\n\n/**\n * Enable/disable the joint motor.\n */\nPrismaticJoint.prototype.enableMotor = function(flag) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_enableMotor = flag;\n}\n\n/**\n * Set the motor speed, usually in meters per second.\n */\nPrismaticJoint.prototype.setMotorSpeed = function(speed) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_motorSpeed = speed;\n}\n\n/**\n * Set the maximum motor force, usually in N.\n */\nPrismaticJoint.prototype.setMaxMotorForce = function(force) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_maxMotorForce = force;\n}\n\nPrismaticJoint.prototype.getMaxMotorForce = function() {\n  return this.m_maxMotorForce;\n}\n\n/**\n * Get the motor speed, usually in meters per second.\n */\nPrismaticJoint.prototype.getMotorSpeed = function() {\n  return this.m_motorSpeed;\n}\n\n/**\n * Get the current motor force given the inverse time step, usually in N.\n */\nPrismaticJoint.prototype.getMotorForce = function(inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n}\n\nPrismaticJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nPrismaticJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nPrismaticJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.combine(this.m_impulse.x, this.m_perp, this.m_motorImpulse + this.m_impulse.z, this.m_axis).mul(inv_dt);\n}\n\nPrismaticJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_impulse.y;\n}\n\nPrismaticJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  // Compute the effective masses.\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  var d = Vec2.zero();\n  d.addCombine(1, cB, 1, rB);\n  d.subCombine(1, cA, 1, rA);\n\n  var mA = this.m_invMassA, mB = this.m_invMassB;\n  var iA = this.m_invIA, iB = this.m_invIB;\n\n  // Compute motor Jacobian and effective mass.\n  {\n    this.m_axis = Rot.mulVec2(qA, this.m_localXAxisA);\n    this.m_a1 = Vec2.cross(Vec2.add(d, rA), this.m_axis);\n    this.m_a2 = Vec2.cross(rB, this.m_axis);\n\n    this.m_motorMass = mA + mB + iA * this.m_a1 * this.m_a1 + iB * this.m_a2\n        * this.m_a2;\n    if (this.m_motorMass > 0.0) {\n      this.m_motorMass = 1.0 / this.m_motorMass;\n    }\n  }\n\n  // Prismatic constraint.\n  {\n    this.m_perp = Rot.mulVec2(qA, this.m_localYAxisA);\n\n    this.m_s1 = Vec2.cross(Vec2.add(d, rA), this.m_perp);\n    this.m_s2 = Vec2.cross(rB, this.m_perp);\n\n    var s1test = Vec2.cross(rA, this.m_perp);\n\n    var k11 = mA + mB + iA * this.m_s1 * this.m_s1 + iB * this.m_s2 * this.m_s2;\n    var k12 = iA * this.m_s1 + iB * this.m_s2;\n    var k13 = iA * this.m_s1 * this.m_a1 + iB * this.m_s2 * this.m_a2;\n    var k22 = iA + iB;\n    if (k22 == 0.0) {\n      // For bodies with fixed rotation.\n      k22 = 1.0;\n    }\n    var k23 = iA * this.m_a1 + iB * this.m_a2;\n    var k33 = mA + mB + iA * this.m_a1 * this.m_a1 + iB * this.m_a2 * this.m_a2;\n\n    this.m_K.ex.set(k11, k12, k13);\n    this.m_K.ey.set(k12, k22, k23);\n    this.m_K.ez.set(k13, k23, k33);\n  }\n\n  // Compute motor and limit terms.\n  if (this.m_enableLimit) {\n\n    var jointTranslation = Vec2.dot(this.m_axis, d); // float\n    if (Math.abs(this.m_upperTranslation - this.m_lowerTranslation) < 2.0 * Settings.linearSlop) {\n      this.m_limitState = equalLimits;\n\n    } else if (jointTranslation <= this.m_lowerTranslation) {\n      if (this.m_limitState != atLowerLimit) {\n        this.m_limitState = atLowerLimit;\n        this.m_impulse.z = 0.0;\n      }\n\n    } else if (jointTranslation >= this.m_upperTranslation) {\n      if (this.m_limitState != atUpperLimit) {\n        this.m_limitState = atUpperLimit;\n        this.m_impulse.z = 0.0;\n      }\n\n    } else {\n      this.m_limitState = inactiveLimit;\n      this.m_impulse.z = 0.0;\n    }\n\n  } else {\n    this.m_limitState = inactiveLimit;\n    this.m_impulse.z = 0.0;\n  }\n\n  if (this.m_enableMotor == false) {\n    this.m_motorImpulse = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Account for variable time step.\n    this.m_impulse.mul(step.dtRatio);\n    this.m_motorImpulse *= step.dtRatio;\n\n    var P = Vec2.combine(this.m_impulse.x, this.m_perp, this.m_motorImpulse\n        + this.m_impulse.z, this.m_axis);\n    var LA = this.m_impulse.x * this.m_s1 + this.m_impulse.y\n        + (this.m_motorImpulse + this.m_impulse.z) * this.m_a1;\n    var LB = this.m_impulse.x * this.m_s2 + this.m_impulse.y\n        + (this.m_motorImpulse + this.m_impulse.z) * this.m_a2;\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  } else {\n    this.m_impulse.setZero();\n    this.m_motorImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nPrismaticJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB;\n  var iA = this.m_invIA;\n  var iB = this.m_invIB;\n\n  // Solve linear motor constraint.\n  if (this.m_enableMotor && this.m_limitState != equalLimits) {\n    var Cdot = Vec2.dot(this.m_axis, Vec2.sub(vB, vA)) + this.m_a2 * wB\n        - this.m_a1 * wA;\n    var impulse = this.m_motorMass * (this.m_motorSpeed - Cdot);\n    var oldImpulse = this.m_motorImpulse;\n    var maxImpulse = step.dt * this.m_maxMotorForce;\n    this.m_motorImpulse = Math.clamp(this.m_motorImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_motorImpulse - oldImpulse;\n\n    var P = Vec2.mul(impulse, this.m_axis);\n    var LA = impulse * this.m_a1;\n    var LB = impulse * this.m_a2;\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  }\n\n  var Cdot1 = Vec2.zero();\n  Cdot1.x += Vec2.dot(this.m_perp, vB) + this.m_s2 * wB;\n  Cdot1.x -= Vec2.dot(this.m_perp, vA) + this.m_s1 * wA;\n  Cdot1.y = wB - wA;\n\n  if (this.m_enableLimit && this.m_limitState != inactiveLimit) {\n    // Solve prismatic and limit constraint in block form.\n    var Cdot2 = 0;\n    Cdot2 += Vec2.dot(this.m_axis, vB) + this.m_a2 * wB;\n    Cdot2 -= Vec2.dot(this.m_axis, vA) + this.m_a1 * wA;\n\n    var Cdot = Vec3(Cdot1.x, Cdot1.y, Cdot2);\n\n    var f1 = Vec3(this.m_impulse);\n    var df = this.m_K.solve33(Vec3.neg(Cdot)); // Vec3\n    this.m_impulse.add(df);\n\n    if (this.m_limitState == atLowerLimit) {\n      this.m_impulse.z = Math.max(this.m_impulse.z, 0.0);\n    } else if (this.m_limitState == atUpperLimit) {\n      this.m_impulse.z = Math.min(this.m_impulse.z, 0.0);\n    }\n\n    // f2(1:2) = invK(1:2,1:2) * (-Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3))) +\n    // f1(1:2)\n    var b = Vec2.combine(-1, Cdot1, -(this.m_impulse.z - f1.z), Vec2.neo(this.m_K.ez.x, this.m_K.ez.y)); // Vec2\n    var f2r = Vec2.add(this.m_K.solve22(b), Vec2.neo(f1.x, f1.y)); // Vec2\n    this.m_impulse.x = f2r.x;\n    this.m_impulse.y = f2r.y;\n\n    df = Vec3.sub(this.m_impulse, f1);\n\n    var P = Vec2.combine(df.x, this.m_perp, df.z, this.m_axis); // Vec2\n    var LA = df.x * this.m_s1 + df.y + df.z * this.m_a1; // float\n    var LB = df.x * this.m_s2 + df.y + df.z * this.m_a2; // float\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  } else {\n    // Limit is inactive, just solve the prismatic constraint in block form.\n    var df = this.m_K.solve22(Vec2.neg(Cdot1)); // Vec2\n    this.m_impulse.x += df.x;\n    this.m_impulse.y += df.y;\n\n    var P = Vec2.mul(df.x, this.m_perp); // Vec2\n    var LA = df.x * this.m_s1 + df.y; // float\n    var LB = df.x * this.m_s2 + df.y; // float\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nPrismaticJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB;\n  var iA = this.m_invIA;\n  var iB = this.m_invIB;\n\n  // Compute fresh Jacobians\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA)); // Vec2\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB)); // Vec2\n  var d = Vec2.sub(Vec2.add(cB, rB), Vec2.add(cA, rA)); // Vec2\n\n  var axis = Rot.mulVec2(qA, this.m_localXAxisA); // Vec2\n  var a1 = Vec2.cross(Vec2.add(d, rA), axis); // float\n  var a2 = Vec2.cross(rB, axis); // float\n  var perp = Rot.mulVec2(qA, this.m_localYAxisA); // Vec2\n\n  var s1 = Vec2.cross(Vec2.add(d, rA), perp); // float\n  var s2 = Vec2.cross(rB, perp); // float\n\n  var impulse = Vec3();\n  var C1 = Vec2.zero(); // Vec2\n  C1.x = Vec2.dot(perp, d);\n  C1.y = aB - aA - this.m_referenceAngle;\n\n  var linearError = Math.abs(C1.x); // float\n  var angularError = Math.abs(C1.y); // float\n\n  var linearSlop = Settings.linearSlop;\n  var maxLinearCorrection = Settings.maxLinearCorrection;\n\n  var active = false; // bool\n  var C2 = 0.0; // float\n  if (this.m_enableLimit) {\n\n    var translation = Vec2.dot(axis, d); // float\n    if (Math.abs(this.m_upperTranslation - this.m_lowerTranslation) < 2.0 * linearSlop) {\n      // Prevent large angular corrections\n      C2 = Math.clamp(translation, -maxLinearCorrection, maxLinearCorrection);\n      linearError = Math.max(linearError, Math.abs(translation));\n      active = true;\n\n    } else if (translation <= this.m_lowerTranslation) {\n      // Prevent large linear corrections and allow some slop.\n      C2 = Math.clamp(translation - this.m_lowerTranslation + linearSlop,\n          -maxLinearCorrection, 0.0);\n      linearError = Math\n          .max(linearError, this.m_lowerTranslation - translation);\n      active = true;\n\n    } else if (translation >= this.m_upperTranslation) {\n      // Prevent large linear corrections and allow some slop.\n      C2 = Math.clamp(translation - this.m_upperTranslation - linearSlop, 0.0,\n          maxLinearCorrection);\n      linearError = Math\n          .max(linearError, translation - this.m_upperTranslation);\n      active = true;\n    }\n  }\n\n  if (active) {\n    var k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2; // float\n    var k12 = iA * s1 + iB * s2; // float\n    var k13 = iA * s1 * a1 + iB * s2 * a2; // float\n    var k22 = iA + iB; // float\n    if (k22 == 0.0) {\n      // For fixed rotation\n      k22 = 1.0;\n    }\n    var k23 = iA * a1 + iB * a2; // float\n    var k33 = mA + mB + iA * a1 * a1 + iB * a2 * a2; // float\n\n    var K = new Mat33()\n    K.ex.set(k11, k12, k13);\n    K.ey.set(k12, k22, k23);\n    K.ez.set(k13, k23, k33);\n\n    var C = Vec3();\n    C.x = C1.x;\n    C.y = C1.y;\n    C.z = C2;\n\n    impulse = K.solve33(Vec3.neg(C));\n  } else {\n    var k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2; // float\n    var k12 = iA * s1 + iB * s2; // float\n    var k22 = iA + iB; // float\n    if (k22 == 0.0) {\n      k22 = 1.0;\n    }\n\n    var K = new Mat22();\n    K.ex.set(k11, k12);\n    K.ey.set(k12, k22);\n\n    var impulse1 = K.solve(Vec2.neg(C1)); // Vec2\n    impulse.x = impulse1.x;\n    impulse.y = impulse1.y;\n    impulse.z = 0.0;\n  }\n\n  var P = Vec2.combine(impulse.x, perp, impulse.z, axis); // Vec2\n  var LA = impulse.x * s1 + impulse.y + impulse.z * a1; // float\n  var LB = impulse.x * s2 + impulse.y + impulse.z * a2; // float\n\n  cA.subMul(mA, P);\n  aA -= iA * LA;\n  cB.addMul(mB, P);\n  aB += iB * LB;\n\n  this.m_bodyA.c_position.c = cA;\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c = cB;\n  this.m_bodyB.c_position.a = aB;\n\n  return linearError <= Settings.linearSlop\n      && angularError <= Settings.angularSlop;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default GearJoint;\n\nimport common from '../util/common';\nimport options from '../util/options';\nimport Settings from '../Settings';\n\nimport Math from '../common/Math';\nimport Vec2 from '../common/Vec2';\nimport Vec3 from '../common/Vec3';\nimport Mat22 from '../common/Mat22';\nimport Mat33 from '../common/Mat33';\nimport Rot from '../common/Rot';\nimport Sweep from '../common/Sweep';\nimport Transform from '../common/Transform';\nimport Velocity from '../common/Velocity';\nimport Position from '../common/Position';\n\nimport Joint from '../Joint';\nimport Body from '../Body';\n\nimport RevoluteJoint from './RevoluteJoint';\nimport PrismaticJoint from './PrismaticJoint';\n\nGearJoint.TYPE = 'gear-joint';\nJoint.TYPES[GearJoint.TYPE] = GearJoint;\n\nGearJoint._super = Joint;\nGearJoint.prototype = Object.create(GearJoint._super.prototype);\n\n/**\n * @typedef {Object} GearJointDef\n *\n * Gear joint definition.\n *\n * @prop {float} ratio The gear ratio. See GearJoint for explanation.\n *\n * @prop {RevoluteJoint|PrismaticJoint} joint1 The first revolute/prismatic\n *          joint attached to the gear joint.\n * @prop {PrismaticJoint|RevoluteJoint} joint2 The second prismatic/revolute\n *          joint attached to the gear joint.\n */\n\nvar DEFAULTS = {\n  ratio : 1.0\n};\n\n/**\n * A gear joint is used to connect two joints together. Either joint can be a\n * revolute or prismatic joint. You specify a gear ratio to bind the motions\n * together: coordinate1 + ratio * coordinate2 = constant\n * \n * The ratio can be negative or positive. If one joint is a revolute joint and\n * the other joint is a prismatic joint, then the ratio will have units of\n * length or units of 1/length. Warning: You have to manually destroy the gear\n * joint if joint1 or joint2 is destroyed.\n * \n * This definition requires two existing revolute or prismatic joints (any\n * combination will work).\n *\n * @param {GearJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction GearJoint(def, bodyA, bodyB, joint1, joint2, ratio) {\n  if (!(this instanceof GearJoint)) {\n    return new GearJoint(def, bodyA, bodyB, joint1, joint2, ratio);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = GearJoint.TYPE;\n\n  _ASSERT && common.assert(joint1.m_type === RevoluteJoint.TYPE\n      || joint1.m_type === PrismaticJoint.TYPE);\n  _ASSERT && common.assert(joint2.m_type === RevoluteJoint.TYPE\n      || joint2.m_type === PrismaticJoint.TYPE);\n\n  this.m_joint1 = joint1 ? joint1 : def.joint1;\n  this.m_joint2 = joint2 ? joint2 : def.joint2;\n  this.m_ratio = Math.isFinite(ratio) ? ratio : def.ratio;\n\n  this.m_type1 = this.m_joint1.getType();\n  this.m_type2 = this.m_joint2.getType();\n\n  // joint1 connects body A to body C\n  // joint2 connects body B to body D\n\n  var coordinateA, coordinateB; // float\n\n  // TODO_ERIN there might be some problem with the joint edges in Joint.\n\n  this.m_bodyC = this.m_joint1.getBodyA();\n  this.m_bodyA = this.m_joint1.getBodyB();\n\n  // Get geometry of joint1\n  var xfA = this.m_bodyA.m_xf;\n  var aA = this.m_bodyA.m_sweep.a;\n  var xfC = this.m_bodyC.m_xf;\n  var aC = this.m_bodyC.m_sweep.a;\n\n  if (this.m_type1 === RevoluteJoint.TYPE) {\n    var revolute = this.m_joint1;// RevoluteJoint\n    this.m_localAnchorC = revolute.m_localAnchorA;\n    this.m_localAnchorA = revolute.m_localAnchorB;\n    this.m_referenceAngleA = revolute.m_referenceAngle;\n    this.m_localAxisC = Vec2.zero();\n\n    coordinateA = aA - aC - this.m_referenceAngleA;\n  } else {\n    var prismatic = this.m_joint1; // PrismaticJoint\n    this.m_localAnchorC = prismatic.m_localAnchorA;\n    this.m_localAnchorA = prismatic.m_localAnchorB;\n    this.m_referenceAngleA = prismatic.m_referenceAngle;\n    this.m_localAxisC = prismatic.m_localXAxisA;\n\n    var pC = this.m_localAnchorC;\n    var pA = Rot.mulTVec2(xfC.q, Vec2.add(Rot.mul(xfA.q, this.m_localAnchorA), Vec2.sub(xfA.p, xfC.p)));\n    coordinateA = Vec2.dot(pA, this.m_localAxisC) - Vec2.dot(pC, this.m_localAxisC);\n  }\n\n  this.m_bodyD = this.m_joint2.getBodyA();\n  this.m_bodyB = this.m_joint2.getBodyB();\n\n  // Get geometry of joint2\n  var xfB = this.m_bodyB.m_xf;\n  var aB = this.m_bodyB.m_sweep.a;\n  var xfD = this.m_bodyD.m_xf;\n  var aD = this.m_bodyD.m_sweep.a;\n\n  if (this.m_type2 === RevoluteJoint.TYPE) {\n    var revolute = this.m_joint2; // RevoluteJoint\n    this.m_localAnchorD = revolute.m_localAnchorA;\n    this.m_localAnchorB = revolute.m_localAnchorB;\n    this.m_referenceAngleB = revolute.m_referenceAngle;\n    this.m_localAxisD = Vec2.zero();\n\n    coordinateB = aB - aD - this.m_referenceAngleB;\n  } else {\n    var prismatic = this.m_joint2; // PrismaticJoint\n    this.m_localAnchorD = prismatic.m_localAnchorA;\n    this.m_localAnchorB = prismatic.m_localAnchorB;\n    this.m_referenceAngleB = prismatic.m_referenceAngle;\n    this.m_localAxisD = prismatic.m_localXAxisA;\n\n    var pD = this.m_localAnchorD;\n    var pB = Rot.mulTVec2(xfD.q, Vec2.add(Rot.mul(xfB.q, this.m_localAnchorB), Vec2.sub(xfB.p, xfD.p)));\n    coordinateB = Vec2.dot(pB, this.m_localAxisD) - Vec2.dot(pD, this.m_localAxisD);\n  }\n\n  this.m_constant = coordinateA + this.m_ratio * coordinateB;\n\n  this.m_impulse = 0.0;\n\n  // Solver temp\n  this.m_lcA, this.m_lcB, this.m_lcC, this.m_lcD; // Vec2\n  this.m_mA, this.m_mB, this.m_mC, this.m_mD; // float\n  this.m_iA, this.m_iB, this.m_iC, this.m_iD; // float\n  this.m_JvAC, this.m_JvBD; // Vec2\n  this.m_JwA, this.m_JwB, this.m_JwC, this.m_JwD; // float\n  this.m_mass; // float\n\n  // Gear Joint:\n  // C0 = (coordinate1 + ratio * coordinate2)_initial\n  // C = (coordinate1 + ratio * coordinate2) - C0 = 0\n  // J = [J1 ratio * J2]\n  // K = J * invM * JT\n  // = J1 * invM1 * J1T + ratio * ratio * J2 * invM2 * J2T\n  //\n  // Revolute:\n  // coordinate = rotation\n  // Cdot = angularVelocity\n  // J = [0 0 1]\n  // K = J * invM * JT = invI\n  //\n  // Prismatic:\n  // coordinate = dot(p - pg, ug)\n  // Cdot = dot(v + cross(w, r), ug)\n  // J = [ug cross(r, ug)]\n  // K = J * invM * JT = invMass + invI * cross(r, ug)^2\n};\n\nGearJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    joint1: this.m_joint1,\n    joint2: this.m_joint2,\n    ratio: this.m_ratio,\n\n    // _constant: this.m_constant,\n  };\n};\n\nGearJoint._deserialize = function(data, world, restore) {\n  data = Object.assign({}, data);\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  data.joint1 = restore(Joint, data.joint1, world);\n  data.joint2 = restore(Joint, data.joint2, world);\n  var joint = new GearJoint(data);\n  // if (data._constant) joint.m_constant = data._constant;\n  return joint;\n};\n\n/**\n * Get the first joint.\n */\nGearJoint.prototype.getJoint1 = function() {\n  return this.m_joint1;\n}\n\n/**\n * Get the second joint.\n */\nGearJoint.prototype.getJoint2 = function() {\n  return this.m_joint2;\n}\n\n/**\n * Set/Get the gear ratio.\n */\nGearJoint.prototype.setRatio = function(ratio) {\n  _ASSERT && common.assert(Math.isFinite(ratio));\n  this.m_ratio = ratio;\n}\n\nGearJoint.prototype.getRatio = function() {\n  return this.m_ratio;\n}\n\nGearJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nGearJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nGearJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(this.m_impulse, this.m_JvAC).mul(inv_dt);\n}\n\nGearJoint.prototype.getReactionTorque = function(inv_dt) {\n  var L = this.m_impulse * this.m_JwA; // float\n  return inv_dt * L;\n}\n\nGearJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_lcA = this.m_bodyA.m_sweep.localCenter;\n  this.m_lcB = this.m_bodyB.m_sweep.localCenter;\n  this.m_lcC = this.m_bodyC.m_sweep.localCenter;\n  this.m_lcD = this.m_bodyD.m_sweep.localCenter;\n  this.m_mA = this.m_bodyA.m_invMass;\n  this.m_mB = this.m_bodyB.m_invMass;\n  this.m_mC = this.m_bodyC.m_invMass;\n  this.m_mD = this.m_bodyD.m_invMass;\n  this.m_iA = this.m_bodyA.m_invI;\n  this.m_iB = this.m_bodyB.m_invI;\n  this.m_iC = this.m_bodyC.m_invI;\n  this.m_iD = this.m_bodyD.m_invI;\n\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var aC = this.m_bodyC.c_position.a;\n  var vC = this.m_bodyC.c_velocity.v;\n  var wC = this.m_bodyC.c_velocity.w;\n\n  var aD = this.m_bodyD.c_position.a;\n  var vD = this.m_bodyD.c_velocity.v;\n  var wD = this.m_bodyD.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n  var qC = Rot.neo(aC);\n  var qD = Rot.neo(aD);\n\n  this.m_mass = 0.0;\n\n  if (this.m_type1 == RevoluteJoint.TYPE) {\n    this.m_JvAC = Vec2.zero();\n    this.m_JwA = 1.0;\n    this.m_JwC = 1.0;\n    this.m_mass += this.m_iA + this.m_iC;\n  } else {\n    var u = Rot.mulVec2(qC, this.m_localAxisC); // Vec2\n    var rC = Rot.mulSub(qC, this.m_localAnchorC, this.m_lcC); // Vec2\n    var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_lcA); // Vec2\n    this.m_JvAC = u;\n    this.m_JwC = Vec2.cross(rC, u);\n    this.m_JwA = Vec2.cross(rA, u);\n    this.m_mass += this.m_mC + this.m_mA + this.m_iC * this.m_JwC * this.m_JwC + this.m_iA * this.m_JwA * this.m_JwA;\n  }\n\n  if (this.m_type2 == RevoluteJoint.TYPE) {\n    this.m_JvBD = Vec2.zero();\n    this.m_JwB = this.m_ratio;\n    this.m_JwD = this.m_ratio;\n    this.m_mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\n  } else {\n    var u = Rot.mulVec2(qD, this.m_localAxisD); // Vec2\n    var rD = Rot.mulSub(qD, this.m_localAnchorD, this.m_lcD); // Vec2\n    var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_lcB); // Vec2\n    this.m_JvBD = Vec2.mul(this.m_ratio, u);\n    this.m_JwD = this.m_ratio * Vec2.cross(rD, u);\n    this.m_JwB = this.m_ratio * Vec2.cross(rB, u);\n    this.m_mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD * this.m_JwD * this.m_JwD + this.m_iB * this.m_JwB * this.m_JwB;\n  }\n\n  // Compute effective mass.\n  this.m_mass = this.m_mass > 0.0 ? 1.0 / this.m_mass : 0.0;\n\n  if (step.warmStarting) {\n    vA.addMul(this.m_mA * this.m_impulse, this.m_JvAC);\n    wA += this.m_iA * this.m_impulse * this.m_JwA;\n    \n    vB.addMul(this.m_mB * this.m_impulse, this.m_JvBD);\n    wB += this.m_iB * this.m_impulse * this.m_JwB;\n    \n    vC.subMul(this.m_mC * this.m_impulse, this.m_JvAC);\n    wC -= this.m_iC * this.m_impulse * this.m_JwC;\n  \n    vD.subMul(this.m_mD * this.m_impulse, this.m_JvBD);\n    wD -= this.m_iD * this.m_impulse * this.m_JwD;\n\n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n  this.m_bodyC.c_velocity.v.set(vC);\n  this.m_bodyC.c_velocity.w = wC;\n  this.m_bodyD.c_velocity.v.set(vD);\n  this.m_bodyD.c_velocity.w = wD;\n}\n\nGearJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n  var vC = this.m_bodyC.c_velocity.v;\n  var wC = this.m_bodyC.c_velocity.w;\n  var vD = this.m_bodyD.c_velocity.v;\n  var wD = this.m_bodyD.c_velocity.w;\n\n  var Cdot = Vec2.dot(this.m_JvAC, vA) - Vec2.dot(this.m_JvAC, vC)\n      + Vec2.dot(this.m_JvBD, vB) - Vec2.dot(this.m_JvBD, vD); // float\n  Cdot += (this.m_JwA * wA - this.m_JwC * wC)\n      + (this.m_JwB * wB - this.m_JwD * wD);\n\n  var impulse = -this.m_mass * Cdot; // float\n  this.m_impulse += impulse;\n\n  vA.addMul(this.m_mA * impulse, this.m_JvAC);\n  wA += this.m_iA * impulse * this.m_JwA;\n  vB.addMul(this.m_mB * impulse, this.m_JvBD);\n  wB += this.m_iB * impulse * this.m_JwB;\n  vC.subMul(this.m_mC * impulse, this.m_JvAC);\n  wC -= this.m_iC * impulse * this.m_JwC;\n  vD.subMul(this.m_mD * impulse, this.m_JvBD);\n  wD -= this.m_iD * impulse * this.m_JwD;\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n  this.m_bodyC.c_velocity.v.set(vC);\n  this.m_bodyC.c_velocity.w = wC;\n  this.m_bodyD.c_velocity.v.set(vD);\n  this.m_bodyD.c_velocity.w = wD;\n}\n\nGearJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var cC = this.m_bodyC.c_position.c;\n  var aC = this.m_bodyC.c_position.a;\n  var cD = this.m_bodyD.c_position.c;\n  var aD = this.m_bodyD.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n  var qC = Rot.neo(aC);\n  var qD = Rot.neo(aD);\n\n  var linearError = 0.0; // float\n\n  var coordinateA, coordinateB; // float\n\n  var JvAC, JvBD; // Vec2\n  var JwA, JwB, JwC, JwD; // float\n  var mass = 0.0; // float\n\n  if (this.m_type1 == RevoluteJoint.TYPE) {\n    JvAC = Vec2.zero();\n    JwA = 1.0;\n    JwC = 1.0;\n    mass += this.m_iA + this.m_iC;\n\n    coordinateA = aA - aC - this.m_referenceAngleA;\n  } else {\n    var u = Rot.mulVec2(qC, this.m_localAxisC); // Vec2\n    var rC = Rot.mulSub(qC, this.m_localAnchorC, this.m_lcC); // Vec2\n    var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_lcA); // Vec2\n    JvAC = u;\n    JwC = Vec2.cross(rC, u);\n    JwA = Vec2.cross(rA, u);\n    mass += this.m_mC + this.m_mA + this.m_iC * JwC * JwC + this.m_iA * JwA * JwA;\n\n    var pC = Vec2.sub(this.m_localAnchorC, this.m_lcC); // Vec2\n    var pA = Rot.mulTVec2(qC, Vec2.add(rA, Vec2.sub(cA, cC))); // Vec2\n    coordinateA = Vec2.dot(Vec2.sub(pA, pC), this.m_localAxisC);\n  }\n\n  if (this.m_type2 == RevoluteJoint.TYPE) {\n    JvBD = Vec2.zero();\n    JwB = this.m_ratio;\n    JwD = this.m_ratio;\n    mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\n\n    coordinateB = aB - aD - this.m_referenceAngleB;\n  } else {\n    var u = Rot.mulVec2(qD, this.m_localAxisD);\n    var rD = Rot.mulSub(qD, this.m_localAnchorD, this.m_lcD);\n    var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_lcB);\n    JvBD = Vec2.mul(this.m_ratio, u);\n    JwD = this.m_ratio * Vec2.cross(rD, u);\n    JwB = this.m_ratio * Vec2.cross(rB, u);\n    mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD\n        * JwD * JwD + this.m_iB * JwB * JwB;\n\n    var pD = Vec2.sub(this.m_localAnchorD, this.m_lcD); // Vec2\n    var pB = Rot.mulTVec2(qD, Vec2.add(rB, Vec2.sub(cB, cD))); // Vec2\n    coordinateB = Vec2.dot(pB, this.m_localAxisD)\n        - Vec2.dot(pD, this.m_localAxisD);\n  }\n\n  var C = (coordinateA + this.m_ratio * coordinateB) - this.m_constant; // float\n\n  var impulse = 0.0; // float\n  if (mass > 0.0) {\n    impulse = -C / mass;\n  }\n\n  cA.addMul(this.m_mA * impulse, JvAC);\n  aA += this.m_iA * impulse * JwA;\n  cB.addMul(this.m_mB * impulse, JvBD);\n  aB += this.m_iB * impulse * JwB;\n  cC.subMul(this.m_mC * impulse, JvAC);\n  aC -= this.m_iC * impulse * JwC;\n  cD.subMul(this.m_mD * impulse, JvBD);\n  aD -= this.m_iD * impulse * JwD;\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n  this.m_bodyC.c_position.c.set(cC);\n  this.m_bodyC.c_position.a = aC;\n  this.m_bodyD.c_position.c.set(cD);\n  this.m_bodyD.c_position.a = aD;\n\n  // TODO_ERIN not implemented\n  return linearError < Settings.linearSlop;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default MotorJoint;\n\nimport common from '../util/common';\nimport options from '../util/options';\nimport Settings from '../Settings';\n\nimport Math from '../common/Math';\nimport Vec2 from '../common/Vec2';\nimport Vec3 from '../common/Vec3';\nimport Mat22 from '../common/Mat22';\nimport Mat33 from '../common/Mat33';\nimport Rot from '../common/Rot';\nimport Sweep from '../common/Sweep';\nimport Transform from '../common/Transform';\nimport Velocity from '../common/Velocity';\nimport Position from '../common/Position';\n\nimport Joint from '../Joint';\nimport Body from '../Body';\n\nMotorJoint.TYPE = 'motor-joint';\nJoint.TYPES[MotorJoint.TYPE] = MotorJoint;\n\nMotorJoint._super = Joint;\nMotorJoint.prototype = Object.create(MotorJoint._super.prototype);\n\n/**\n * @typedef {Object} MotorJointDef\n *\n * Motor joint definition.\n * \n * @prop {float} angularOffset The bodyB angle minus bodyA angle in radians.\n * @prop {float} maxForce The maximum motor force in N.\n * @prop {float} maxTorque The maximum motor torque in N-m.\n * @prop {float} correctionFactor Position correction factor in the range [0,1].\n * @prop {Vec2} linearOffset Position of bodyB minus the position of bodyA, in\n *       bodyA's frame, in meters.\n */\n\nvar DEFAULTS = {\n  maxForce : 1.0,\n  maxTorque : 1.0,\n  correctionFactor : 0.3\n};\n\n/**\n * A motor joint is used to control the relative motion between two bodies. A\n * typical usage is to control the movement of a dynamic body with respect to\n * the ground.\n *\n * @param {MotorJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction MotorJoint(def, bodyA, bodyB) {\n  if (!(this instanceof MotorJoint)) {\n    return new MotorJoint(def, bodyA, bodyB);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = MotorJoint.TYPE;\n\n  this.m_linearOffset = Math.isFinite(def.linearOffset) ? def.linearOffset : bodyA.getLocalPoint(bodyB.getPosition());\n  this.m_angularOffset = Math.isFinite(def.angularOffset) ? def.angularOffset : bodyB.getAngle() - bodyA.getAngle();\n\n  this.m_linearImpulse = Vec2.zero();\n  this.m_angularImpulse = 0.0;\n\n  this.m_maxForce = def.maxForce;\n  this.m_maxTorque = def.maxTorque;\n  this.m_correctionFactor = def.correctionFactor;\n\n  // Solver temp\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_linearError; // Vec2\n  this.m_angularError; // float\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_linearMass; // Mat22\n  this.m_angularMass; // float\n\n  // Point-to-point constraint\n  // Cdot = v2 - v1\n  // = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n\n  // Angle constraint\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\nMotorJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    maxForce: this.m_maxForce,\n    maxTorque: this.m_maxTorque,\n    correctionFactor: this.m_correctionFactor,\n\n    linearOffset: this.m_linearOffset,\n    angularOffset: this.m_angularOffset,\n  };\n};\n\nMotorJoint._deserialize = function(data, world, restore) {\n  data = Object.assign({}, data);\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new MotorJoint(data);\n  return joint;\n};\n\n/**\n * @internal\n */\nMotorJoint.prototype._setAnchors = function(def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n}\n\n/**\n * Set the maximum friction force in N.\n */\nMotorJoint.prototype.setMaxForce = function(force) {\n  _ASSERT && common.assert(Math.isFinite(force) && force >= 0.0);\n  this.m_maxForce = force;\n}\n\n/**\n * Get the maximum friction force in N.\n */\nMotorJoint.prototype.getMaxForce = function() {\n  return this.m_maxForce;\n}\n\n/**\n * Set the maximum friction torque in N*m.\n */\nMotorJoint.prototype.setMaxTorque = function(torque) {\n  _ASSERT && common.assert(Math.isFinite(torque) && torque >= 0.0);\n  this.m_maxTorque = torque;\n}\n\n/**\n * Get the maximum friction torque in N*m.\n */\nMotorJoint.prototype.getMaxTorque = function() {\n  return this.m_maxTorque;\n}\n\n/**\n * Set the position correction factor in the range [0,1].\n */\nMotorJoint.prototype.setCorrectionFactor = function(factor) {\n  _ASSERT && common.assert(Math.isFinite(factor) && 0.0 <= factor && factor <= 1.0);\n  this.m_correctionFactor = factor;\n}\n\n/**\n * Get the position correction factor in the range [0,1].\n */\nMotorJoint.prototype.getCorrectionFactor = function() {\n  return this.m_correctionFactor;\n}\n\n/**\n * Set/get the target linear offset, in frame A, in meters.\n */\nMotorJoint.prototype.setLinearOffset = function(linearOffset) {\n  if (linearOffset.x != this.m_linearOffset.x\n      || linearOffset.y != this.m_linearOffset.y) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_linearOffset = linearOffset;\n  }\n}\n\nMotorJoint.prototype.getLinearOffset = function() {\n  return this.m_linearOffset;\n}\n\n/**\n * Set/get the target angular offset, in radians.\n */\nMotorJoint.prototype.setAngularOffset = function(angularOffset) {\n  if (angularOffset != this.m_angularOffset) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_angularOffset = angularOffset;\n  }\n}\n\nMotorJoint.prototype.getAngularOffset = function() {\n  return this.m_angularOffset;\n}\n\nMotorJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getPosition();\n}\n\nMotorJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getPosition();\n}\n\nMotorJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(inv_dt, this.m_linearImpulse);\n}\n\nMotorJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_angularImpulse;\n}\n\nMotorJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  // Compute the effective mass matrix.\n  this.m_rA = Rot.mulVec2(qA, Vec2.neg(this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.neg(this.m_localCenterB));\n\n  // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB;\n  var iA = this.m_invIA;\n  var iB = this.m_invIB;\n\n  var K = new Mat22();\n  K.ex.x = mA + mB + iA * this.m_rA.y * this.m_rA.y + iB * this.m_rB.y\n      * this.m_rB.y;\n  K.ex.y = -iA * this.m_rA.x * this.m_rA.y - iB * this.m_rB.x * this.m_rB.y;\n  K.ey.x = K.ex.y;\n  K.ey.y = mA + mB + iA * this.m_rA.x * this.m_rA.x + iB * this.m_rB.x\n      * this.m_rB.x;\n\n  this.m_linearMass = K.getInverse();\n\n  this.m_angularMass = iA + iB;\n  if (this.m_angularMass > 0.0) {\n    this.m_angularMass = 1.0 / this.m_angularMass;\n  }\n\n  this.m_linearError = Vec2.zero();\n  this.m_linearError.addCombine(1, cB, 1, this.m_rB);\n  this.m_linearError.subCombine(1, cA, 1, this.m_rA);\n  this.m_linearError.sub(Rot.mulVec2(qA, this.m_linearOffset));\n\n  this.m_angularError = aB - aA - this.m_angularOffset;\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_linearImpulse.mul(step.dtRatio);\n    this.m_angularImpulse *= step.dtRatio;\n\n    var P = Vec2.neo(this.m_linearImpulse.x, this.m_linearImpulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_angularImpulse);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_angularImpulse);\n\n  } else {\n    this.m_linearImpulse.setZero();\n    this.m_angularImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nMotorJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA, mB = this.m_invMassB;\n  var iA = this.m_invIA, iB = this.m_invIB;\n\n  var h = step.dt;\n  var inv_h = step.inv_dt;\n\n  // Solve angular friction\n  {\n    var Cdot = wB - wA + inv_h * this.m_correctionFactor * this.m_angularError;\n    var impulse = -this.m_angularMass * Cdot;\n\n    var oldImpulse = this.m_angularImpulse;\n    var maxImpulse = h * this.m_maxTorque;\n    this.m_angularImpulse = Math.clamp(this.m_angularImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_angularImpulse - oldImpulse;\n\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  }\n\n  // Solve linear friction\n  {\n    var Cdot = Vec2.zero();\n    Cdot.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA));\n    Cdot.addMul(inv_h * this.m_correctionFactor, this.m_linearError);\n\n    var impulse = Vec2.neg(Mat22.mulVec2(this.m_linearMass, Cdot));\n    var oldImpulse = Vec2.clone(this.m_linearImpulse);\n    this.m_linearImpulse.add(impulse);\n\n    var maxImpulse = h * this.m_maxForce;\n\n    this.m_linearImpulse.clamp(maxImpulse);\n\n    impulse = Vec2.sub(this.m_linearImpulse, oldImpulse);\n\n    vA.subMul(mA, impulse);\n    wA -= iA * Vec2.cross(this.m_rA, impulse);\n\n    vB.addMul(mB, impulse);\n    wB += iB * Vec2.cross(this.m_rB, impulse);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nMotorJoint.prototype.solvePositionConstraints = function(step) {\n  return true;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default MouseJoint;\n\nimport common from '../util/common';\nimport options from '../util/options';\nimport Math from '../common/Math';\nimport Vec2 from '../common/Vec2';\nimport Vec3 from '../common/Vec3';\nimport Mat22 from '../common/Mat22';\nimport Mat33 from '../common/Mat33';\nimport Rot from '../common/Rot';\nimport Sweep from '../common/Sweep';\nimport Transform from '../common/Transform';\nimport Velocity from '../common/Velocity';\nimport Position from '../common/Position';\n\nimport Joint from '../Joint';\nimport Body from '../Body';\n\nMouseJoint.TYPE = 'mouse-joint';\nJoint.TYPES[MouseJoint.TYPE] = MouseJoint;\n\nMouseJoint._super = Joint;\nMouseJoint.prototype = Object.create(MouseJoint._super.prototype);\n\n/**\n * @typedef {Object} MouseJointDef\n *\n * Mouse joint definition. This requires a world target point, tuning\n * parameters, and the time step.\n * \n * @prop [maxForce = 0.0] The maximum constraint force that can be exerted to\n *       move the candidate body. Usually you will express as some multiple of\n *       the weight (multiplier * mass * gravity).\n * @prop [frequencyHz = 5.0] The response speed.\n * @prop [dampingRatio = 0.7] The damping ratio. 0 = no damping, 1 = critical\n *       damping.\n *\n * @prop {Vec2} target The initial world target point. This is assumed to\n *       coincide with the body anchor initially.\n */\n\nvar DEFAULTS = {\n  maxForce : 0.0,\n  frequencyHz : 5.0,\n  dampingRatio : 0.7\n};\n\n/**\n * A mouse joint is used to make a point on a body track a specified world\n * point. This a soft constraint with a maximum force. This allows the\n * constraint to stretch and without applying huge forces.\n * \n * NOTE: this joint is not documented in the manual because it was developed to\n * be used in the testbed. If you want to learn how to use the mouse joint, look\n * at the testbed.\n *\n * @param {MouseJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction MouseJoint(def, bodyA, bodyB, target) {\n  if (!(this instanceof MouseJoint)) {\n    return new MouseJoint(def, bodyA, bodyB, target);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = MouseJoint.TYPE;\n\n  _ASSERT && common.assert(Math.isFinite(def.maxForce) && def.maxForce >= 0.0);\n  _ASSERT && common.assert(Math.isFinite(def.frequencyHz) && def.frequencyHz >= 0.0);\n  _ASSERT && common.assert(Math.isFinite(def.dampingRatio) && def.dampingRatio >= 0.0);\n\n  this.m_targetA = target ? Vec2.clone(target) : def.target || Vec2.zero();\n  this.m_localAnchorB = Transform.mulTVec2(bodyB.getTransform(), this.m_targetA);\n\n  this.m_maxForce = def.maxForce;\n  this.m_impulse = Vec2.zero();\n\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n\n  this.m_beta = 0.0;\n  this.m_gamma = 0.0;\n\n  // Solver temp\n  this.m_rB = Vec2.zero();\n  this.m_localCenterB = Vec2.zero();\n  this.m_invMassB = 0.0;\n  this.m_invIB = 0.0;\n  this.mass = new Mat22()\n  this.m_C = Vec2.zero();\n\n  // p = attached point, m = mouse point\n  // C = p - m\n  // Cdot = v\n  // = v + cross(w, r)\n  // J = [I r_skew]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n}\n\nMouseJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    target: this.m_targetA,\n    maxForce: this.m_maxForce,\n    frequencyHz: this.m_frequencyHz,\n    dampingRatio: this.m_dampingRatio,\n\n    _localAnchorB: this.m_localAnchorB,\n  };\n};\n\nMouseJoint._deserialize = function(data, world, restore) {\n  data = Object.assign({}, data);\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  data.target = Vec2(data.target);\n  var joint = new MouseJoint(data);\n  if (data._localAnchorB) {\n    joint.m_localAnchorB = data._localAnchorB;\n  }\n  return joint;\n};\n\n/**\n * Use this to update the target point.\n */\nMouseJoint.prototype.setTarget = function(target) {\n  if (this.m_bodyB.isAwake() == false) {\n    this.m_bodyB.setAwake(true);\n  }\n  this.m_targetA = Vec2.clone(target);\n}\n\nMouseJoint.prototype.getTarget = function() {\n  return this.m_targetA;\n}\n\n/**\n * Set/get the maximum force in Newtons.\n */\nMouseJoint.prototype.setMaxForce = function(force) {\n  this.m_maxForce = force;\n}\n\nMouseJoint.getMaxForce = function() {\n  return this.m_maxForce;\n}\n\n/**\n * Set/get the frequency in Hertz.\n */\nMouseJoint.prototype.setFrequency = function(hz) {\n  this.m_frequencyHz = hz;\n}\n\nMouseJoint.prototype.getFrequency = function() {\n  return this.m_frequencyHz;\n}\n\n/**\n * Set/get the damping ratio (dimensionless).\n */\nMouseJoint.prototype.setDampingRatio = function(ratio) {\n  this.m_dampingRatio = ratio;\n}\n\nMouseJoint.prototype.getDampingRatio = function() {\n  return this.m_dampingRatio;\n}\n\nMouseJoint.prototype.getAnchorA = function() {\n  return Vec2.clone(this.m_targetA);\n}\n\nMouseJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nMouseJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(inv_dt, this.m_impulse);\n}\n\nMouseJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * 0.0;\n}\n\nMouseJoint.prototype.shiftOrigin = function(newOrigin) {\n  this.m_targetA.sub(newOrigin);\n}\n\nMouseJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var position = this.m_bodyB.c_position;\n  var velocity = this.m_bodyB.c_velocity;\n\n  var cB = position.c;\n  var aB = position.a;\n  var vB = velocity.v;\n  var wB = velocity.w;\n\n  var qB = Rot.neo(aB);\n\n  var mass = this.m_bodyB.getMass();\n\n  // Frequency\n  var omega = 2.0 * Math.PI * this.m_frequencyHz;\n\n  // Damping coefficient\n  var d = 2.0 * mass * this.m_dampingRatio * omega;\n\n  // Spring stiffness\n  var k = mass * (omega * omega);\n\n  // magic formulas\n  // gamma has units of inverse mass.\n  // beta has units of inverse time.\n  var h = step.dt;\n  _ASSERT && common.assert(d + h * k > Math.EPSILON);\n  this.m_gamma = h * (d + h * k);\n  if (this.m_gamma != 0.0) {\n    this.m_gamma = 1.0 / this.m_gamma;\n  }\n  this.m_beta = h * k * this.m_gamma;\n\n  // Compute the effective mass matrix.\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // K = [(1/m1 + 1/m2) * eye(2) - skew(r1) * invI1 * skew(r1) - skew(r2) *\n  // invI2 * skew(r2)]\n  // = [1/m1+1/m2 0 ] + invI1 * [r1.y*r1.y -r1.x*r1.y] + invI2 * [r1.y*r1.y\n  // -r1.x*r1.y]\n  // [ 0 1/m1+1/m2] [-r1.x*r1.y r1.x*r1.x] [-r1.x*r1.y r1.x*r1.x]\n  var K = new Mat22();\n  K.ex.x = this.m_invMassB + this.m_invIB * this.m_rB.y * this.m_rB.y\n      + this.m_gamma;\n  K.ex.y = -this.m_invIB * this.m_rB.x * this.m_rB.y;\n  K.ey.x = K.ex.y;\n  K.ey.y = this.m_invMassB + this.m_invIB * this.m_rB.x * this.m_rB.x\n      + this.m_gamma;\n\n  this.m_mass = K.getInverse();\n\n  this.m_C.set(cB);\n  this.m_C.addCombine(1, this.m_rB, -1, this.m_targetA);\n  this.m_C.mul(this.m_beta);\n\n  // Cheat with some damping\n  wB *= 0.98;\n\n  if (step.warmStarting) {\n    this.m_impulse.mul(step.dtRatio);\n    vB.addMul(this.m_invMassB, this.m_impulse);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, this.m_impulse);\n\n  } else {\n    this.m_impulse.setZero();\n  }\n\n  velocity.v.set(vB);\n  velocity.w = wB;\n}\n\nMouseJoint.prototype.solveVelocityConstraints = function(step) {\n  var velocity = this.m_bodyB.c_velocity;\n  var vB = Vec2.clone(velocity.v);\n  var wB = velocity.w;\n\n  // Cdot = v + cross(w, r)\n\n  var Cdot = Vec2.cross(wB, this.m_rB);\n  Cdot.add(vB);\n\n  Cdot.addCombine(1, this.m_C, this.m_gamma, this.m_impulse);\n  Cdot.neg();\n\n  var impulse = Mat22.mulVec2(this.m_mass, Cdot);\n\n  var oldImpulse = Vec2.clone(this.m_impulse);\n  this.m_impulse.add(impulse);\n  var maxImpulse = step.dt * this.m_maxForce;\n  this.m_impulse.clamp(maxImpulse);\n  impulse = Vec2.sub(this.m_impulse, oldImpulse);\n\n  vB.addMul(this.m_invMassB, impulse);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, impulse);\n\n  velocity.v.set(vB);\n  velocity.w = wB;\n}\n\nMouseJoint.prototype.solvePositionConstraints = function(step) {\n  return true;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default PulleyJoint;\n\nimport common from '../util/common';\nimport options from '../util/options';\nimport Settings from '../Settings';\n\nimport Math from '../common/Math';\nimport Vec2 from '../common/Vec2';\nimport Vec3 from '../common/Vec3';\nimport Mat22 from '../common/Mat22';\nimport Mat33 from '../common/Mat33';\nimport Rot from '../common/Rot';\nimport Sweep from '../common/Sweep';\nimport Transform from '../common/Transform';\nimport Velocity from '../common/Velocity';\nimport Position from '../common/Position';\n\nimport Joint from '../Joint';\nimport Body from '../Body';\n\nPulleyJoint.TYPE = 'pulley-joint';\nPulleyJoint.MIN_PULLEY_LENGTH = 2.0; // minPulleyLength\nJoint.TYPES[PulleyJoint.TYPE] = PulleyJoint;\n\nPulleyJoint._super = Joint;\nPulleyJoint.prototype = Object.create(PulleyJoint._super.prototype);\n\n/**\n * @typedef {Object} PulleyJointDef\n *\n * Pulley joint definition. This requires two ground anchors, two dynamic body\n * anchor points, and a pulley ratio.\n *\n * @prop {Vec2} groundAnchorA The first ground anchor in world coordinates.\n *          This point never moves.\n * @prop {Vec2} groundAnchorB The second ground anchor in world coordinates.\n *          This point never moves.\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {float} ratio The pulley ratio, used to simulate a block-and-tackle.\n * @prop {float} lengthA The reference length for the segment attached to bodyA.\n * @prop {float} lengthB The reference length for the segment attached to bodyB.\n */\nvar PulleyJointDef = {\n  collideConnected : true\n};\n\n/**\n * The pulley joint is connected to two bodies and two fixed ground points. The\n * pulley supports a ratio such that: length1 + ratio * length2 <= constant\n * \n * Yes, the force transmitted is scaled by the ratio.\n * \n * Warning: the pulley joint can get a bit squirrelly by itself. They often work\n * better when combined with prismatic joints. You should also cover the the\n * anchor points with static shapes to prevent one side from going to zero\n * length.\n *\n * @param {PulleyJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction PulleyJoint(def, bodyA, bodyB, groundA, groundB, anchorA, anchorB, ratio) {\n  if (!(this instanceof PulleyJoint)) {\n    return new PulleyJoint(def, bodyA, bodyB, groundA, groundB, anchorA, anchorB, ratio);\n  }\n\n  def = options(def, PulleyJointDef);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = PulleyJoint.TYPE;\n  this.m_groundAnchorA = groundA ? groundA : def.groundAnchorA || Vec2.neo(-1.0, 1.0);\n  this.m_groundAnchorB = groundB ? groundB : def.groundAnchorB || Vec2.neo(1.0, 1.0);\n  this.m_localAnchorA = anchorA ? bodyA.getLocalPoint(anchorA) : def.localAnchorA || Vec2.neo(-1.0, 0.0);\n  this.m_localAnchorB = anchorB ? bodyB.getLocalPoint(anchorB) : def.localAnchorB || Vec2.neo(1.0, 0.0);\n  this.m_lengthA = Math.isFinite(def.lengthA) ? def.lengthA : Vec2.distance(anchorA, groundA);\n  this.m_lengthB = Math.isFinite(def.lengthB) ? def.lengthB : Vec2.distance(anchorB, groundB);\n  this.m_ratio = Math.isFinite(ratio) ? ratio : def.ratio;\n\n  _ASSERT && common.assert(ratio > Math.EPSILON);\n\n  this.m_constant = this.m_lengthA + this.m_ratio * this.m_lengthB;\n\n  this.m_impulse = 0.0;\n\n  // Solver temp\n  this.m_uA; // Vec2\n  this.m_uB; // Vec2\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_mass; // float\n\n  // Pulley:\n  // length1 = norm(p1 - s1)\n  // length2 = norm(p2 - s2)\n  // C0 = (length1 + ratio * length2)_initial\n  // C = C0 - (length1 + ratio * length2)\n  // u1 = (p1 - s1) / norm(p1 - s1)\n  // u2 = (p2 - s2) / norm(p2 - s2)\n  // Cdot = -dot(u1, v1 + cross(w1, r1)) - ratio * dot(u2, v2 + cross(w2, r2))\n  // J = -[u1 cross(r1, u1) ratio * u2 ratio * cross(r2, u2)]\n  // K = J * invM * JT\n  // = invMass1 + invI1 * cross(r1, u1)^2 + ratio^2 * (invMass2 + invI2 *\n  // cross(r2, u2)^2)\n}\n\nPulleyJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    groundAnchorA: this.m_groundAnchorA,\n    groundAnchorB: this.m_groundAnchorB,\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    lengthA: this.m_lengthA,\n    lengthB: this.m_lengthB,\n    ratio: this.m_ratio,\n  };\n};\n\nPulleyJoint._deserialize = function(data, world, restore) {\n  data = Object.assign({}, data);\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new PulleyJoint(data);\n  return joint;\n};\n\n/**\n * Get the first ground anchor.\n */\nPulleyJoint.prototype.getGroundAnchorA = function() {\n  return this.m_groundAnchorA;\n}\n\n/**\n * Get the second ground anchor.\n */\nPulleyJoint.prototype.getGroundAnchorB = function() {\n  return this.m_groundAnchorB;\n}\n\n/**\n * Get the current length of the segment attached to bodyA.\n */\nPulleyJoint.prototype.getLengthA = function() {\n  return this.m_lengthA;\n}\n\n/**\n * Get the current length of the segment attached to bodyB.\n */\nPulleyJoint.prototype.getLengthB = function() {\n  return this.m_lengthB;\n}\n\n/**\n * Get the pulley ratio.\n */\nPulleyJoint.prototype.getRatio = function() {\n  return this.m_ratio;\n}\n\n/**\n * Get the current length of the segment attached to bodyA.\n */\nPulleyJoint.prototype.getCurrentLengthA = function() {\n  var p = this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n  var s = this.m_groundAnchorA;\n  return Vec2.distance(p, s);\n}\n\n/**\n * Get the current length of the segment attached to bodyB.\n */\nPulleyJoint.prototype.getCurrentLengthB = function() {\n  var p = this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n  var s = this.m_groundAnchorB;\n  return Vec2.distance(p, s);\n}\n\nPulleyJoint.prototype.shiftOrigin = function(newOrigin) {\n  this.m_groundAnchorA.sub(newOrigin);\n  this.m_groundAnchorB.sub(newOrigin);\n}\n\nPulleyJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nPulleyJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nPulleyJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(this.m_impulse, this.m_uB).mul(inv_dt);\n}\n\nPulleyJoint.prototype.getReactionTorque = function(inv_dt) {\n  return 0.0;\n}\n\nPulleyJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // Get the pulley axes.\n  this.m_uA = Vec2.sub(Vec2.add(cA, this.m_rA), this.m_groundAnchorA);\n  this.m_uB = Vec2.sub(Vec2.add(cB, this.m_rB), this.m_groundAnchorB);\n\n  var lengthA = this.m_uA.length();\n  var lengthB = this.m_uB.length();\n\n  if (lengthA > 10.0 * Settings.linearSlop) {\n    this.m_uA.mul(1.0 / lengthA);\n  } else {\n    this.m_uA.setZero();\n  }\n\n  if (lengthB > 10.0 * Settings.linearSlop) {\n    this.m_uB.mul(1.0 / lengthB);\n  } else {\n    this.m_uB.setZero();\n  }\n\n  // Compute effective mass.\n  var ruA = Vec2.cross(this.m_rA, this.m_uA); // float\n  var ruB = Vec2.cross(this.m_rB, this.m_uB); // float\n\n  var mA = this.m_invMassA + this.m_invIA * ruA * ruA; // float\n  var mB = this.m_invMassB + this.m_invIB * ruB * ruB; // float\n\n  this.m_mass = mA + this.m_ratio * this.m_ratio * mB;\n\n  if (this.m_mass > 0.0) {\n    this.m_mass = 1.0 / this.m_mass;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support variable time steps.\n    this.m_impulse *= step.dtRatio;\n\n    // Warm starting.\n    var PA = Vec2.mul(-this.m_impulse, this.m_uA);\n    var PB = Vec2.mul(-this.m_ratio * this.m_impulse, this.m_uB);\n\n    vA.addMul(this.m_invMassA, PA);\n    wA += this.m_invIA * Vec2.cross(this.m_rA, PA);\n\n    vB.addMul(this.m_invMassB, PB);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, PB);\n\n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nPulleyJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var vpA = Vec2.add(vA, Vec2.cross(wA, this.m_rA));\n  var vpB = Vec2.add(vB, Vec2.cross(wB, this.m_rB));\n\n  var Cdot = -Vec2.dot(this.m_uA, vpA) - this.m_ratio\n      * Vec2.dot(this.m_uB, vpB); // float\n  var impulse = -this.m_mass * Cdot; // float\n  this.m_impulse += impulse;\n\n  var PA = Vec2.mul(-impulse, this.m_uA); // Vec2\n  var PB = Vec2.mul(-this.m_ratio * impulse, this.m_uB); // Vec2\n  vA.addMul(this.m_invMassA, PA);\n  wA += this.m_invIA * Vec2.cross(this.m_rA, PA);\n  vB.addMul(this.m_invMassB, PB);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, PB);\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nPulleyJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // Get the pulley axes.\n  var uA = Vec2.sub(Vec2.add(cA, this.m_rA), this.m_groundAnchorA);\n  var uB = Vec2.sub(Vec2.add(cB, this.m_rB), this.m_groundAnchorB);\n\n  var lengthA = uA.length();\n  var lengthB = uB.length();\n\n  if (lengthA > 10.0 * Settings.linearSlop) {\n    uA.mul(1.0 / lengthA);\n  } else {\n    uA.setZero();\n  }\n\n  if (lengthB > 10.0 * Settings.linearSlop) {\n    uB.mul(1.0 / lengthB);\n  } else {\n    uB.setZero();\n  }\n\n  // Compute effective mass.\n  var ruA = Vec2.cross(rA, uA);\n  var ruB = Vec2.cross(rB, uB);\n\n  var mA = this.m_invMassA + this.m_invIA * ruA * ruA; // float\n  var mB = this.m_invMassB + this.m_invIB * ruB * ruB; // float\n\n  var mass = mA + this.m_ratio * this.m_ratio * mB; // float\n\n  if (mass > 0.0) {\n    mass = 1.0 / mass;\n  }\n\n  var C = this.m_constant - lengthA - this.m_ratio * lengthB; // float\n  var linearError = Math.abs(C); // float\n\n  var impulse = -mass * C; // float\n\n  var PA = Vec2.mul(-impulse, uA); // Vec2\n  var PB = Vec2.mul(-this.m_ratio * impulse, uB); // Vec2\n\n  cA.addMul(this.m_invMassA, PA);\n  aA += this.m_invIA * Vec2.cross(rA, PA);\n  cB.addMul(this.m_invMassB, PB);\n  aB += this.m_invIB * Vec2.cross(rB, PB);\n\n  this.m_bodyA.c_position.c = cA;\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c = cB;\n  this.m_bodyB.c_position.a = aB;\n\n  return linearError < Settings.linearSlop;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default RopeJoint;\n\nimport options from '../util/options';\nimport Settings from '../Settings';\n\nimport Math from '../common/Math';\nimport Vec2 from '../common/Vec2';\nimport Vec3 from '../common/Vec3';\nimport Mat22 from '../common/Mat22';\nimport Mat33 from '../common/Mat33';\nimport Rot from '../common/Rot';\nimport Sweep from '../common/Sweep';\nimport Transform from '../common/Transform';\nimport Velocity from '../common/Velocity';\nimport Position from '../common/Position';\n\nimport Joint from '../Joint';\nimport Body from '../Body';\n\nvar inactiveLimit = 0;\nvar atLowerLimit = 1;\nvar atUpperLimit = 2;\nvar equalLimits = 3;\n\nRopeJoint.TYPE = 'rope-joint';\nJoint.TYPES[RopeJoint.TYPE] = RopeJoint;\n\nRopeJoint._super = Joint;\nRopeJoint.prototype = Object.create(RopeJoint._super.prototype);\n\n/**\n * @typedef {Object} RopeJointDef\n *\n * Rope joint definition. This requires two body anchor points and a maximum\n * lengths. Note: by default the connected objects will not collide. see\n * collideConnected in JointDef.\n *\n * @prop {float} maxLength The maximum length of the rope. Warning: this must be\n *       larger than linearSlop or the joint will have no effect.\n *\n * @prop {Vec2} def.localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} def.localAnchorB The local anchor point relative to bodyB's origin.\n */\n\nvar DEFAULTS = {\n  maxLength : 0.0,\n};\n\n/**\n * A rope joint enforces a maximum distance between two points on two bodies. It\n * has no other effect.\n * \n * Warning: if you attempt to change the maximum length during the simulation\n * you will get some non-physical behavior.\n * \n * A model that would allow you to dynamically modify the length would have some\n * sponginess, so I chose not to implement it that way. See DistanceJoint if you\n * want to dynamically control length.\n *\n * @param {RopeJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction RopeJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof RopeJoint)) {\n    return new RopeJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = RopeJoint.TYPE;\n  this.m_localAnchorA = anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.neo(-1.0, 0.0);\n  this.m_localAnchorB = anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.neo(1.0, 0.0);\n\n  this.m_maxLength = def.maxLength;\n\n  this.m_mass = 0.0;\n  this.m_impulse = 0.0;\n  this.m_length = 0.0;\n  this.m_state = inactiveLimit;\n\n  // Solver temp\n  this.m_u; // Vec2\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_mass; // float\n\n  // Limit:\n  // C = norm(pB - pA) - L\n  // u = (pB - pA) / norm(pB - pA)\n  // Cdot = dot(u, vB + cross(wB, rB) - vA - cross(wA, rA))\n  // J = [-u -cross(rA, u) u cross(rB, u)]\n  // K = J * invM * JT\n  // = invMassA + invIA * cross(rA, u)^2 + invMassB + invIB * cross(rB, u)^2\n};\n\nRopeJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    maxLength: this.m_maxLength,\n  };\n};\n\nRopeJoint._deserialize = function(data, world, restore) {\n  data = Object.assign({}, data);\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new RopeJoint(data);\n  return joint;\n};\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nRopeJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nRopeJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * Set/Get the maximum length of the rope.\n */\nRopeJoint.prototype.setMaxLength = function(length) {\n  this.m_maxLength = length;\n}\n\nRopeJoint.prototype.getMaxLength = function() {\n  return this.m_maxLength;\n}\n\nRopeJoint.prototype.getLimitState = function() {\n  // TODO LimitState\n  return this.m_state;\n}\n\nRopeJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nRopeJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nRopeJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(this.m_impulse, this.m_u).mul(inv_dt);\n}\n\nRopeJoint.prototype.getReactionTorque = function(inv_dt) {\n  return 0.0;\n}\n\nRopeJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_localCenterA);\n  this.m_rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_localCenterB);\n  this.m_u = Vec2.zero();\n  this.m_u.addCombine(1, cB, 1, this.m_rB);\n  this.m_u.subCombine(1, cA, 1, this.m_rA); // Vec2\n\n  this.m_length = this.m_u.length();\n\n  var C = this.m_length - this.m_maxLength; // float\n  if (C > 0.0) {\n    this.m_state = atUpperLimit;\n  } else {\n    this.m_state = inactiveLimit;\n  }\n\n  if (this.m_length > Settings.linearSlop) {\n    this.m_u.mul(1.0 / this.m_length);\n  } else {\n    this.m_u.setZero();\n    this.m_mass = 0.0;\n    this.m_impulse = 0.0;\n    return;\n  }\n\n  // Compute effective mass.\n  var crA = Vec2.cross(this.m_rA, this.m_u); // float\n  var crB = Vec2.cross(this.m_rB, this.m_u); // float\n  var invMass = this.m_invMassA + this.m_invIA * crA * crA + this.m_invMassB\n      + this.m_invIB * crB * crB; // float\n\n  this.m_mass = invMass != 0.0 ? 1.0 / invMass : 0.0;\n\n  if (step.warmStarting) {\n    // Scale the impulse to support a variable time step.\n    this.m_impulse *= step.dtRatio;\n\n    var P = Vec2.mul(this.m_impulse, this.m_u);\n    \n    vA.subMul(this.m_invMassA, P);\n    wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n    \n    vB.addMul(this.m_invMassB, P);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n    \n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nRopeJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  // Cdot = dot(u, v + cross(w, r))\n  var vpA = Vec2.addCross(vA, wA, this.m_rA); // Vec2\n  var vpB = Vec2.addCross(vB, wB, this.m_rB); // Vec2\n  var C = this.m_length - this.m_maxLength; // float\n  var Cdot = Vec2.dot(this.m_u, Vec2.sub(vpB, vpA)); // float\n\n  // Predictive constraint.\n  if (C < 0.0) {\n    Cdot += step.inv_dt * C;\n  }\n\n  var impulse = -this.m_mass * Cdot; // float\n  var oldImpulse = this.m_impulse; // float\n  this.m_impulse = Math.min(0.0, this.m_impulse + impulse);\n  impulse = this.m_impulse - oldImpulse;\n\n  var P = Vec2.mul(impulse, this.m_u); // Vec2\n  vA.subMul(this.m_invMassA, P);\n  wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n  vB.addMul(this.m_invMassB, P);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nRopeJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c; // Vec2\n  var aA = this.m_bodyA.c_position.a; // float\n  var cB = this.m_bodyB.c_position.c; // Vec2\n  var aB = this.m_bodyB.c_position.a; // float\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_localCenterA);\n  var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_localCenterB);\n  var u = Vec2.zero();\n  u.addCombine(1, cB, 1, rB);\n  u.subCombine(1, cA, 1, rA); // Vec2\n\n  var length = u.normalize(); // float\n  var C = length - this.m_maxLength; // float\n\n  C = Math.clamp(C, 0.0, Settings.maxLinearCorrection);\n\n  var impulse = -this.m_mass * C; // float\n  var P = Vec2.mul(impulse, u); // Vec2\n\n  cA.subMul(this.m_invMassA, P);\n  aA -= this.m_invIA * Vec2.cross(rA, P);\n  cB.addMul(this.m_invMassB, P);\n  aB += this.m_invIB * Vec2.cross(rB, P);\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n\n  return length - this.m_maxLength < Settings.linearSlop;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default WeldJoint;\n\nimport options from '../util/options';\nimport Settings from '../Settings';\n\nimport Math from '../common/Math';\nimport Vec2 from '../common/Vec2';\nimport Vec3 from '../common/Vec3';\nimport Mat22 from '../common/Mat22';\nimport Mat33 from '../common/Mat33';\nimport Rot from '../common/Rot';\nimport Sweep from '../common/Sweep';\nimport Transform from '../common/Transform';\nimport Velocity from '../common/Velocity';\nimport Position from '../common/Position';\n\nimport Joint from '../Joint';\nimport Body from '../Body';\n\nWeldJoint.TYPE = 'weld-joint';\nJoint.TYPES[WeldJoint.TYPE] = WeldJoint;\n\nWeldJoint._super = Joint;\nWeldJoint.prototype = Object.create(WeldJoint._super.prototype);\n\n/**\n * @typedef {Object} WeldJointDef\n *\n * Weld joint definition. You need to specify local anchor points where they are\n * attached and the relative body angle. The position of the anchor points is\n * important for computing the reaction torque.\n * \n * @prop {float} frequencyHz The mass-spring-damper frequency in Hertz. Rotation\n *       only. Disable softness with a value of 0.\n * @prop {float} dampingRatio The damping ratio. 0 = no damping, 1 = critical\n *       damping.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {float} referenceAngle The bodyB angle minus bodyA angle in the\n *       reference state (radians).\n */\nvar DEFAULTS = {\n  frequencyHz : 0.0,\n  dampingRatio : 0.0,\n}\n\n/**\n * A weld joint essentially glues two bodies together. A weld joint may distort\n * somewhat because the island constraint solver is approximate.\n *\n * @param {WeldJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction WeldJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof WeldJoint)) {\n    return new WeldJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = WeldJoint.TYPE;\n\n  this.m_localAnchorA = Vec2.clone(anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero());\n  this.m_localAnchorB = Vec2.clone(anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero());\n  this.m_referenceAngle = Math.isFinite(def.referenceAngle) ? def.referenceAngle : bodyB.getAngle() - bodyA.getAngle();\n\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n\n  this.m_impulse = Vec3();\n\n  this.m_bias = 0.0;\n  this.m_gamma = 0.0;\n\n  // Solver temp\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_mass = new Mat33();\n\n  // Point-to-point constraint\n  // C = p2 - p1\n  // Cdot = v2 - v1\n  // / = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n\n  // Angle constraint\n  // C = angle2 - angle1 - referenceAngle\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\nWeldJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n    \n    frequencyHz: this.m_frequencyHz,\n    dampingRatio: this.m_dampingRatio,\n\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    referenceAngle: this.m_referenceAngle,\n  };\n};\n\nWeldJoint._deserialize = function(data, world, restore) {\n  data = Object.assign({}, data);\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new WeldJoint(data);\n  return joint;\n};\n\n/**\n * @internal\n */\nWeldJoint.prototype._setAnchors = function(def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nWeldJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n};\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nWeldJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n};\n\n/**\n * Get the reference angle.\n */\nWeldJoint.prototype.getReferenceAngle = function() {\n  return this.m_referenceAngle;\n};\n\n/**\n * Set/get frequency in Hz.\n */\nWeldJoint.prototype.setFrequency = function(hz) {\n  this.m_frequencyHz = hz;\n};\n\nWeldJoint.prototype.getFrequency = function() {\n  return this.m_frequencyHz;\n};\n\n/**\n * Set/get damping ratio.\n */\nWeldJoint.prototype.setDampingRatio = function(ratio) {\n  this.m_dampingRatio = ratio;\n};\n\nWeldJoint.prototype.getDampingRatio = function() {\n  return this.m_dampingRatio;\n};\n\nWeldJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n};\n\nWeldJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n};\n\nWeldJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.neo(this.m_impulse.x, this.m_impulse.y).mul(inv_dt);\n};\n\nWeldJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_impulse.z;\n};\n\nWeldJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var K = new Mat33();\n  K.ex.x = mA + mB + this.m_rA.y * this.m_rA.y * iA + this.m_rB.y * this.m_rB.y\n      * iB;\n  K.ey.x = -this.m_rA.y * this.m_rA.x * iA - this.m_rB.y * this.m_rB.x * iB;\n  K.ez.x = -this.m_rA.y * iA - this.m_rB.y * iB;\n  K.ex.y = K.ey.x;\n  K.ey.y = mA + mB + this.m_rA.x * this.m_rA.x * iA + this.m_rB.x * this.m_rB.x\n      * iB;\n  K.ez.y = this.m_rA.x * iA + this.m_rB.x * iB;\n  K.ex.z = K.ez.x;\n  K.ey.z = K.ez.y;\n  K.ez.z = iA + iB;\n\n  if (this.m_frequencyHz > 0.0) {\n    K.getInverse22(this.m_mass);\n\n    var invM = iA + iB; // float\n    var m = invM > 0.0 ? 1.0 / invM : 0.0; // float\n\n    var C = aB - aA - this.m_referenceAngle; // float\n\n    // Frequency\n    var omega = 2.0 * Math.PI * this.m_frequencyHz; // float\n\n    // Damping coefficient\n    var d = 2.0 * m * this.m_dampingRatio * omega; // float\n\n    // Spring stiffness\n    var k = m * omega * omega; // float\n\n    // magic formulas\n    var h = step.dt; // float\n    this.m_gamma = h * (d + h * k);\n    this.m_gamma = this.m_gamma != 0.0 ? 1.0 / this.m_gamma : 0.0;\n    this.m_bias = C * h * k * this.m_gamma;\n\n    invM += this.m_gamma;\n    this.m_mass.ez.z = invM != 0.0 ? 1.0 / invM : 0.0;\n  } else if (K.ez.z == 0.0) {\n    K.getInverse22(this.m_mass);\n    this.m_gamma = 0.0;\n    this.m_bias = 0.0;\n  } else {\n    K.getSymInverse33(this.m_mass);\n    this.m_gamma = 0.0;\n    this.m_bias = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_impulse.mul(step.dtRatio);\n\n    var P = Vec2.neo(this.m_impulse.x, this.m_impulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_impulse.z);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_impulse.z);\n\n  } else {\n    this.m_impulse.setZero();\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nWeldJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  if (this.m_frequencyHz > 0.0) {\n    var Cdot2 = wB - wA; // float\n\n    var impulse2 = -this.m_mass.ez.z\n        * (Cdot2 + this.m_bias + this.m_gamma * this.m_impulse.z); // float\n    this.m_impulse.z += impulse2;\n\n    wA -= iA * impulse2;\n    wB += iB * impulse2;\n\n    var Cdot1 = Vec2.zero();\n    Cdot1.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot1.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA)); // Vec2\n\n    var impulse1 = Vec2.neg(Mat33.mulVec2(this.m_mass, Cdot1)); // Vec2\n    this.m_impulse.x += impulse1.x;\n    this.m_impulse.y += impulse1.y;\n\n    var P = Vec2.clone(impulse1); // Vec2\n\n    vA.subMul(mA, P);\n    wA -= iA * Vec2.cross(this.m_rA, P);\n\n    vB.addMul(mB, P);\n    wB += iB * Vec2.cross(this.m_rB, P);\n  } else {\n    var Cdot1 = Vec2.zero();\n    Cdot1.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot1.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA)); // Vec2\n    var Cdot2 = wB - wA; // float\n    var Cdot = Vec3(Cdot1.x, Cdot1.y, Cdot2); // Vec3\n\n    var impulse = Vec3.neg(Mat33.mulVec3(this.m_mass, Cdot)); // Vec3\n    this.m_impulse.add(impulse);\n\n    var P = Vec2.neo(impulse.x, impulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + impulse.z);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + impulse.z);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nWeldJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  var mA = this.m_invMassA, mB = this.m_invMassB; // float\n  var iA = this.m_invIA, iB = this.m_invIB; // float\n\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  var positionError, angularError; // float\n\n  var K = new Mat33();\n  K.ex.x = mA + mB + rA.y * rA.y * iA + rB.y * rB.y * iB;\n  K.ey.x = -rA.y * rA.x * iA - rB.y * rB.x * iB;\n  K.ez.x = -rA.y * iA - rB.y * iB;\n  K.ex.y = K.ey.x;\n  K.ey.y = mA + mB + rA.x * rA.x * iA + rB.x * rB.x * iB;\n  K.ez.y = rA.x * iA + rB.x * iB;\n  K.ex.z = K.ez.x;\n  K.ey.z = K.ez.y;\n  K.ez.z = iA + iB;\n\n  if (this.m_frequencyHz > 0.0) {\n    var C1 = Vec2.zero();\n    C1.addCombine(1, cB, 1, rB);\n    C1.subCombine(1, cA, 1, rA); // Vec2\n\n    positionError = C1.length();\n    angularError = 0.0;\n\n    var P = Vec2.neg(K.solve22(C1)); // Vec2\n\n    cA.subMul(mA, P);\n    aA -= iA * Vec2.cross(rA, P);\n\n    cB.addMul(mB, P);\n    aB += iB * Vec2.cross(rB, P);\n  } else {\n    var C1 = Vec2.zero();\n    C1.addCombine(1, cB, 1, rB);\n    C1.subCombine(1, cA, 1, rA);\n\n    var C2 = aB - aA - this.m_referenceAngle; // float\n\n    positionError = C1.length();\n    angularError = Math.abs(C2);\n\n    var C = Vec3(C1.x, C1.y, C2);\n\n    var impulse = Vec3();\n    if (K.ez.z > 0.0) {\n      impulse = Vec3.neg(K.solve33(C));\n    } else {\n      var impulse2 = Vec2.neg(K.solve22(C1));\n      impulse.set(impulse2.x, impulse2.y, 0.0);\n    }\n\n    var P = Vec2.neo(impulse.x, impulse.y);\n\n    cA.subMul(mA, P);\n    aA -= iA * (Vec2.cross(rA, P) + impulse.z);\n\n    cB.addMul(mB, P);\n    aB += iB * (Vec2.cross(rB, P) + impulse.z);\n  }\n\n  this.m_bodyA.c_position.c = cA;\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c = cB;\n  this.m_bodyB.c_position.a = aB;\n\n  return positionError <= Settings.linearSlop\n      && angularError <= Settings.angularSlop;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexport default WheelJoint;\n\nimport options from '../util/options';\nimport Settings from '../Settings';\n\nimport Math from '../common/Math';\nimport Vec2 from '../common/Vec2';\nimport Vec3 from '../common/Vec3';\nimport Mat22 from '../common/Mat22';\nimport Mat33 from '../common/Mat33';\nimport Rot from '../common/Rot';\nimport Sweep from '../common/Sweep';\nimport Transform from '../common/Transform';\nimport Velocity from '../common/Velocity';\nimport Position from '../common/Position';\n\nimport Joint from '../Joint';\nimport Body from '../Body';\n\nWheelJoint.TYPE = 'wheel-joint';\nJoint.TYPES[WheelJoint.TYPE] = WheelJoint;\n\nWheelJoint._super = Joint;\nWheelJoint.prototype = Object.create(WheelJoint._super.prototype);\n\n/**\n * @typedef {Object} WheelJointDef\n *\n * Wheel joint definition. This requires defining a line of motion using an axis\n * and an anchor point. The definition uses local anchor points and a local axis\n * so that the initial configuration can violate the constraint slightly. The\n * joint translation is zero when the local anchor points coincide in world\n * space. Using local anchors and a local axis helps when saving and loading a\n * game.\n *\n * @prop {boolean} enableMotor Enable/disable the joint motor.\n * @prop {float} maxMotorTorque The maximum motor torque, usually in N-m.\n * @prop {float} motorSpeed The desired motor speed in radians per second.\n * @prop {float} frequencyHz Suspension frequency, zero indicates no suspension.\n * @prop {float} dampingRatio Suspension damping ratio, one indicates critical\n *       damping.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {Vec2} localAxisA The local translation axis in bodyA.\n */\nvar DEFAULTS = {\n  enableMotor : false,\n  maxMotorTorque : 0.0,\n  motorSpeed : 0.0,\n  frequencyHz : 2.0,\n  dampingRatio : 0.7,\n};\n\n/**\n * A wheel joint. This joint provides two degrees of freedom: translation along\n * an axis fixed in bodyA and rotation in the plane. In other words, it is a\n * point to line constraint with a rotational motor and a linear spring/damper.\n * This joint is designed for vehicle suspensions.\n *\n * @param {WheelJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction WheelJoint(def, bodyA, bodyB, anchor, axis) {\n  if (!(this instanceof WheelJoint)) {\n    return new WheelJoint(def, bodyA, bodyB, anchor, axis);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = WheelJoint.TYPE;\n\n  this.m_localAnchorA = Vec2.clone(anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero());\n  this.m_localAnchorB = Vec2.clone(anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero());\n  this.m_localXAxisA = Vec2.clone(axis ? bodyA.getLocalVector(axis) : def.localAxisA || def.localAxis || Vec2.neo(1.0, 0.0));\n  this.m_localYAxisA = Vec2.cross(1.0, this.m_localXAxisA);\n\n  this.m_mass = 0.0;\n  this.m_impulse = 0.0;\n  this.m_motorMass = 0.0;\n  this.m_motorImpulse = 0.0;\n  this.m_springMass = 0.0;\n  this.m_springImpulse = 0.0;\n\n  this.m_maxMotorTorque = def.maxMotorTorque;\n  this.m_motorSpeed = def.motorSpeed;\n  this.m_enableMotor = def.enableMotor;\n\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n\n  this.m_bias = 0.0;\n  this.m_gamma = 0.0;\n\n  // Solver temp\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n\n  this.m_ax = Vec2.zero();\n  this.m_ay = Vec2.zero(); // Vec2\n  this.m_sAx;\n  this.m_sBx; // float\n  this.m_sAy;\n  this.m_sBy; // float\n\n  // Linear constraint (point-to-line)\n  // d = pB - pA = xB + rB - xA - rA\n  // C = dot(ay, d)\n  // Cdot = dot(d, cross(wA, ay)) + dot(ay, vB + cross(wB, rB) - vA - cross(wA,\n  // rA))\n  // = -dot(ay, vA) - dot(cross(d + rA, ay), wA) + dot(ay, vB) + dot(cross(rB,\n  // ay), vB)\n  // J = [-ay, -cross(d + rA, ay), ay, cross(rB, ay)]\n\n  // Spring linear constraint\n  // C = dot(ax, d)\n  // Cdot = = -dot(ax, vA) - dot(cross(d + rA, ax), wA) + dot(ax, vB) +\n  // dot(cross(rB, ax), vB)\n  // J = [-ax -cross(d+rA, ax) ax cross(rB, ax)]\n\n  // Motor rotational constraint\n  // Cdot = wB - wA\n  // J = [0 0 -1 0 0 1]\n}\n\nWheelJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    enableMotor: this.m_enableMotor,\n    maxMotorTorque: this.m_maxMotorTorque,\n    motorSpeed: this.m_motorSpeed,\n    frequencyHz: this.m_frequencyHz,\n    dampingRatio: this.m_dampingRatio,\n\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    localAxisA: this.m_localXAxisA,\n  };\n};\n\nWheelJoint._deserialize = function(data, world, restore) {\n  data = Object.assign({}, data);\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new WheelJoint(data);\n  return joint;\n};\n\n/**\n * @internal\n */\nWheelJoint.prototype._setAnchors = function(def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n\n  if (def.localAxisA) {\n    this.m_localXAxisA.set(def.localAxisA);\n    this.m_localYAxisA.set(Vec2.cross(1.0, def.localAxisA));\n  }\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nWheelJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nWheelJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * The local joint axis relative to bodyA.\n */\nWheelJoint.prototype.getLocalAxisA = function() {\n  return this.m_localXAxisA;\n}\n\n/**\n * Get the current joint translation, usually in meters.\n */\nWheelJoint.prototype.getJointTranslation = function() {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n\n  var pA = bA.getWorldPoint(this.m_localAnchorA); // Vec2\n  var pB = bB.getWorldPoint(this.m_localAnchorB); // Vec2\n  var d = Vec2.sub(pB, pA); // Vec2\n  var axis = bA.getWorldVector(this.m_localXAxisA); // Vec2\n\n  var translation = Vec2.dot(d, axis); // float\n  return translation;\n}\n\n/**\n * Get the current joint translation speed, usually in meters per second.\n */\nWheelJoint.prototype.getJointSpeed = function() {\n  var wA = this.m_bodyA.m_angularVelocity;\n  var wB = this.m_bodyB.m_angularVelocity;\n  return wB - wA;\n}\n\n/**\n * Is the joint motor enabled?\n */\nWheelJoint.prototype.isMotorEnabled = function() {\n  return this.m_enableMotor;\n}\n\n/**\n * Enable/disable the joint motor.\n */\nWheelJoint.prototype.enableMotor = function(flag) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_enableMotor = flag;\n}\n\n/**\n * Set the motor speed, usually in radians per second.\n */\nWheelJoint.prototype.setMotorSpeed = function(speed) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_motorSpeed = speed;\n}\n\n/**\n * Get the motor speed, usually in radians per second.\n */\nWheelJoint.prototype.getMotorSpeed = function() {\n  return this.m_motorSpeed;\n}\n\n/**\n * Set/Get the maximum motor force, usually in N-m.\n */\nWheelJoint.prototype.setMaxMotorTorque = function(torque) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_maxMotorTorque = torque;\n}\n\nWheelJoint.prototype.getMaxMotorTorque = function() {\n  return this.m_maxMotorTorque;\n}\n\n/**\n * Get the current motor torque given the inverse time step, usually in N-m.\n */\nWheelJoint.prototype.getMotorTorque = function(inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n}\n\n/**\n * Set/Get the spring frequency in hertz. Setting the frequency to zero disables\n * the spring.\n */\nWheelJoint.prototype.setSpringFrequencyHz = function(hz) {\n  this.m_frequencyHz = hz;\n}\n\nWheelJoint.prototype.getSpringFrequencyHz = function() {\n  return this.m_frequencyHz;\n}\n\n/**\n * Set/Get the spring damping ratio\n */\nWheelJoint.prototype.setSpringDampingRatio = function(ratio) {\n  this.m_dampingRatio = ratio;\n}\n\nWheelJoint.prototype.getSpringDampingRatio = function() {\n  return this.m_dampingRatio;\n}\n\nWheelJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nWheelJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nWheelJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.combine(this.m_impulse, this.m_ay, this.m_springImpulse, this.m_ax).mul(inv_dt);\n}\n\nWheelJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n}\n\nWheelJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  // Compute the effective masses.\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  var d = Vec2.zero();\n  d.addCombine(1, cB, 1, rB);\n  d.subCombine(1, cA, 1, rA); // Vec2\n\n  // Point to line constraint\n  {\n    this.m_ay = Rot.mulVec2(qA, this.m_localYAxisA);\n    this.m_sAy = Vec2.cross(Vec2.add(d, rA), this.m_ay);\n    this.m_sBy = Vec2.cross(rB, this.m_ay);\n\n    this.m_mass = mA + mB + iA * this.m_sAy * this.m_sAy + iB * this.m_sBy\n        * this.m_sBy;\n\n    if (this.m_mass > 0.0) {\n      this.m_mass = 1.0 / this.m_mass;\n    }\n  }\n\n  // Spring constraint\n  this.m_springMass = 0.0;\n  this.m_bias = 0.0;\n  this.m_gamma = 0.0;\n  if (this.m_frequencyHz > 0.0) {\n    this.m_ax = Rot.mulVec2(qA, this.m_localXAxisA);\n    this.m_sAx = Vec2.cross(Vec2.add(d, rA), this.m_ax);\n    this.m_sBx = Vec2.cross(rB, this.m_ax);\n\n    var invMass = mA + mB + iA * this.m_sAx * this.m_sAx + iB * this.m_sBx\n        * this.m_sBx; // float\n\n    if (invMass > 0.0) {\n      this.m_springMass = 1.0 / invMass;\n\n      var C = Vec2.dot(d, this.m_ax); // float\n\n      // Frequency\n      var omega = 2.0 * Math.PI * this.m_frequencyHz; // float\n\n      // Damping coefficient\n      var d = 2.0 * this.m_springMass * this.m_dampingRatio * omega; // float\n\n      // Spring stiffness\n      var k = this.m_springMass * omega * omega; // float\n\n      // magic formulas\n      var h = step.dt; // float\n      this.m_gamma = h * (d + h * k);\n      if (this.m_gamma > 0.0) {\n        this.m_gamma = 1.0 / this.m_gamma;\n      }\n\n      this.m_bias = C * h * k * this.m_gamma;\n\n      this.m_springMass = invMass + this.m_gamma;\n      if (this.m_springMass > 0.0) {\n        this.m_springMass = 1.0 / this.m_springMass;\n      }\n    }\n  } else {\n    this.m_springImpulse = 0.0;\n  }\n\n  // Rotational motor\n  if (this.m_enableMotor) {\n    this.m_motorMass = iA + iB;\n    if (this.m_motorMass > 0.0) {\n      this.m_motorMass = 1.0 / this.m_motorMass;\n    }\n  } else {\n    this.m_motorMass = 0.0;\n    this.m_motorImpulse = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Account for variable time step.\n    this.m_impulse *= step.dtRatio;\n    this.m_springImpulse *= step.dtRatio;\n    this.m_motorImpulse *= step.dtRatio;\n\n    var P = Vec2.combine(this.m_impulse, this.m_ay, this.m_springImpulse, this.m_ax);\n    var LA = this.m_impulse * this.m_sAy + this.m_springImpulse * this.m_sAx + this.m_motorImpulse;\n    var LB = this.m_impulse * this.m_sBy + this.m_springImpulse * this.m_sBx + this.m_motorImpulse;\n\n    vA.subMul(this.m_invMassA, P);\n    wA -= this.m_invIA * LA;\n\n    vB.addMul(this.m_invMassB, P);\n    wB += this.m_invIB * LB;\n\n  } else {\n    this.m_impulse = 0.0;\n    this.m_springImpulse = 0.0;\n    this.m_motorImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nWheelJoint.prototype.solveVelocityConstraints = function(step) {\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  // Solve spring constraint\n  {\n    var Cdot = Vec2.dot(this.m_ax, vB) - Vec2.dot(this.m_ax, vA) + this.m_sBx\n        * wB - this.m_sAx * wA; // float\n    var impulse = -this.m_springMass\n        * (Cdot + this.m_bias + this.m_gamma * this.m_springImpulse); // float\n    this.m_springImpulse += impulse;\n\n    var P = Vec2.mul(impulse, this.m_ax); // Vec2\n    var LA = impulse * this.m_sAx; // float\n    var LB = impulse * this.m_sBx; // float\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  }\n\n  // Solve rotational motor constraint\n  {\n    var Cdot = wB - wA - this.m_motorSpeed; // float\n    var impulse = -this.m_motorMass * Cdot; // float\n\n    var oldImpulse = this.m_motorImpulse; // float\n    var maxImpulse = step.dt * this.m_maxMotorTorque; // float\n    this.m_motorImpulse = Math.clamp(this.m_motorImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_motorImpulse - oldImpulse;\n\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  }\n\n  // Solve point to line constraint\n  {\n    var Cdot = Vec2.dot(this.m_ay, vB) - Vec2.dot(this.m_ay, vA) + this.m_sBy\n        * wB - this.m_sAy * wA; // float\n    var impulse = -this.m_mass * Cdot; // float\n    this.m_impulse += impulse;\n\n    var P = Vec2.mul(impulse, this.m_ay); // Vec2\n    var LA = impulse * this.m_sAy; // float\n    var LB = impulse * this.m_sBy; // float\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nWheelJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  var d = Vec2.zero();\n  d.addCombine(1, cB, 1, rB);\n  d.subCombine(1, cA, 1, rA);\n\n  var ay = Rot.mulVec2(qA, this.m_localYAxisA);\n\n  var sAy = Vec2.cross(Vec2.add(d, rA), ay); // float\n  var sBy = Vec2.cross(rB, ay); // float\n\n  var C = Vec2.dot(d, ay); // float\n\n  var k = this.m_invMassA + this.m_invMassB + this.m_invIA * this.m_sAy\n      * this.m_sAy + this.m_invIB * this.m_sBy * this.m_sBy; // float\n\n  var impulse; // float\n  if (k != 0.0) {\n    impulse = -C / k;\n  } else {\n    impulse = 0.0;\n  }\n\n  var P = Vec2.mul(impulse, ay); // Vec2\n  var LA = impulse * sAy; // float\n  var LB = impulse * sBy; // float\n\n  cA.subMul(this.m_invMassA, P);\n  aA -= this.m_invIA * LA;\n  cB.addMul(this.m_invMassB, P);\n  aB += this.m_invIB * LB;\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n\n  return Math.abs(C) <= Settings.linearSlop;\n}\n","export { default as Serializer } from './serializer/index';\n\nexport { default as Math } from './common/Math';\nexport { default as Vec2 } from './common/Vec2';\nexport { default as Vec3 } from './common/Vec3';\nexport { default as Mat22 } from './common/Mat22';\nexport { default as Mat33 } from './common/Mat33';\nexport { default as Transform } from './common/Transform';\nexport { default as Rot } from './common/Rot';\n\nexport { default as AABB } from './collision/AABB';\n\nexport { default as Shape } from './Shape';\nexport { default as Fixture } from './Fixture';\nexport { default as Body } from './Body';\nexport { default as Contact } from './Contact';\nexport { default as Joint } from './Joint';\nexport { default as World } from './World';\n\nexport { default as Circle } from './shape/CircleShape';\nexport { default as Edge } from './shape/EdgeShape';\nexport { default as Polygon } from './shape/PolygonShape';\nexport { default as Chain } from './shape/ChainShape';\nexport { default as Box } from './shape/BoxShape';\n\nexport { CollideCircles } from './shape/CollideCircle';\nexport { CollideEdgeCircle } from './shape/CollideEdgeCircle';\nexport { CollidePolygons } from './shape/CollidePolygon';\nexport { CollidePolygonCircle } from './shape/CollideCirclePolygone';\nexport { CollideEdgePolygon } from './shape/CollideEdgePolygon';\n\nexport { default as DistanceJoint } from './joint/DistanceJoint';\nexport { default as FrictionJoint } from './joint/FrictionJoint';\nexport { default as GearJoint } from './joint/GearJoint';\nexport { default as MotorJoint } from './joint/MotorJoint';\nexport { default as MouseJoint } from './joint/MouseJoint';\nexport { default as PrismaticJoint } from './joint/PrismaticJoint';\nexport { default as PulleyJoint } from './joint/PulleyJoint';\nexport { default as RevoluteJoint } from './joint/RevoluteJoint';\nexport { default as RopeJoint } from './joint/RopeJoint';\nexport { default as WeldJoint } from './joint/WeldJoint';\nexport { default as WheelJoint } from './joint/WheelJoint';\n\nexport { default as Settings } from './Settings';\n\nexport { default as Sweep } from './common/Sweep';\nexport { default as Manifold } from './Manifold';\nexport { default as Distance } from './collision/Distance';\nexport { default as TimeOfImpact } from './collision/TimeOfImpact';\nexport { default as DynamicTree } from './collision/DynamicTree';\n\n\nimport { CollidePolygons } from './shape/CollidePolygon';\nimport { default as Settings } from './Settings';\nimport { default as Sweep } from './common/Sweep';\nimport { default as Manifold } from './Manifold';\nimport { default as Distance } from './collision/Distance';\nimport { default as TimeOfImpact } from './collision/TimeOfImpact';\nimport { default as DynamicTree } from './collision/DynamicTree';\n\nimport { default as stats } from './util/stats'; // todo: what to do with this?\n\n/** @deprecated Merged with main namespace */\nexport const internal = {\n  CollidePolygons,\n  Settings,\n  Sweep,\n  Manifold,\n  Distance,\n  TimeOfImpact,\n  DynamicTree,\n  stats,\n};\n"],"names":["input","defaults","output","Object","assign","key","hasOwnProperty","getOwnPropertySymbols","symbols","i","length","symbol","propertyIsEnumerable","native","Math","math","create","Vec2","x","y","this","_typeof","EPSILON","isFinite","isNaN","assert","invSqrt","sqrt","nextPowerOfTwo","isPowerOfTwo","mod","num","min","max","clamp","random","prototype","_serialize","_deserialize","data","obj","zero","neo","clone","v","toString","JSON","stringify","isValid","o","setZero","set","wSet","a","b","w","setCombine","setMul","add","wAdd","addCombine","addMul","wSub","subCombine","subMul","sub","mul","m","lengthOf","lengthSquared","normalize","invLength","distance","dx","dy","distanceSquared","areEqual","skew","dot","cross","addCross","combine","neg","abs","mid","upper","lower","lengthSqr","scaleFn","translateFn","Settings","AABB","lowerBound","upperBound","Pool","opts","_list","_max","Infinity","_createFn","_outFn","allocate","_inFn","release","_discardFn","discard","_createCount","_outCount","_inCount","_discardCount","n","size","item","shift","push","TreeNode","id","aabb","userData","parent","child1","child2","height","DynamicTree","m_root","m_nodes","m_lastProxyId","m_pool","maxManifoldPoints","maxPolygonVertices","aabbExtension","aabbMultiplier","linearSlop","linearSlopSquared","angularSlop","PI","polygonRadius","maxSubSteps","maxTOIContacts","maxTOIIterations","maxDistnceIterations","velocityThreshold","maxLinearCorrection","maxAngularCorrection","maxTranslation","maxTranslationSquared","maxRotation","maxRotationSquared","baumgarte","toiBaugarte","timeToSleep","linearSleepTolerance","linearSleepToleranceSqr","pow","angularSleepTolerance","angularSleepToleranceSqr","d","getCenter","getExtents","getPerimeter","lowerA","upperA","lowerB","upperB","lowerX","lowerY","upperX","upperY","combinePoints","contains","result","extend","value","testOverlap","d1x","d2x","d1y","d2y","diff","wD","hD","rayCast","tmin","tmax","p","p1","p2","absD","normal","f","inv_d","t1","t2","s","temp","maxFraction","fraction","isLeaf","getUserData","getFatAABB","allocateNode","node","freeNode","createProxy","insertLeaf","destroyProxy","removeLeaf","moveProxy","leaf","leafAABB","index","area","combinedAABB","cost1","cost2","combinedArea","cost","inheritanceCost","oldArea","sibling","oldParent","newParent","balance","grandParent","iA","A","B","C","F","G","D","E","getHeight","getAreaRatio","rootArea","totalArea","it","iteratorPool","preorder","next","computeHeight","height1","height2","validateStructure","validateMetrics","validate","getMaxBalance","maxBalance","rebuildBottomUp","nodes","count","minCost","iMin","jMin","aabbi","j","aabbj","shiftOrigin","newOrigin","query","queryCallback","stack","stackPool","pop","rayCastCallback","r","abs_v","segmentAABB","t","subInput","inputPool","c","h","Iterator","iterator","close","parents","states","root","BroadPhase","m_tree","m_proxyCount","m_moveBuffer","bind","Rot","angle","setAngle","setIdentity","Transform","position","rotation","q","identity","Sweep","localCenter","alpha0","c0","a0","Velocity","Position","Shape","m_type","m_radius","proxyId","proxyIdA","proxyIdB","aabbA","aabbB","getProxyCount","getTreeHeight","getTreeBalance","getTreeQuality","bufferMove","unbufferMove","displacement","touchProxy","updatePairs","addPairCallback","m_callback","m_queryProxyId","fatAABB","userDataA","userDataB","rot","sin","cos","getAngle","atan2","getXAxis","getYAxis","qr","mulRot","mulVec2","mulSub","mulT","mulTRot","mulTVec2","xf","Array","isArray","arr","mulAll","mulFn","mulXf","px","py","mulTXf","setTransform","setLocalCenter","getTransform","beta","advance","alpha","forward","that","_reset","TYPES","context","restore","clazz","type","shape","getRadius","getType","_clone","getChildCount","testPoint","transform","childIndex","computeAABB","computeMass","massData","density","computeDistanceProxy","proxy","FixtureDef","friction","restitution","isSensor","filterGroupIndex","filterCategoryBits","filterMaskBits","FixtureProxy","fixture","Fixture","body","def","options","m_body","m_friction","m_restitution","m_density","m_isSensor","m_filterGroupIndex","m_filterCategoryBits","m_filterMaskBits","m_shape","m_next","m_proxies","childCount","m_userData","getBody","broadPhase","m_world","m_broadPhase","destroyProxies","createProxies","m_xf","resetMassData","getShape","setSensor","sensor","setAwake","setUserData","getNext","getDensity","setDensity","getFriction","setFriction","getRestitution","setRestitution","getMassData","getAABB","synchronize","xf1","xf2","aabb1","aabb2","setFilterData","filter","groupIndex","categoryBits","maskBits","refilter","getFilterGroupIndex","setFilterGroupIndex","getFilterCategoryBits","setFilterCategoryBits","getFilterMaskBits","setFilterMaskBits","edge","getContactList","contact","fixtureA","getFixtureA","fixtureB","getFixtureB","flagForFiltering","world","getWorld","shouldCollide","collideA","collideB","staticBody","Body","STATIC","kinematicBody","KINEMATIC","dynamicBody","DYNAMIC","BodyDef","linearVelocity","angularVelocity","linearDamping","angularDamping","fixedRotation","bullet","gravityScale","allowSleep","awake","active","m_awakeFlag","m_autoSleepFlag","m_bulletFlag","m_fixedRotationFlag","m_activeFlag","m_islandFlag","m_toiFlag","m_mass","m_invMass","m_I","m_invI","m_sweep","c_velocity","c_position","m_force","m_torque","m_linearVelocity","m_angularVelocity","m_linearDamping","m_angularDamping","m_gravityScale","m_sleepTime","m_jointList","m_contactList","m_fixtureList","m_prev","m_destroyed","MassData","mass","center","I","Mat22","ex","ey","Manifold","localNormal","localPoint","points","ManifoldPoint","pointCount","normalImpulse","tangentImpulse","ContactID","cf","ContactFeature","indexA","indexB","typeA","typeB","WorldManifold","separations","fixtures","_addFixture","isWorldLocked","isLocked","getFixtureList","getJointList","isStatic","isDynamic","isKinematic","setStatic","setType","setDynamic","setKinematic","synchronizeFixtures","ce","ce0","destroyContact","proxyCount","isBullet","setBullet","flag","isSleepingAllowed","setSleepingAllowed","isAwake","isActive","setActive","isFixedRotation","setFixedRotation","synchronizeTransform","getPosition","setPosition","getWorldCenter","getLocalCenter","getLinearVelocity","getLinearVelocityFromWorldPoint","worldPoint","getLinearVelocityFromLocalPoint","getWorldPoint","setLinearVelocity","getAngularVelocity","setAngularVelocity","getLinearDamping","setLinearDamping","getAngularDamping","setAngularDamping","getGravityScale","setGravityScale","scale","getMass","getInertia","oldCenter","setMassData","applyForce","force","point","wake","applyForceToCenter","applyTorque","torque","applyLinearImpulse","impulse","applyAngularImpulse","jn","other","joint","m_collideConnected","m_newFixture","createFixture","fixdef","destroyFixture","publish","getWorldVector","localVector","getLocalPoint","getLocalVector","worldVector","getInverse","det","imx","solve","mx","mulMat22","mulTMat22","mx1","mx2","clipSegmentToLine","vOut","vIn","offset","vertexIndexA","numOut","distance0","distance1","interp","e_vertex","e_face","ClipVertex","getPointStates","state1","state2","manifold1","manifold2","PointState","removeState","persistState","addState","e_circles","e_faceA","e_faceB","defineProperty","get","enumerable","configurable","getWorldManifold","wm","xfA","radiusA","xfB","radiusB","pointA","pointB","dist","cA","cB","planePoint","clipPoint","nullState","newline","string","name","Vec3","z","Mat33","ez","DistanceInput","proxyA","DistanceProxy","proxyB","transformA","transformB","useRadii","DistanceOutput","iterations","SimplexCache","metric","Distance","cache","stats","gjkCalls","simplex","Simplex","readCache","vertices","m_v","k_maxIters","saveA","saveB","saveCount","iter","m_count","getClosestPoint","getSearchDirection","vertex","getSupport","wA","getVertex","wB","gjkIters","duplicate","gjkMaxIters","getWitnessPoints","writeCache","rA","rB","m_buffer","m_vertices","SimplexVertex","m_v1","m_v2","m_v3","ContactEdge","prev","Contact","fA","fB","evaluateFcn","m_nodeA","m_nodeB","m_fixtureA","m_fixtureB","m_indexA","m_indexB","m_evaluateFcn","m_manifold","m_toi","m_toiCount","mixFriction","mixRestitution","m_tangentSpeed","m_enabledFlag","m_touchingFlag","m_filterFlag","m_bulletHitFlag","v_points","v_normal","v_normalMass","v_K","v_pointCount","v_tangentSpeed","v_friction","v_restitution","v_invMassA","v_invMassB","v_invIA","v_invIB","p_localPoints","p_localNormal","p_localPoint","p_localCenterA","p_localCenterB","p_type","p_radiusA","p_radiusB","p_pointCount","p_invMassA","p_invMassB","p_invIA","p_invIB","VelocityConstraintPoint","normalMass","tangentMass","velocityBias","friction1","friction2","restitution1","restitution2","solve33","solve22","a11","a12","a21","a22","getInverse22","M","getSymInverse33","a13","a23","a33","mulVec3","Input","Output","Proxy","Cache","getVertexCount","bestIndex","bestValue","getSupportVertex","print","wALocal","wBLocal","metric1","metric2","getMetric","e12","pA","pB","solve2","solve3","w1","w2","d12_2","d12_1","inv_d12","w3","w1e12","e13","w1e13","d13_1","d13_2","e23","w2e23","d23_1","d23_2","n123","d123_1","d123_2","d123_3","inv_d13","inv_d23","inv_d123","shapeA","shapeB","initConstraint","step","bodyA","bodyB","manifold","getManifold","cp","vcp","warmStarting","dtRatio","worldManifold","setEnabled","isEnabled","isTouching","getChildIndexA","getChildIndexB","resetFriction","resetRestitution","setTangentSpeed","speed","getTangentSpeed","evaluate","update","listener","touching","wasTouching","sensorA","sensorB","oldManifold","nmp","omp","beginContact","endContact","preSolve","solvePositionConstraint","_solvePositionConstraint","solvePositionConstraintTOI","toiA","toiB","toi","positionA","positionB","localCenterA","localCenterB","mA","mB","iB","aA","aB","minSeparation","separation","rnA","rnB","K","P","initVelocityConstraint","velocityA","velocityB","vA","vB","kNormal","tangent","rtA","rtB","kTangent","vRel","blockSolve","vcp1","vcp2","rn1A","rn1B","rn2A","rn2B","k11","k22","k12","warmStartConstraint","storeConstraintImpulses","solveVelocityConstraint","dv","vt","lambda","maxFriction","newImpulse","vn","dv1","dv2","vn1","vn2","P1","P2","s_registers","JointEdge","Joint","m_bodyA","m_bodyB","m_index","collideConnected","m_edgeA","m_edgeB","addType","type1","type2","callback","destroy","destroyFcn","getBodyA","getBodyB","getCollideConnected","getAnchorA","getAnchorB","getReactionForce","inv_dt","getReactionTorque","initVelocityConstraints","solveVelocityConstraints","solvePositionConstraints","Date","now","time","TimeOfImpact","sweepA","sweepB","tMax","TOIOutput","state","timer","Timer","toiCalls","e_unknown","totalRadius","target","tolerance","k_maxIterations","distanceInput","distanceOutput","e_overlapped","e_touching","fcn","SeparationFunction","initialize","done","pushBackIter","s2","findMinSeparation","e_separated","s1","e_failed","rootIterCount","a1","a2","toiRootIters","toiMaxRootIters","toiIters","toiMaxIters","toiMaxTime","toiTime","m_proxyA","m_proxyB","m_sweepA","m_sweepB","m_localPoint","m_axis","localPointA","localPointB","localPointB1","localPointB2","localPointA1","localPointA2","compute","find","axisA","axisB","Solver","TimeStep","TOIInput","dt","velocityIterations","positionIterations","inv_dt0","m_stack","m_bodies","m_contacts","m_joints","reset","clear","addBody","addContact","addJoint","solveWorld","m_bodyList","seed","je","solveIsland","gravity","m_gravity","m_allowSleep","translation","ratio","positionSolved","contactsOkay","jointsOkay","jointOkay","postSolveIsland","minSleepTime","linTolSqr","angTolSqr","printBodies","tag","common","s_subStep","ContactImpulse","normalImpulses","tangentImpulses","solveWorldTOI","m_stepComplete","minContact","minAlpha","bA","bB","activeA","activeB","backup1","backup2","bodies","backup","solveIslandTOI","findNewContacts","m_subStepping","subStep","postSolve","WorldDef","continuousPhysics","subStepping","World","m_solver","m_contactCount","m_bodyCount","m_jointCount","m_clearForces","m_locked","m_warmStarting","m_continuousPhysics","m_blockSolve","m_velocityIterations","m_positionIterations","m_t","addPair","createContact","joints","getBodyList","_addBody","createJoint","getBodyCount","getJointCount","getContactCount","setGravity","getGravity","setAllowSleeping","getAllowSleeping","setWarmStarting","getWarmStarting","setContinuousPhysics","getContinuousPhysics","setSubStepping","getSubStepping","setAutoClearForces","getAutoClearForces","clearForces","queryAABB","point1","point2","reportFixtureCallback","createBody","createDynamicBody","createKinematicBody","destroyBody","je0","destroyJoint","f0","s_step","timeStep","updateContacts","next_c","_listeners","on","off","listeners","indexOf","splice","arg1","arg2","arg3","l","call","SID","Serializer","rootClass","preSerialize","postSerialize","preDeserialize","postDeserialize","refTypes","restoreTypes","toJson","json","queue","refMap","storeRef","typeName","__sid","ref","refIndex","refType","top","serialize","newValue","str","fromJson","deserialize","cls","ctx","restoreRef","serializer","CircleShape","_super","TYPE","m_p","EdgeShape","v1","v2","m_vertex1","m_vertex2","m_vertex0","m_vertex3","m_hasVertex0","m_hasVertex3","PolygonShape","m_centroid","m_normals","_set","ChainShape","loop","m_prevVertex","m_nextVertex","m_hasPrevVertex","m_hasNextVertex","m_isLoop","_createLoop","_createChain","BoxShape","hx","hy","_setAsBox","CollideCircles","circleA","circleB","distSqr","radius","CollideEdgeCircle","edgeA","Q","e","u","A1","B1","e1","B2","A2","e2","den","FindMaxSeparation","poly1","poly2","count1","count2","n1s","v1s","v2s","maxSeparation","si","sij","_maxSeparation","_bestIndex","CollidePolygons","polyA","polyB","separationA","edgeB","separationB","edge1","flip","incidentEdge","normals1","vertices2","normals2","normal1","minDot","i1","i2","FindIncidentEdge","vertices1","iv1","iv2","v11","v12","localTangent","frontOffset","sideOffset1","sideOffset2","clipPoints1","clipPoints2","CollidePolygonCircle","polygonA","cLocal","normalIndex","vertexCount","normals","vertIndex1","vertIndex2","u1","u2","faceCenter","rr","sigma","vertex1","vertex2","vertex0","vertex3","hasVertex0","hasVertex3","setPrev","setNext","v3","v0","numerator","denominator","ps","unique","i0","x0","hull","ih","ie","vs","pRef","inv3","p3","triangleArea","ComputeCentroid","pLocal","minX","minY","maxX","maxY","k_inv3","ex1","ey1","ex2","ey2","isLoop","hasPrevVertex","hasNextVertex","prevVertex","nextVertex","setPrevVertex","setNextVertex","createChain","getChildEdge","chain","CollideEdgePolygon","EPAxis","edgeAxis","polygonAxis","polygonBA","rf","sideNormal1","sideNormal2","polygonB","centroidB","front","offset1","offset0","offset2","convex1","convex2","edge0","normal0","edge2","normal2","lowerLimit","upperLimit","perp","primaryAxis","DistanceJoint","DEFAULTS","frequencyHz","dampingRatio","anchorA","anchorB","m_localAnchorA","localAnchorA","m_localAnchorB","localAnchorB","m_length","m_frequencyHz","m_dampingRatio","m_impulse","m_gamma","m_bias","m_u","m_rA","m_rB","m_localCenterA","m_localCenterB","m_invMassA","m_invMassB","m_invIA","m_invIB","gamma","bias","_setAnchors","getLocalAnchorA","getLocalAnchorB","setLength","getLength","setFrequency","hz","getFrequency","setDampingRatio","getDampingRatio","qA","qB","crAu","crBu","invMass","omega","k","vpA","vpB","Cdot","FrictionJoint","maxForce","maxTorque","anchor","m_linearImpulse","m_angularImpulse","m_maxForce","m_maxTorque","m_linearMass","m_angularMass","setMaxForce","getMaxForce","setMaxTorque","getMaxTorque","oldImpulse","maxImpulse","RevoluteJoint","lowerAngle","upperAngle","maxMotorTorque","motorSpeed","enableLimit","enableMotor","m_referenceAngle","referenceAngle","m_motorImpulse","m_lowerAngle","m_upperAngle","m_maxMotorTorque","m_motorSpeed","m_enableLimit","m_enableMotor","m_motorMass","m_limitState","getReferenceAngle","getJointAngle","getJointSpeed","isMotorEnabled","getMotorTorque","setMotorSpeed","getMotorSpeed","setMaxMotorTorque","getMaxMotorTorque","isLimitEnabled","getLowerLimit","getUpperLimit","setLimits","jointAngle","Cdot1","Cdot2","rhs","reduced","positionError","angularError","limitImpulse","PrismaticJoint","lowerTranslation","upperTranslation","maxMotorForce","axis","m_localXAxisA","localAxisA","m_localYAxisA","m_lowerTranslation","m_upperTranslation","m_maxMotorForce","m_perp","m_s1","m_s2","m_a1","m_a2","m_K","getLocalAxisA","getJointTranslation","setMaxMotorForce","getMaxMotorForce","getMotorForce","k13","k23","k33","jointTranslation","LA","LB","f1","df","f2r","C1","linearError","C2","impulse1","GearJoint","joint1","joint2","coordinateA","coordinateB","m_joint1","m_joint2","m_ratio","m_type1","m_type2","m_bodyC","xfC","aC","revolute","m_localAnchorC","m_referenceAngleA","m_localAxisC","prismatic","pC","m_bodyD","xfD","aD","m_localAnchorD","m_referenceAngleB","m_localAxisD","pD","m_constant","m_lcA","m_lcB","m_lcC","m_lcD","m_mA","m_mB","m_mC","m_mD","m_iA","m_iB","m_iC","m_iD","m_JvAC","m_JvBD","m_JwA","m_JwB","m_JwC","m_JwD","getJoint1","getJoint2","setRatio","getRatio","vC","wC","vD","qC","qD","rC","rD","JvAC","JvBD","JwA","JwB","JwC","JwD","cC","cD","MotorJoint","correctionFactor","m_linearOffset","linearOffset","m_angularOffset","angularOffset","m_correctionFactor","m_linearError","m_angularError","setCorrectionFactor","factor","getCorrectionFactor","setLinearOffset","getLinearOffset","setAngularOffset","getAngularOffset","inv_h","MouseJoint","m_targetA","m_beta","m_C","_localAnchorB","setTarget","getTarget","velocity","PulleyJoint","MIN_PULLEY_LENGTH","PulleyJointDef","groundA","groundB","m_groundAnchorA","groundAnchorA","m_groundAnchorB","groundAnchorB","m_lengthA","lengthA","m_lengthB","lengthB","m_uA","m_uB","getGroundAnchorA","getGroundAnchorB","getLengthA","getLengthB","getCurrentLengthA","getCurrentLengthB","ruA","ruB","PA","PB","uA","uB","RopeJoint","maxLength","m_maxLength","m_state","setMaxLength","getMaxLength","getLimitState","crA","crB","WeldJoint","invM","impulse2","WheelJoint","localAxis","m_springMass","m_springImpulse","m_ax","m_ay","m_sAx","m_sBx","m_sAy","m_sBy","setSpringFrequencyHz","getSpringFrequencyHz","setSpringDampingRatio","getSpringDampingRatio","ay","sAy","sBy","internal"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;mdAKe,WAASA,EAAOC,GACzBD,MAAAA,IACFA,EAAQ,QAGNE,EAASC,OAAOC,OAAO,GAAIJ,OAEzB,IAAIK,KAAOJ,EACXA,EAASK,eAAeD,SAA8B,IAAfL,EAAMK,KAC/CH,EAAOG,GAAOJ,EAASI,OAIiB,mBAAjCF,OAAOI,8BACZC,EAAUL,OAAOI,sBAAsBN,GAClCQ,EAAI,EAAGA,EAAID,EAAQE,OAAQD,IAAK,KACnCE,EAASH,EAAQC,GACjBR,EAASW,qBAAqBD,SAAiC,IAAfX,EAAMK,KACxDH,EAAOS,GAAUV,EAASU,WAKzBT,ECzBF,MAAc,aC0BjBW,EAASC,KACTC,EAAOZ,OAAOa,OAAOH,GCEzB,SAASI,EAAKC,EAAGC,QACTC,gBAAgBH,UACb,IAAIA,EAAKC,EAAGC,QAEJ,IAAND,QACJA,EAAI,OACJC,EAAI,GACa,WAAbE,EAAOH,SACXA,EAAIA,EAAEA,OACNC,EAAID,EAAEC,SAEND,EAAIA,OACJC,EAAIA,GDVbJ,EAAKO,QAAU,KAMfP,EAAKQ,SAAW,SAASL,SACF,iBAANA,GAAmBK,SAASL,KAAOM,MAAMN,IAG1DH,EAAKU,OAAS,SAASP,KAWvBH,EAAKW,QAAU,SAASR,UAEf,EAAIL,EAAOc,KAAKT,IAUzBH,EAAKa,eAAiB,SAASV,UAE7BA,GAAMA,GAAK,EACXA,GAAMA,GAAK,EACXA,GAAMA,GAAK,EACXA,GAAMA,GAAK,GACXA,GAAMA,GAAK,IACA,GAGbH,EAAKc,aAAe,SAASX,UACpBA,EAAI,GAAsB,IAAhBA,EAAKA,EAAI,IAG5BH,EAAKe,IAAM,SAASC,EAAKC,EAAKC,eACT,IAARD,GACTC,EAAM,EAAGD,EAAM,QACS,IAARC,IAChBA,EAAMD,EAAKA,EAAM,GAEfC,EAAMD,GACRD,GAAOA,EAAMC,IAAQC,EAAMD,KACbD,EAAM,EAAIE,EAAMD,IAE9BD,GAAOA,EAAME,IAAQD,EAAMC,KACbF,GAAO,EAAIC,EAAMC,IAInClB,EAAKmB,MAAQ,SAASH,EAAKC,EAAKC,UAC1BF,EAAMC,EACDA,EACED,EAAME,EACRA,EAEAF,GAIXhB,EAAKoB,OAAS,SAASH,EAAKC,eACP,IAARD,GACTC,EAAM,EACND,EAAM,QACkB,IAARC,IAChBA,EAAMD,EACNA,EAAM,GAEDA,GAAOC,EAAMD,EAAMnB,EAAOsB,UAAYF,EAAMD,GAAOA,GCjE5Df,EAAKmB,UAAUC,WAAa,iBACnB,CACLnB,EAAGE,KAAKF,EACRC,EAAGC,KAAKD,IAIZF,EAAKqB,aAAe,SAASC,OACvBC,EAAMrC,OAAOa,OAAOC,EAAKmB,kBAC7BI,EAAItB,EAAIqB,EAAKrB,EACbsB,EAAIrB,EAAIoB,EAAKpB,EACNqB,GAGTvB,EAAKwB,KAAO,eACND,EAAMrC,OAAOa,OAAOC,EAAKmB,kBAC7BI,EAAItB,EAAI,EACRsB,EAAIrB,EAAI,EACDqB,GAGTvB,EAAKyB,IAAM,SAASxB,EAAGC,OACjBqB,EAAMrC,OAAOa,OAAOC,EAAKmB,kBAC7BI,EAAItB,EAAIA,EACRsB,EAAIrB,EAAIA,EACDqB,GAGTvB,EAAK0B,MAAQ,SAASC,UAEb3B,EAAKyB,IAAIE,EAAE1B,EAAG0B,EAAEzB,IAGzBF,EAAKmB,UAAUS,SAAW,kBACjBC,KAAKC,UAAU3B,OAMxBH,EAAK+B,QAAU,SAASJ,UACfA,GAAK9B,EAAKS,SAASqB,EAAE1B,IAAMJ,EAAKS,SAASqB,EAAEzB,IAGpDF,EAAKQ,OAAS,SAASwB,KAQvBhC,EAAKmB,UAAUO,MAAQ,kBACd1B,EAAK0B,MAAMvB,OAQpBH,EAAKmB,UAAUc,QAAU,uBAClBhC,EAAI,OACJC,EAAI,EACFC,MAQTH,EAAKmB,UAAUe,IAAM,SAASjC,EAAGC,SACd,WAAbE,EAAOH,SAEJA,EAAIA,EAAEA,OACNC,EAAID,EAAEC,SAIND,EAAIA,OACJC,EAAIA,GAEJC,MAMTH,EAAKmB,UAAUgB,KAAO,SAASC,EAAGT,EAAGU,EAAGC,eACrB,IAAND,QAAkC,IAANC,EAC9BnC,KAAKoC,WAAWH,EAAGT,EAAGU,EAAGC,GAEzBnC,KAAKqC,OAAOJ,EAAGT,IAO1B3B,EAAKmB,UAAUoB,WAAa,SAASH,EAAGT,EAAGU,EAAGC,OAKxCrC,EAAImC,EAAIT,EAAE1B,EAAIoC,EAAIC,EAAErC,EACpBC,EAAIkC,EAAIT,EAAEzB,EAAImC,EAAIC,EAAEpC,cAGnBD,EAAIA,OACJC,EAAIA,EACFC,MAGTH,EAAKmB,UAAUqB,OAAS,SAASJ,EAAGT,OAG9B1B,EAAImC,EAAIT,EAAE1B,EACVC,EAAIkC,EAAIT,EAAEzB,cAETD,EAAIA,OACJC,EAAIA,EACFC,MAQTH,EAAKmB,UAAUsB,IAAM,SAASH,eAEvBrC,GAAKqC,EAAErC,OACPC,GAAKoC,EAAEpC,EACLC,MAMTH,EAAKmB,UAAUuB,KAAO,SAASN,EAAGT,EAAGU,EAAGC,eACrB,IAAND,QAAkC,IAANC,EAC9BnC,KAAKwC,WAAWP,EAAGT,EAAGU,EAAGC,GAEzBnC,KAAKyC,OAAOR,EAAGT,IAO1B3B,EAAKmB,UAAUwB,WAAa,SAASP,EAAGT,EAAGU,EAAGC,OAMxCrC,EAAImC,EAAIT,EAAE1B,EAAIoC,EAAIC,EAAErC,EACpBC,EAAIkC,EAAIT,EAAEzB,EAAImC,EAAIC,EAAEpC,cAGnBD,GAAKA,OACLC,GAAKA,EACHC,MAGTH,EAAKmB,UAAUyB,OAAS,SAASR,EAAGT,OAG9B1B,EAAImC,EAAIT,EAAE1B,EACVC,EAAIkC,EAAIT,EAAEzB,cAETD,GAAKA,OACLC,GAAKA,EACHC,MAMTH,EAAKmB,UAAU0B,KAAO,SAAST,EAAGT,EAAGU,EAAGC,eACrB,IAAND,QAAkC,IAANC,EAC9BnC,KAAK2C,WAAWV,EAAGT,EAAGU,EAAGC,GAEzBnC,KAAK4C,OAAOX,EAAGT,IAM1B3B,EAAKmB,UAAU2B,WAAa,SAASV,EAAGT,EAAGU,EAAGC,OAKxCrC,EAAImC,EAAIT,EAAE1B,EAAIoC,EAAIC,EAAErC,EACpBC,EAAIkC,EAAIT,EAAEzB,EAAImC,EAAIC,EAAEpC,cAGnBD,GAAKA,OACLC,GAAKA,EACHC,MAGTH,EAAKmB,UAAU4B,OAAS,SAASX,EAAGT,OAG9B1B,EAAImC,EAAIT,EAAE1B,EACVC,EAAIkC,EAAIT,EAAEzB,cAETD,GAAKA,OACLC,GAAKA,EACHC,MAQTH,EAAKmB,UAAU6B,IAAM,SAASV,eAEvBrC,GAAKqC,EAAErC,OACPC,GAAKoC,EAAEpC,EACLC,MAQTH,EAAKmB,UAAU8B,IAAM,SAASC,eAEvBjD,GAAKiD,OACLhD,GAAKgD,EACH/C,MAQTH,EAAKmB,UAAU1B,OAAS,kBACfO,EAAKmD,SAAShD,OAMvBH,EAAKmB,UAAUiC,cAAgB,kBACtBpD,EAAKoD,cAAcjD,OAQ5BH,EAAKmB,UAAUkC,UAAY,eACrB5D,EAASU,KAAKV,YACdA,EAASI,EAAKQ,eACT,MAELiD,EAAY,EAAM7D,cACjBQ,GAAKqD,OACLpD,GAAKoD,EACH7D,GAQTO,EAAKmD,SAAW,SAASxB,UAEhB9B,EAAKa,KAAKiB,EAAE1B,EAAI0B,EAAE1B,EAAI0B,EAAEzB,EAAIyB,EAAEzB,IAMvCF,EAAKoD,cAAgB,SAASzB,UAErBA,EAAE1B,EAAI0B,EAAE1B,EAAI0B,EAAEzB,EAAIyB,EAAEzB,GAG7BF,EAAKuD,SAAW,SAAS5B,EAAGW,OAGtBkB,EAAK7B,EAAE1B,EAAIqC,EAAErC,EAAGwD,EAAK9B,EAAEzB,EAAIoC,EAAEpC,SAC1BL,EAAKa,KAAK8C,EAAKA,EAAKC,EAAKA,IAGlCzD,EAAK0D,gBAAkB,SAAS/B,EAAGW,OAG7BkB,EAAK7B,EAAE1B,EAAIqC,EAAErC,EAAGwD,EAAK9B,EAAEzB,EAAIoC,EAAEpC,SAC1BsD,EAAKA,EAAKC,EAAKA,GAGxBzD,EAAK2D,SAAW,SAAShC,EAAGW,UAGnBX,GAAKW,GAAkB,WAAblC,EAAOkC,IAAwB,OAANA,GAAcX,EAAE1B,IAAMqC,EAAErC,GAAK0B,EAAEzB,IAAMoC,EAAEpC,GAMnFF,EAAK4D,KAAO,SAASjC,UAEZ3B,EAAKyB,KAAKE,EAAEzB,EAAGyB,EAAE1B,IAM1BD,EAAK6D,IAAM,SAASlC,EAAGW,UAGdX,EAAE1B,EAAIqC,EAAErC,EAAI0B,EAAEzB,EAAIoC,EAAEpC,GAS7BF,EAAK8D,MAAQ,SAASnC,EAAGW,SACN,iBAANA,EAGFtC,EAAKyB,IAAIa,EAAIX,EAAEzB,GAAIoC,EAAIX,EAAE1B,GAEV,iBAAN0B,EAGT3B,EAAKyB,KAAKE,EAAIW,EAAEpC,EAAGyB,EAAIW,EAAErC,GAKzB0B,EAAE1B,EAAIqC,EAAEpC,EAAIyB,EAAEzB,EAAIoC,EAAErC,GAO/BD,EAAK+D,SAAW,SAAS3B,EAAGT,EAAGW,SACZ,iBAANA,EAGFtC,EAAKyB,IAAIa,EAAIX,EAAEzB,EAAIkC,EAAEnC,GAAIqC,EAAIX,EAAE1B,EAAImC,EAAElC,GAEtB,iBAANyB,EAGT3B,EAAKyB,KAAKE,EAAIW,EAAEpC,EAAIkC,EAAEnC,EAAG0B,EAAIW,EAAErC,EAAImC,EAAElC,QAHvC,GASTF,EAAKyC,IAAM,SAASd,EAAGW,UAGdtC,EAAKyB,IAAIE,EAAE1B,EAAIqC,EAAErC,EAAG0B,EAAEzB,EAAIoC,EAAEpC,IAMrCF,EAAK0C,KAAO,SAASN,EAAGT,EAAGU,EAAGC,eACX,IAAND,QAAkC,IAANC,EAC9BtC,EAAKgE,QAAQ5B,EAAGT,EAAGU,EAAGC,GAEtBtC,EAAKiD,IAAIb,EAAGT,IAIvB3B,EAAKgE,QAAU,SAAS5B,EAAGT,EAAGU,EAAGC,UACxBtC,EAAKwB,OAAOe,WAAWH,EAAGT,EAAGU,EAAGC,IAGzCtC,EAAKgD,IAAM,SAASrB,EAAGW,UAGdtC,EAAKyB,IAAIE,EAAE1B,EAAIqC,EAAErC,EAAG0B,EAAEzB,EAAIoC,EAAEpC,IAGrCF,EAAKiD,IAAM,SAASb,EAAGC,SACJ,WAAbjC,EAAOgC,GAGFpC,EAAKyB,IAAIW,EAAEnC,EAAIoC,EAAGD,EAAElC,EAAImC,GAET,WAAbjC,EAAOiC,GAGTrC,EAAKyB,IAAIW,EAAIC,EAAEpC,EAAGmC,EAAIC,EAAEnC,QAH1B,GAOTF,EAAKmB,UAAU8C,IAAM,uBACdhE,GAAKE,KAAKF,OACVC,GAAKC,KAAKD,EACRC,MAGTH,EAAKiE,IAAM,SAAStC,UAEX3B,EAAKyB,KAAKE,EAAE1B,GAAI0B,EAAEzB,IAG3BF,EAAKkE,IAAM,SAASvC,UAEX3B,EAAKyB,IAAI5B,EAAKqE,IAAIvC,EAAE1B,GAAIJ,EAAKqE,IAAIvC,EAAEzB,KAG5CF,EAAKmE,IAAM,SAASxC,EAAGW,UAGdtC,EAAKyB,IAAkB,IAAbE,EAAE1B,EAAIqC,EAAErC,GAAwB,IAAb0B,EAAEzB,EAAIoC,EAAEpC,KAG9CF,EAAKoE,MAAQ,SAASzC,EAAGW,UAGhBtC,EAAKyB,IAAI5B,EAAKmB,IAAIW,EAAE1B,EAAGqC,EAAErC,GAAIJ,EAAKmB,IAAIW,EAAEzB,EAAGoC,EAAEpC,KAGtDF,EAAKqE,MAAQ,SAAS1C,EAAGW,UAGhBtC,EAAKyB,IAAI5B,EAAKkB,IAAIY,EAAE1B,EAAGqC,EAAErC,GAAIJ,EAAKkB,IAAIY,EAAEzB,EAAGoC,EAAEpC,KAGtDF,EAAKmB,UAAUF,MAAQ,SAASD,OAC1BsD,EAAYnE,KAAKF,EAAIE,KAAKF,EAAIE,KAAKD,EAAIC,KAAKD,KAC5CoE,EAAYtD,EAAMA,EAAK,KACrBsC,EAAYzD,EAAKY,QAAQ6D,QACxBrE,GAAKqD,EAAYtC,OACjBd,GAAKoD,EAAYtC,SAEjBb,MAGTH,EAAKiB,MAAQ,SAASU,EAAGX,UACvBW,EAAI3B,EAAKyB,IAAIE,EAAE1B,EAAG0B,EAAEzB,IAClBe,MAAMD,GACDW,GAMT3B,EAAKuE,QAAU,SAAUtE,EAAGC,UACnB,SAAUyB,UACR3B,EAAKyB,IAAIE,EAAE1B,EAAIA,EAAG0B,EAAEzB,EAAIA,KAOnCF,EAAKwE,YAAc,SAASvE,EAAGC,UACtB,SAAUyB,UACR3B,EAAKyB,IAAIE,EAAE1B,EAAIA,EAAG0B,EAAEzB,EAAIA,SC5e7BuE,EAAW,GCKjB,SAASC,EAAKL,EAAOD,QACbjE,gBAAgBuE,UACb,IAAIA,EAAKL,EAAOD,QAGpBO,WAAa3E,EAAKwB,YAClBoD,WAAa5E,EAAKwB,OAEF,WAAjBpB,EAAOiE,SACJM,WAAWzC,IAAImC,GAED,WAAjBjE,EAAOgE,QACJQ,WAAW1C,IAAIkC,GACM,WAAjBhE,EAAOiE,SACXO,WAAW1C,IAAImC,GCzBxB,SAASQ,EAAKC,OACRC,EAAQ,GACRC,EAAOF,EAAK9D,KAAOiE,EAAAA,EAEnBC,EAAYJ,EAAK/E,OACjBoF,EAASL,EAAKM,SACdC,EAAQP,EAAKQ,QACbC,EAAaT,EAAKU,QAElBC,EAAe,EACfC,EAAY,EACZC,EAAW,EACXC,EAAgB,OAEf5E,IAAM,SAAS6E,SACD,iBAANA,GACTb,EAAOa,EACA1F,MAEF6E,QAGJc,KAAO,kBACHf,EAAMtF,aAGV2F,SAAW,eACVW,SACAhB,EAAMtF,OAAS,EACjBsG,EAAOhB,EAAMiB,SAEbP,IAEEM,EADuB,mBAAdb,EACFA,IAEA,IAGXQ,IACsB,mBAAXP,GACTA,EAAOY,GAEFA,QAGJT,QAAU,SAASS,GAClBhB,EAAMtF,OAASuF,GACjBW,IACqB,mBAAVN,GACTA,EAAMU,GAERhB,EAAMkB,KAAKF,KAEXH,IAC0B,mBAAfL,IACTQ,EAAOR,EAAWQ,WAKnBnE,SAAW,iBACP,KAAO6D,EAAe,KAAOC,EAAY,KAAOC,EAAW,KAC5DC,EAAgB,KAAOb,EAAMtF,OAAS,IAAMuF,GC3CtD,SAASkB,EAASC,QACXA,GAAKA,OACLC,KAAO,IAAI1B,OACX2B,SAAW,UACXC,OAAS,UACTC,OAAS,UACTC,OAAS,UACTC,QAAU,OAEV7E,SAAW,kBACPzB,KAAKgG,GAAK,KAAOhG,KAAKkG,UAkBjC,SAASK,SACFC,OAAS,UACTC,QAAU,QACVC,cAAgB,OAEhBC,OAAS,IAAIjC,EAAK,CACrB9E,OAAS,kBACA,IAAImG,KHnCjBzB,EAASsC,kBAAoB,EAM7BtC,EAASuC,mBAAqB,GAM9BvC,EAASwC,cAAgB,GAOzBxC,EAASyC,eAAiB,EAM1BzC,EAAS0C,WAAa,KACtB1C,EAAS2C,kBAAoB3C,EAAS0C,WAAa1C,EAAS0C,WAM5D1C,EAAS4C,YAAe,EAAM,IAAQxH,KAAKyH,GAQ3C7C,EAAS8C,cAAiB,EAAM9C,EAAS0C,WAKzC1C,EAAS+C,YAAc,EAOvB/C,EAASgD,eAAiB,GAK1BhD,EAASiD,iBAAmB,GAK5BjD,EAASkD,qBAAuB,GAMhClD,EAASmD,kBAAoB,EAM7BnD,EAASoD,oBAAsB,GAM/BpD,EAASqD,qBAAwB,EAAM,IAAQjI,KAAKyH,GAMpD7C,EAASsD,eAAiB,EAC1BtD,EAASuD,sBAAyBvD,EAASsD,eAAiBtD,EAASsD,eAMrEtD,EAASwD,YAAe,GAAMpI,KAAKyH,GACnC7C,EAASyD,mBAAsBzD,EAASwD,YAAcxD,EAASwD,YAO/DxD,EAAS0D,UAAY,GACrB1D,EAAS2D,YAAc,IAOvB3D,EAAS4D,YAAc,GAKvB5D,EAAS6D,qBAAuB,IAEhC7D,EAAS8D,wBAA0B1I,KAAK2I,IAAI/D,EAAS6D,qBAAsB,GAK3E7D,EAASgE,sBAAyB,EAAM,IAAQ5I,KAAKyH,GAErD7C,EAASiE,yBAA2B7I,KAAK2I,IAAI/D,EAASgE,sBAAuB,GC9G7E/D,EAAKvD,UAAUY,QAAU,kBAChB2C,EAAK3C,QAAQ5B,OAGtBuE,EAAK3C,QAAU,SAASqE,OAClBuC,EAAI3I,EAAKgD,IAAIoD,EAAKxB,WAAYwB,EAAKzB,mBAC3BgE,EAAE1I,GAAK,GAAO0I,EAAEzI,GAAK,GAAOF,EAAK+B,QAAQqE,EAAKzB,aAAe3E,EAAK+B,QAAQqE,EAAKxB,aAI7FF,EAAKlE,OAAS,SAASwB,KAWvB0C,EAAKvD,UAAUyH,UAAY,kBAClB5I,EAAKyB,IAA8C,IAAzCtB,KAAKwE,WAAW1E,EAAIE,KAAKyE,WAAW3E,GAAoD,IAAzCE,KAAKwE,WAAWzE,EAAIC,KAAKyE,WAAW1E,KAMtGwE,EAAKvD,UAAU0H,WAAa,kBACnB7I,EAAKyB,IAA8C,IAAzCtB,KAAKyE,WAAW3E,EAAIE,KAAKwE,WAAW1E,GAAoD,IAAzCE,KAAKyE,WAAW1E,EAAIC,KAAKwE,WAAWzE,KAMtGwE,EAAKvD,UAAU2H,aAAe,kBACrB,GAAO3I,KAAKyE,WAAW3E,EAAIE,KAAKwE,WAAW1E,EAAIE,KAAKyE,WAAW1E,EAAIC,KAAKwE,WAAWzE,IAM5FwE,EAAKvD,UAAU6C,QAAU,SAAS5B,EAAGC,GACnCA,EAAIA,GAAKlC,SAEL4I,EAAS3G,EAAEuC,WACXqE,EAAS5G,EAAEwC,WACXqE,EAAS5G,EAAEsC,WACXuE,EAAS7G,EAAEuC,WAEXuE,EAAStJ,EAAKkB,IAAIgI,EAAO9I,EAAGgJ,EAAOhJ,GACnCmJ,EAASvJ,EAAKkB,IAAIgI,EAAO7I,EAAG+I,EAAO/I,GACnCmJ,EAASxJ,EAAKmB,IAAIkI,EAAOjJ,EAAG+I,EAAO/I,GACnCqJ,EAASzJ,EAAKmB,IAAIkI,EAAOhJ,EAAG8I,EAAO9I,QAElCyE,WAAWzC,IAAIiH,EAAQC,QACvBxE,WAAW1C,IAAImH,EAAQC,IAG9B5E,EAAKvD,UAAUoI,cAAgB,SAASnH,EAAGC,QACpCsC,WAAWzC,IAAIrC,EAAKkB,IAAIqB,EAAEnC,EAAGoC,EAAEpC,GAAIJ,EAAKkB,IAAIqB,EAAElC,EAAGmC,EAAEnC,SACnD0E,WAAW1C,IAAIrC,EAAKmB,IAAIoB,EAAEnC,EAAGoC,EAAEpC,GAAIJ,EAAKmB,IAAIoB,EAAElC,EAAGmC,EAAEnC,KAG1DwE,EAAKvD,UAAUe,IAAM,SAASkE,QACvBzB,WAAWzC,IAAIkE,EAAKzB,WAAW1E,EAAGmG,EAAKzB,WAAWzE,QAClD0E,WAAW1C,IAAIkE,EAAKxB,WAAW3E,EAAGmG,EAAKxB,WAAW1E,IAGzDwE,EAAKvD,UAAUqI,SAAW,SAASpD,OAC7BqD,GAAS,SAIbA,GADAA,GADAA,GADAA,EAASA,GAAUtJ,KAAKwE,WAAW1E,GAAKmG,EAAKzB,WAAW1E,IACrCE,KAAKwE,WAAWzE,GAAKkG,EAAKzB,WAAWzE,IACrCkG,EAAKxB,WAAW3E,GAAKE,KAAKyE,WAAW3E,IACrCmG,EAAKxB,WAAW1E,GAAKC,KAAKyE,WAAW1E,GAI1DwE,EAAKvD,UAAUuI,OAAS,SAASC,UAC/BjF,EAAKgF,OAAOvJ,KAAMwJ,GACXxJ,MAGTuE,EAAKgF,OAAS,SAAStD,EAAMuD,GAC3BvD,EAAKzB,WAAW1E,GAAK0J,EACrBvD,EAAKzB,WAAWzE,GAAKyJ,EACrBvD,EAAKxB,WAAW3E,GAAK0J,EACrBvD,EAAKxB,WAAW1E,GAAKyJ,GAGvBjF,EAAKkF,YAAc,SAASxH,EAAGC,OACzBwH,EAAMxH,EAAEsC,WAAW1E,EAAImC,EAAEwC,WAAW3E,EACpC6J,EAAM1H,EAAEuC,WAAW1E,EAAIoC,EAAEuC,WAAW3E,EAEpC8J,EAAM1H,EAAEsC,WAAWzE,EAAIkC,EAAEwC,WAAW1E,EACpC8J,EAAM5H,EAAEuC,WAAWzE,EAAImC,EAAEuC,WAAW1E,UAEpC2J,EAAM,GAAKE,EAAM,GAAKD,EAAM,GAAKE,EAAM,IAM7CtF,EAAKf,SAAW,SAASvB,EAAGC,UACnBrC,EAAK2D,SAASvB,EAAEuC,WAAYtC,EAAEsC,aAAe3E,EAAK2D,SAASvB,EAAEwC,WAAYvC,EAAEuC,aAGpFF,EAAKuF,KAAO,SAAS7H,EAAGC,OAClB6H,EAAKrK,EAAKmB,IAAI,EAAGnB,EAAKkB,IAAIqB,EAAEwC,WAAW3E,EAAGoC,EAAEuC,WAAW3E,GAAKJ,EAAKmB,IAAIqB,EAAEsC,WAAW1E,EAAGmC,EAAEuC,WAAW1E,IAClGkK,EAAKtK,EAAKmB,IAAI,EAAGnB,EAAKkB,IAAIqB,EAAEwC,WAAW1E,EAAGmC,EAAEuC,WAAW1E,GAAKL,EAAKmB,IAAIqB,EAAEsC,WAAWzE,EAAGkC,EAAEuC,WAAWzE,WAE7FkC,EAAEwC,WAAW3E,EAAImC,EAAEuC,WAAW1E,IAC9BmC,EAAEwC,WAAW1E,EAAIkC,EAAEuC,WAAWzE,IAE9BmC,EAAEuC,WAAW3E,EAAIoC,EAAEsC,WAAW1E,IAC9BoC,EAAEuC,WAAW1E,EAAImC,EAAEsC,WAAWzE,GAEZgK,EAAKC,GA4BlCzF,EAAKvD,UAAUiJ,QAAU,SAASnL,EAAQF,WAGpCsL,GAAQpF,EAAAA,EACRqF,EAAOrF,EAAAA,EAEPsF,EAAIxL,EAAMyL,GACV7B,EAAI3I,EAAKgD,IAAIjE,EAAM0L,GAAI1L,EAAMyL,IAC7BE,EAAO1K,EAAKkE,IAAIyE,GAEhBgC,EAAS3K,EAAKwB,OAEToJ,EAAI,IAAW,OAANA,EAAYA,EAAW,MAANA,EAAY,IAAM,QAC/CF,EAAKzK,EAAIJ,EAAKQ,YAEZkK,EAAEK,GAAKzK,KAAKwE,WAAWiG,IAAMzK,KAAKyE,WAAWgG,GAAKL,EAAEK,UAC/C,MAEJ,KACDC,EAAQ,EAAMlC,EAAEiC,GAChBE,GAAM3K,KAAKwE,WAAWiG,GAAKL,EAAEK,IAAMC,EACnCE,GAAM5K,KAAKyE,WAAWgG,GAAKL,EAAEK,IAAMC,EAGnCG,GAAK,KAELF,EAAKC,EAAI,KACPE,EAAOH,EACXA,EAAKC,EAAIA,EAAKE,EACdD,EAAI,KAIFF,EAAKT,IACPM,EAAO1I,UACP0I,EAAOC,GAAKI,EACZX,EAAOS,GAMLT,GAFJC,EAAOzK,EAAKkB,IAAIuJ,EAAMS,WAGb,UAOTV,EAAO,GAAOtL,EAAMmM,YAAcb,KAKtCpL,EAAOkM,SAAWd,EAClBpL,EAAO0L,OAASA,GACT,IAGTjG,EAAKvD,UAAUS,SAAW,kBACjBC,KAAKC,UAAU3B,OE7MxB+F,EAAS/E,UAAUiK,OAAS,kBACJ,MAAfjL,KAAKoG,QA8BdG,EAAYvF,UAAUkK,YAAc,SAASlF,UAChChG,KAAKyG,QAAQT,GAEZE,UAQdK,EAAYvF,UAAUmK,WAAa,SAASnF,UAC/BhG,KAAKyG,QAAQT,GAEZC,MAGdM,EAAYvF,UAAUoK,aAAe,eAC/BC,EAAOrL,KAAK2G,OAAO1B,kBACvBoG,EAAKrF,KAAOhG,KAAK0G,cACjB2E,EAAKnF,SAAW,KAChBmF,EAAKlF,OAAS,KACdkF,EAAKjF,OAAS,KACdiF,EAAKhF,OAAS,KACdgF,EAAK/E,QAAU,OACVG,QAAQ4E,EAAKrF,IAAMqF,EACjBA,GAGT9E,EAAYvF,UAAUsK,SAAW,SAASD,QACnC1E,OAAOxB,QAAQkG,GACpBA,EAAK/E,QAAU,SACRtG,KAAKyG,QAAQ4E,EAAKrF,KAS3BO,EAAYvF,UAAUuK,YAAc,SAAStF,EAAMC,OAG7CmF,EAAOrL,KAAKoL,sBAEhBC,EAAKpF,KAAKlE,IAAIkE,GAGd1B,EAAKgF,OAAO8B,EAAKpF,KAAM3B,EAASwC,eAEhCuE,EAAKnF,SAAWA,EAChBmF,EAAK/E,OAAS,OAETkF,WAAWH,GAETA,EAAKrF,IAMdO,EAAYvF,UAAUyK,aAAe,SAASzF,OACxCqF,EAAOrL,KAAKyG,QAAQT,QAKnB0F,WAAWL,QACXC,SAASD,IAchB9E,EAAYvF,UAAU2K,UAAY,SAAS3F,EAAIC,EAAMuC,OAI/C6C,EAAOrL,KAAKyG,QAAQT,UAKpBqF,EAAKpF,KAAKoD,SAASpD,UAIlByF,WAAWL,GAEhBA,EAAKpF,KAAKlE,IAAIkE,GAGdA,EAAOoF,EAAKpF,KACZ1B,EAAKgF,OAAOtD,EAAM3B,EAASwC,eAKvB0B,EAAE1I,EAAI,EACRmG,EAAKzB,WAAW1E,GAAK0I,EAAE1I,EAAIwE,EAASyC,eAEpCd,EAAKxB,WAAW3E,GAAK0I,EAAE1I,EAAIwE,EAASyC,eAGlCyB,EAAEzI,EAAI,EACRkG,EAAKzB,WAAWzE,GAAKyI,EAAEzI,EAAIuE,EAASyC,eAEpCd,EAAKxB,WAAW1E,GAAKyI,EAAEzI,EAAIuE,EAASyC,oBAGjCyE,WAAWH,IAET,IAGT9E,EAAYvF,UAAUwK,WAAa,SAASI,MAGvB,MAAf5L,KAAKwG,mBACFA,OAASoF,YACTpF,OAAOL,OAAS,cAKnB0F,EAAWD,EAAK3F,KAChB6F,EAAQ9L,KAAKwG,OACQ,GAAlBsF,EAAMb,UAAmB,KAC1B7E,EAAS0F,EAAM1F,OACfC,EAASyF,EAAMzF,OAEf0F,EAAOD,EAAM7F,KAAK0C,eAElBqD,EAAe,IAAIzH,EACvByH,EAAanI,QAAQiI,EAAM7F,KAAM4F,OAU7BI,EAcAC,EAvBAC,EAAeH,EAAarD,eAG5ByD,EAAO,EAAMD,EAGbE,EAAkB,GAAOF,EAAeJ,MAIxC3F,EAAO6E,SAAU,EACfhF,EAAO,IAAI1B,GACVV,QAAQgI,EAAUzF,EAAOH,MAC9BgG,EAAQhG,EAAK0C,eAAiB0D,MACzB,EACDpG,EAAO,IAAI1B,GACVV,QAAQgI,EAAUzF,EAAOH,UAC1BqG,EAAUlG,EAAOH,KAAK0C,eAE1BsD,EADchG,EAAK0C,eACA2D,EAAWD,KAK5BhG,EAAO4E,SAAU,EACfhF,EAAO,IAAI1B,GACVV,QAAQgI,EAAUxF,EAAOJ,MAC9BiG,EAAQjG,EAAK0C,eAAiB0D,MACzB,KACDpG,GAAAA,EAAO,IAAI1B,GACVV,QAAQgI,EAAUxF,EAAOJ,MAC1BqG,EAAUjG,EAAOJ,KAAK0C,eAE1BuD,EADcjG,EAAK0C,eACD2D,EAAUD,KAI1BD,EAAOH,GAASG,EAAOF,QAMzBJ,EADEG,EAAQC,EACF9F,EAEAC,MAIRkG,EAAUT,EAGVU,EAAYD,EAAQpG,OACpBsG,EAAYzM,KAAKoL,mBACrBqB,EAAUtG,OAASqG,EACnBC,EAAUvG,SAAW,KACrBuG,EAAUxG,KAAKpC,QAAQgI,EAAUU,EAAQtG,MACzCwG,EAAUnG,OAASiG,EAAQjG,OAAS,EAEnB,MAAbkG,GAEEA,EAAUpG,QAAUmG,EACtBC,EAAUpG,OAASqG,EAEnBD,EAAUnG,OAASoG,EAGrBA,EAAUrG,OAASmG,EACnBE,EAAUpG,OAASuF,EACnBW,EAAQpG,OAASsG,EACjBb,EAAKzF,OAASsG,IAGdA,EAAUrG,OAASmG,EACnBE,EAAUpG,OAASuF,EACnBW,EAAQpG,OAASsG,EACjBb,EAAKzF,OAASsG,OACTjG,OAASiG,GAIhBX,EAAQF,EAAKzF,OACG,MAAT2F,GAAe,CAGhB1F,GAFJ0F,EAAQ9L,KAAK0M,QAAQZ,IAEF1F,OACfC,EAASyF,EAAMzF,OAKnByF,EAAMxF,OAAS,EAAI5G,EAAKmB,IAAIuF,EAAOE,OAAQD,EAAOC,QAClDwF,EAAM7F,KAAKpC,QAAQuC,EAAOH,KAAMI,EAAOJ,MAEvC6F,EAAQA,EAAM3F,SAMlBI,EAAYvF,UAAU0K,WAAa,SAASE,MACtCA,GAAQ5L,KAAKwG,YAOb+F,EAFApG,EAASyF,EAAKzF,OACdwG,EAAcxG,EAAOA,UAGvBoG,EADEpG,EAAOC,QAAUwF,EACTzF,EAAOE,OAEPF,EAAOC,OAGA,MAAfuG,EAAqB,CAEnBA,EAAYvG,QAAUD,EACxBwG,EAAYvG,OAASmG,EAErBI,EAAYtG,OAASkG,EAEvBA,EAAQpG,OAASwG,OACZrB,SAASnF,WAGV2F,EAAQa,EACI,MAATb,GAAe,KAGhB1F,GAFJ0F,EAAQ9L,KAAK0M,QAAQZ,IAEF1F,OACfC,EAASyF,EAAMzF,OAEnByF,EAAM7F,KAAKpC,QAAQuC,EAAOH,KAAMI,EAAOJ,MACvC6F,EAAMxF,OAAS,EAAI5G,EAAKmB,IAAIuF,EAAOE,OAAQD,EAAOC,QAElDwF,EAAQA,EAAM3F,kBAGXK,OAAS+F,EACdA,EAAQpG,OAAS,UACZmF,SAASnF,aAvCTK,OAAS,MAiDlBD,EAAYvF,UAAU0L,QAAU,SAASE,OAGnCC,EAAID,KACJC,EAAE5B,UAAY4B,EAAEvG,OAAS,SACpBsG,MAGLE,EAAID,EAAEzG,OACN2G,EAAIF,EAAExG,OAENqG,EAAUK,EAAEzG,OAASwG,EAAExG,UAGvBoG,EAAU,EAAG,KACXM,EAAID,EAAE3G,OACN6G,EAAIF,EAAE1G,cAGV0G,EAAE3G,OAASyG,EACXE,EAAE5G,OAAS0G,EAAE1G,OACb0G,EAAE1G,OAAS4G,EAGK,MAAZA,EAAE5G,OACA4G,EAAE5G,OAAOC,QAAUwG,EACrBG,EAAE5G,OAAOC,OAAS2G,EAElBA,EAAE5G,OAAOE,OAAS0G,OAGfvG,OAASuG,EAIZC,EAAE1G,OAAS2G,EAAE3G,QACfyG,EAAE1G,OAAS2G,EACXH,EAAExG,OAAS4G,EACXA,EAAE9G,OAAS0G,EACXA,EAAE5G,KAAKpC,QAAQiJ,EAAE7G,KAAMgH,EAAEhH,MACzB8G,EAAE9G,KAAKpC,QAAQgJ,EAAE5G,KAAM+G,EAAE/G,MAEzB4G,EAAEvG,OAAS,EAAI5G,EAAKmB,IAAIiM,EAAExG,OAAQ2G,EAAE3G,QACpCyG,EAAEzG,OAAS,EAAI5G,EAAKmB,IAAIgM,EAAEvG,OAAQ0G,EAAE1G,UAEpCyG,EAAE1G,OAAS4G,EACXJ,EAAExG,OAAS2G,EACXA,EAAE7G,OAAS0G,EACXA,EAAE5G,KAAKpC,QAAQiJ,EAAE7G,KAAM+G,EAAE/G,MACzB8G,EAAE9G,KAAKpC,QAAQgJ,EAAE5G,KAAMgH,EAAEhH,MAEzB4G,EAAEvG,OAAS,EAAI5G,EAAKmB,IAAIiM,EAAExG,OAAQ0G,EAAE1G,QACpCyG,EAAEzG,OAAS,EAAI5G,EAAKmB,IAAIgM,EAAEvG,OAAQ2G,EAAE3G,SAG/ByG,KAILL,GAAW,EAAG,KACZQ,EAAIJ,EAAE1G,OACN+G,EAAIL,EAAEzG,cAGVyG,EAAE1G,OAASyG,EACXC,EAAE3G,OAAS0G,EAAE1G,OACb0G,EAAE1G,OAAS2G,EAGK,MAAZA,EAAE3G,OACA2G,EAAE3G,OAAOC,QAAUyG,EACrBC,EAAE3G,OAAOC,OAAS0G,EAElBA,EAAE3G,OAAOE,OAASyG,OAGftG,OAASsG,EAIZI,EAAE5G,OAAS6G,EAAE7G,QACfwG,EAAEzG,OAAS6G,EACXL,EAAEzG,OAAS+G,EACXA,EAAEhH,OAAS0G,EACXA,EAAE5G,KAAKpC,QAAQkJ,EAAE9G,KAAMkH,EAAElH,MACzB6G,EAAE7G,KAAKpC,QAAQgJ,EAAE5G,KAAMiH,EAAEjH,MAEzB4G,EAAEvG,OAAS,EAAI5G,EAAKmB,IAAIkM,EAAEzG,OAAQ6G,EAAE7G,QACpCwG,EAAExG,OAAS,EAAI5G,EAAKmB,IAAIgM,EAAEvG,OAAQ4G,EAAE5G,UAEpCwG,EAAEzG,OAAS8G,EACXN,EAAEzG,OAAS8G,EACXA,EAAE/G,OAAS0G,EACXA,EAAE5G,KAAKpC,QAAQkJ,EAAE9G,KAAMiH,EAAEjH,MACzB6G,EAAE7G,KAAKpC,QAAQgJ,EAAE5G,KAAMkH,EAAElH,MAEzB4G,EAAEvG,OAAS,EAAI5G,EAAKmB,IAAIkM,EAAEzG,OAAQ4G,EAAE5G,QACpCwG,EAAExG,OAAS,EAAI5G,EAAKmB,IAAIgM,EAAEvG,OAAQ6G,EAAE7G,SAG/BwG,SAGFD,GAOTtG,EAAYvF,UAAUoM,UAAY,kBACb,MAAfpN,KAAKwG,OACA,EAGFxG,KAAKwG,OAAOF,QAMrBC,EAAYvF,UAAUqM,aAAe,cAChB,MAAfrN,KAAKwG,cACA,UAOL6E,EAHAiC,EADOtN,KAAKwG,OACIP,KAAK0C,eAErB4E,EAAY,EACNC,EAAKC,EAAaxI,WAAWyI,SAAS1N,KAAKwG,QAC9C6E,EAAOmC,EAAGG,QACXtC,EAAK/E,OAAS,IAKlBiH,GAAalC,EAAKpF,KAAK0C,uBAGzB8E,EAAatI,QAAQqI,GAEdD,EAAYD,GAMrB/G,EAAYvF,UAAU4M,cAAgB,SAAS5H,OACzCqF,MAEFA,OADgB,IAAPrF,EACFhG,KAAKyG,QAAQT,GAEbhG,KAAKwG,QAKLyE,gBACA,MAGL4C,EAAU7N,KAAK4N,cAAcvC,EAAKjF,OAAOJ,IACzC8H,EAAU9N,KAAK4N,cAAcvC,EAAKhF,OAAOL,WACtC,EAAItG,EAAKmB,IAAIgN,EAASC,IAG/BvH,EAAYvF,UAAU+M,kBAAoB,SAAS1C,MACrC,MAARA,GAIQrL,KAAKwG,WAIbJ,EAASiF,EAAKjF,OACdC,EAASgF,EAAKhF,OAEdgF,EAAKJ,gBAaJ8C,kBAAkB3H,QAClB2H,kBAAkB1H,MAGzBE,EAAYvF,UAAUgN,gBAAkB,SAAS3C,MACnC,MAARA,OAIAjF,EAASiF,EAAKjF,OACdC,EAASgF,EAAKhF,WAEdgF,EAAKJ,cAUL4C,EAAUzH,EAAOE,OACjBwH,EAAUzH,EAAOC,OACJ5G,EAAKmB,IAAIgN,EAASC,IAGxB,IAAIvJ,GACVV,QAAQuC,EAAOH,KAAMI,EAAOJ,WAI5B+H,gBAAgB5H,QAChB4H,gBAAgB3H,MAIvBE,EAAYvF,UAAUiN,SAAW,gBAC1BF,kBAAkB/N,KAAKwG,aACvBwH,gBAAgBhO,KAAKwG,SAS5BD,EAAYvF,UAAUkN,cAAgB,mBAEhC7C,EADA8C,EAAa,EACPX,EAAKC,EAAaxI,WAAWyI,SAAS1N,KAAKwG,QAC9C6E,EAAOmC,EAAGG,aACXtC,EAAK/E,QAAU,QAMfoG,EAAUhN,EAAKqE,IAAIsH,EAAKhF,OAAOC,OAAS+E,EAAKjF,OAAOE,QACxD6H,EAAazO,EAAKmB,IAAIsN,EAAYzB,UAEpCe,EAAatI,QAAQqI,GAEdW,GAMT5H,EAAYvF,UAAUoN,gBAAkB,mBAKlC/C,EAJAgD,EAAQ,GACRC,EAAQ,EAGFd,EAAKC,EAAaxI,WAAWyI,SAAS1N,KAAKwG,QAC9C6E,EAAOmC,EAAGG,QACXtC,EAAK/E,OAAS,IAKd+E,EAAKJ,UACPI,EAAKlF,OAAS,KACdkI,EAAMC,GAASjD,IACbiD,QAEGhD,SAASD,QAGlBoC,EAAatI,QAAQqI,GAEdc,EAAQ,GAAG,SACZC,EAAUzJ,EAAAA,EACV0J,GAAQ,EAAGC,GAAQ,EACdpP,EAAI,EAAGA,EAAIiP,IAASjP,UACvBqP,EAAQL,EAAMhP,GAAG4G,KACZ0I,EAAItP,EAAI,EAAGsP,EAAIL,IAASK,EAAG,KAC9BC,EAAQP,EAAMM,GAAG1I,KACjB/D,EAAI,IAAIqC,EACZrC,EAAE2B,QAAQ6K,EAAOE,OACbxC,EAAOlK,EAAEyG,eACTyD,EAAOmC,IACTC,EAAOnP,EACPoP,EAAOE,EACPJ,EAAUnC,OAKZhG,EAASiI,EAAMG,GACfnI,EAASgI,EAAMI,GAEftI,EAASnG,KAAKoL,eAClBjF,EAAOC,OAASA,EAChBD,EAAOE,OAASA,EAChBF,EAAOG,OAAS,EAAI5G,EAAKmB,IAAIuF,EAAOE,OAAQD,EAAOC,QACnDH,EAAOF,KAAKpC,QAAQuC,EAAOH,KAAMI,EAAOJ,MACxCE,EAAOA,OAAS,KAEhBC,EAAOD,OAASA,EAChBE,EAAOF,OAASA,EAEhBkI,EAAMI,GAAQJ,EAAMC,EAAQ,GAC5BD,EAAMG,GAAQrI,IACZmI,OAGC9H,OAAS6H,EAAM,QAEfJ,YASP1H,EAAYvF,UAAU6N,YAAc,SAASC,WAEvCzD,EAAMmC,EAAKC,EAAaxI,WAAWyI,SAAS1N,KAAKwG,QAC9C6E,EAAOmC,EAAGG,QAAQ,KACnB1H,EAAOoF,EAAKpF,KAChBA,EAAKzB,WAAW1E,GAAKgP,EAAUhP,EAC/BmG,EAAKzB,WAAWzE,GAAK+O,EAAU/O,EAC/BkG,EAAKxB,WAAW3E,GAAKgP,EAAUhP,EAC/BmG,EAAKxB,WAAW1E,GAAK+O,EAAU/O,EAEjC0N,EAAatI,QAAQqI,IAevBjH,EAAYvF,UAAU+N,MAAQ,SAAS9I,EAAM+I,OAEvCC,EAAQC,EAAUjK,eAEtBgK,EAAMnJ,KAAK9F,KAAKwG,QACTyI,EAAM3P,OAAS,GAAG,KACnB+L,EAAO4D,EAAME,SACL,MAAR9D,KAIA9G,EAAKkF,YAAY4B,EAAKpF,KAAMA,MAC1BoF,EAAKJ,aAEQ,GADD+D,EAAc3D,EAAKrF,gBAKjCiJ,EAAMnJ,KAAKuF,EAAKjF,QAChB6I,EAAMnJ,KAAKuF,EAAKhF,QAKtB6I,EAAU/J,QAAQ8J,IAepB1I,EAAYvF,UAAUiJ,QAAU,SAASrL,EAAOwQ,OAE1C/E,EAAKzL,EAAMyL,GACXC,EAAK1L,EAAM0L,GACX+E,EAAIxP,EAAKgD,IAAIyH,EAAID,GAErBgF,EAAEnM,gBAGE1B,EAAI3B,EAAK8D,MAAM,EAAK0L,GACpBC,EAAQzP,EAAKkE,IAAIvC,GAKjBuJ,EAAcnM,EAAMmM,YAGpBwE,EAAc,IAAIhL,EAClBiL,EAAI3P,EAAKgE,QAAS,EAAIkH,EAAcV,EAAIU,EAAaT,GACzDiF,EAAYnG,cAAciB,EAAImF,OAE1BP,EAAQC,EAAUjK,WAClBwK,EAAWC,EAAUzK,eAEzBgK,EAAMnJ,KAAK9F,KAAKwG,QACTyI,EAAM3P,OAAS,GAAG,KACnB+L,EAAO4D,EAAME,SACL,MAAR9D,GAI4C,GAA5C9G,EAAKkF,YAAY4B,EAAKpF,KAAMsJ,QAM5BI,EAAItE,EAAKpF,KAAKwC,YACdmH,EAAIvE,EAAKpF,KAAKyC,kBACDhJ,EAAKqE,IAAIlE,EAAK6D,IAAIlC,EAAG3B,EAAKgD,IAAIwH,EAAIsF,KAC7C9P,EAAK6D,IAAI4L,EAAOM,GACL,MAIbvE,EAAKJ,SAAU,CACjBwE,EAASpF,GAAKxK,EAAK0B,MAAM3C,EAAMyL,IAC/BoF,EAASnF,GAAKzK,EAAK0B,MAAM3C,EAAM0L,IAC/BmF,EAAS1E,YAAcA,MAEnBvB,EAAQ4F,EAAgBK,EAAUpE,EAAKrF,OAE9B,GAATwD,SAKAA,EAAQ,IAEVuB,EAAcvB,EACdgG,EAAI3P,EAAKgE,QAAS,EAAIkH,EAAcV,EAAIU,EAAaT,GACrDiF,EAAYnG,cAAciB,EAAImF,SAGhCP,EAAMnJ,KAAKuF,EAAKjF,QAChB6I,EAAMnJ,KAAKuF,EAAKhF,SAIpB6I,EAAU/J,QAAQ8J,GAClBS,EAAUvK,QAAQsK,IAGpB,IAAIC,EAAY,IAAIhL,EAAK,CACvB9E,OAAS,iBACA,IAETuF,QAAU,SAAS8J,OAIjBC,EAAY,IAAIxK,EAAK,CACvB9E,OAAS,iBACA,IAETuF,QAAU,SAAS8J,GACjBA,EAAM3P,OAAS,KAIfmO,EAAe,IAAI/I,EAAK,CAC1B9E,OAAS,kBACA,IAAIiQ,GAEb1K,QAAU,SAAS2K,GACjBA,EAASC,WAIb,SAASF,QACHG,EAAU,GACVC,EAAS,SACN,CACLvC,SAAW,SAASwC,UAClBF,EAAQ1Q,OAAS,EACjB0Q,EAAQlK,KAAKoK,GACbD,EAAO3Q,OAAS,EAChB2Q,EAAOnK,KAAK,GACL9F,MAET2N,KAAO,gBACEqC,EAAQ1Q,OAAS,GAAG,KACrBD,EAAI2Q,EAAQ1Q,OAAS,EACrB+L,EAAO2E,EAAQ3Q,MACD,IAAd4Q,EAAO5Q,UACT4Q,EAAO5Q,GAAK,EACLgM,KAES,IAAd4E,EAAO5Q,KACT4Q,EAAO5Q,GAAK,EACRgM,EAAKjF,eACP4J,EAAQlK,KAAKuF,EAAKjF,QAClB6J,EAAOnK,KAAK,GACLuF,EAAKjF,UAGE,IAAd6J,EAAO5Q,KACT4Q,EAAO5Q,GAAK,EACRgM,EAAKhF,eACP2J,EAAQlK,KAAKuF,EAAKhF,QAClB4J,EAAOnK,KAAK,GACLuF,EAAKhF,OAGhB2J,EAAQb,MACRc,EAAOd,QAGXY,MAAQ,WACNC,EAAQ1Q,OAAS,IC72BvB,SAAS6Q,SACFC,OAAS,IAAI7J,OACb8J,aAAe,OACfC,aAAe,QACftB,cAAgBhP,KAAKgP,cAAcuB,KAAKvQ,MCL/C,SAASwQ,EAAIC,QACLzQ,gBAAgBwQ,UACb,IAAIA,EAAIC,GAEI,iBAAVA,OACJC,SAASD,GACY,WAAjBxQ,EAAOwQ,QACT1O,IAAI0O,QAENE,cCJT,SAASC,EAAUC,EAAUC,QACrB9Q,gBAAgB4Q,UACb,IAAIA,EAAUC,EAAUC,QAE5B1G,EAAIvK,EAAKwB,YACT0P,EAAIP,EAAIQ,gBACW,IAAbH,QACJzG,EAAErI,IAAI8O,QAEW,IAAbC,QACJC,EAAEhP,IAAI+O,GCNf,SAASG,EAAMtB,EAAG1N,QAGXiP,YAAcrR,EAAKwB,YACnBsO,EAAI9P,EAAKwB,YACTY,EAAI,OACJkP,OAAS,OACTC,GAAKvR,EAAKwB,YACVgQ,GAAK,ECpBZ,SAASC,SACF9P,EAAI3B,EAAKwB,YACTc,EAAI,ECDX,SAASoP,SACF5B,EAAI9P,EAAKwB,YACTY,EAAI,ECFX,SAASuP,SACFC,YACAC,SNWPvB,EAAWnP,UAAUkK,YAAc,SAASyG,UACnC3R,KAAKoQ,OAAOlF,YAAYyG,IAMjCxB,EAAWnP,UAAUyI,YAAc,SAASmI,EAAUC,OAChDC,EAAQ9R,KAAKoQ,OAAOjF,WAAWyG,GAC/BG,EAAQ/R,KAAKoQ,OAAOjF,WAAW0G,UAC5BtN,EAAKkF,YAAYqI,EAAOC,IAMjC5B,EAAWnP,UAAUmK,WAAa,SAASwG,UAClC3R,KAAKoQ,OAAOjF,WAAWwG,IAMhCxB,EAAWnP,UAAUgR,cAAgB,kBAC5BhS,KAAKqQ,cAMdF,EAAWnP,UAAUiR,cAAgB,kBAC5BjS,KAAKoQ,OAAOhD,aAMrB+C,EAAWnP,UAAUkR,eAAiB,kBAC7BlS,KAAKoQ,OAAOlC,iBAMrBiC,EAAWnP,UAAUmR,eAAiB,kBAC7BnS,KAAKoQ,OAAO/C,gBAOrB8C,EAAWnP,UAAU+N,MAAQ,SAAS9I,EAAM+I,QACrCoB,OAAOrB,MAAM9I,EAAM+I,IAe1BmB,EAAWnP,UAAUiJ,QAAU,SAASrL,EAAOwQ,QACxCgB,OAAOnG,QAAQrL,EAAOwQ,IAS7Be,EAAWnP,UAAU6N,YAAc,SAASC,QACrCsB,OAAOvB,YAAYC,IAO1BqB,EAAWnP,UAAUuK,YAAc,SAAStF,EAAMC,OAE5CyL,EAAU3R,KAAKoQ,OAAO7E,YAAYtF,EAAMC,eACvCmK,oBACA+B,WAAWT,GACTA,GAMTxB,EAAWnP,UAAUyK,aAAe,SAASkG,QACtCU,aAAaV,QACbtB,oBACAD,OAAO3E,aAAakG,IAO3BxB,EAAWnP,UAAU2K,UAAY,SAASgG,EAAS1L,EAAMqM,GAEzCtS,KAAKoQ,OAAOzE,UAAUgG,EAAS1L,EAAMqM,SAE5CF,WAAWT,IAQpBxB,EAAWnP,UAAUuR,WAAa,SAASZ,QACpCS,WAAWT,IAGlBxB,EAAWnP,UAAUoR,WAAa,SAAST,QACpCrB,aAAaxK,KAAK6L,IAGzBxB,EAAWnP,UAAUqR,aAAe,SAASV,OACtC,IAAItS,EAAI,EAAGA,EAAIW,KAAKsQ,aAAahR,SAAUD,EAC1CW,KAAKsQ,aAAajR,IAAMsS,SACrBrB,aAAajR,GAAK,OAgB7B8Q,EAAWnP,UAAUwR,YAAc,SAASC,YAErCC,WAAaD,EAGXzS,KAAKsQ,aAAahR,OAAS,WAC3BqT,eAAiB3S,KAAKsQ,aAAanB,MACZ,OAAxBnP,KAAK2S,oBAMLC,EAAU5S,KAAKoQ,OAAOjF,WAAWnL,KAAK2S,qBAGrCvC,OAAOrB,MAAM6D,EAAS5S,KAAKgP,iBAOpCmB,EAAWnP,UAAUgO,cAAgB,SAAS2C,MAExCA,GAAW3R,KAAK2S,sBACX,MAGLf,EAAWlS,EAAKkB,IAAI+Q,EAAS3R,KAAK2S,gBAClCd,EAAWnS,EAAKmB,IAAI8Q,EAAS3R,KAAK2S,gBAIlCE,EAAY7S,KAAKoQ,OAAOlF,YAAY0G,GACpCkB,EAAY9S,KAAKoQ,OAAOlF,YAAY2G,eAGnCa,WAAWG,EAAWC,IAEpB,GCxLTtC,EAAIlP,IAAM,SAASmP,OACbrP,EAAMrC,OAAOa,OAAO4Q,EAAIxP,kBAC5BI,EAAIsP,SAASD,GACNrP,GAGToP,EAAIjP,MAAQ,SAASwR,OAEf3R,EAAMrC,OAAOa,OAAO4Q,EAAIxP,kBAC5BI,EAAIyJ,EAAIkI,EAAIlI,EACZzJ,EAAIuO,EAAIoD,EAAIpD,EACLvO,GAGToP,EAAIQ,SAAW,eACT5P,EAAMrC,OAAOa,OAAO4Q,EAAIxP,kBAC5BI,EAAIyJ,EAAI,EACRzJ,EAAIuO,EAAI,EACDvO,GAGToP,EAAI5O,QAAU,SAASC,UACdA,GAAKnC,EAAKS,SAAS0B,EAAEgJ,IAAMnL,EAAKS,SAAS0B,EAAE8N,IAGpDa,EAAInQ,OAAS,SAASwB,KAWtB2O,EAAIxP,UAAU2P,YAAc,gBACrB9F,EAAI,OACJ8E,EAAI,GAGXa,EAAIxP,UAAUe,IAAM,SAAS0O,GACN,WAAjBxQ,EAAOwQ,SAEJ5F,EAAI4F,EAAM5F,OACV8E,EAAIc,EAAMd,SAKV9E,EAAInL,EAAKsT,IAAIvC,QACbd,EAAIjQ,EAAKuT,IAAIxC,KAOtBD,EAAIxP,UAAU0P,SAAW,SAASD,QAG3B5F,EAAInL,EAAKsT,IAAIvC,QACbd,EAAIjQ,EAAKuT,IAAIxC,IAMpBD,EAAIxP,UAAUkS,SAAW,kBAChBxT,EAAKyT,MAAMnT,KAAK6K,EAAG7K,KAAK2P,IAMjCa,EAAIxP,UAAUoS,SAAW,kBAChBvT,EAAKyB,IAAItB,KAAK2P,EAAG3P,KAAK6K,IAM/B2F,EAAIxP,UAAUqS,SAAW,kBAChBxT,EAAKyB,KAAKtB,KAAK6K,EAAG7K,KAAK2P,IAYhCa,EAAI1N,IAAM,SAASiQ,EAAKhQ,MAElB,MAAOA,GAAK,MAAOA,EAAG,KAMpBuQ,EAAK9C,EAAIQ,kBACbsC,EAAGzI,EAAIkI,EAAIlI,EAAI9H,EAAE4M,EAAIoD,EAAIpD,EAAI5M,EAAE8H,EAC/ByI,EAAG3D,EAAIoD,EAAIpD,EAAI5M,EAAE4M,EAAIoD,EAAIlI,EAAI9H,EAAE8H,EACxByI,EAEF,GAAI,MAAOvQ,GAAK,MAAOA,SAErBlD,EAAKyB,IAAIyR,EAAIpD,EAAI5M,EAAEjD,EAAIiT,EAAIlI,EAAI9H,EAAEhD,EAAGgT,EAAIlI,EAAI9H,EAAEjD,EAAIiT,EAAIpD,EAAI5M,EAAEhD,IAIvEyQ,EAAI+C,OAAS,SAASR,EAAKhQ,OAOrBuQ,EAAK9C,EAAIQ,kBACbsC,EAAGzI,EAAIkI,EAAIlI,EAAI9H,EAAE4M,EAAIoD,EAAIpD,EAAI5M,EAAE8H,EAC/ByI,EAAG3D,EAAIoD,EAAIpD,EAAI5M,EAAE4M,EAAIoD,EAAIlI,EAAI9H,EAAE8H,EACxByI,GAGT9C,EAAIgD,QAAU,SAAST,EAAKhQ,UAGnBlD,EAAKyB,IAAIyR,EAAIpD,EAAI5M,EAAEjD,EAAIiT,EAAIlI,EAAI9H,EAAEhD,EAAGgT,EAAIlI,EAAI9H,EAAEjD,EAAIiT,EAAIpD,EAAI5M,EAAEhD,IAGrEyQ,EAAIiD,OAAS,SAASV,EAAKvR,EAAGW,OACxBrC,EAAIiT,EAAIpD,GAAKnO,EAAE1B,EAAIqC,EAAErC,GAAKiT,EAAIlI,GAAKrJ,EAAEzB,EAAIoC,EAAEpC,GAC3CA,EAAIgT,EAAIlI,GAAKrJ,EAAE1B,EAAIqC,EAAErC,GAAKiT,EAAIpD,GAAKnO,EAAEzB,EAAIoC,EAAEpC,UACxCF,EAAKyB,IAAIxB,EAAGC,IAYrByQ,EAAIkD,KAAO,SAASX,EAAKhQ,MACnB,MAAOA,GAAK,MAAOA,EAAG,KAMpBuQ,EAAK9C,EAAIQ,kBACbsC,EAAGzI,EAAIkI,EAAIpD,EAAI5M,EAAE8H,EAAIkI,EAAIlI,EAAI9H,EAAE4M,EAC/B2D,EAAG3D,EAAIoD,EAAIpD,EAAI5M,EAAE4M,EAAIoD,EAAIlI,EAAI9H,EAAE8H,EACxByI,EAEF,GAAI,MAAOvQ,GAAK,MAAOA,SAErBlD,EAAKyB,IAAIyR,EAAIpD,EAAI5M,EAAEjD,EAAIiT,EAAIlI,EAAI9H,EAAEhD,GAAIgT,EAAIlI,EAAI9H,EAAEjD,EAAIiT,EAAIpD,EAAI5M,EAAEhD,IAIxEyQ,EAAImD,QAAU,SAASZ,EAAKhQ,OAMtBuQ,EAAK9C,EAAIQ,kBACbsC,EAAGzI,EAAIkI,EAAIpD,EAAI5M,EAAE8H,EAAIkI,EAAIlI,EAAI9H,EAAE4M,EAC/B2D,EAAG3D,EAAIoD,EAAIpD,EAAI5M,EAAE4M,EAAIoD,EAAIlI,EAAI9H,EAAE8H,EACxByI,GAGT9C,EAAIoD,SAAW,SAASb,EAAKhQ,UAEpBlD,EAAKyB,IAAIyR,EAAIpD,EAAI5M,EAAEjD,EAAIiT,EAAIlI,EAAI9H,EAAEhD,GAAIgT,EAAIlI,EAAI9H,EAAEjD,EAAIiT,EAAIpD,EAAI5M,EAAEhD,IC9KtE6Q,EAAUrP,MAAQ,SAASsS,OACrBzS,EAAMrC,OAAOa,OAAOgR,EAAU5P,kBAClCI,EAAIgJ,EAAIvK,EAAK0B,MAAMsS,EAAGzJ,GACtBhJ,EAAI2P,EAAIP,EAAIjP,MAAMsS,EAAG9C,GACd3P,GAGTwP,EAAUtP,IAAM,SAASuP,EAAUC,OAC7B1P,EAAMrC,OAAOa,OAAOgR,EAAU5P,kBAClCI,EAAIgJ,EAAIvK,EAAK0B,MAAMsP,GACnBzP,EAAI2P,EAAIP,EAAIjP,MAAMuP,GACX1P,GAGTwP,EAAUI,SAAW,eACf5P,EAAMrC,OAAOa,OAAOgR,EAAU5P,kBAClCI,EAAIgJ,EAAIvK,EAAKwB,OACbD,EAAI2P,EAAIP,EAAIQ,WACL5P,GAMTwP,EAAU5P,UAAU2P,YAAc,gBAC3BvG,EAAEtI,eACFiP,EAAEJ,eAMTC,EAAU5P,UAAUe,IAAM,SAASE,EAAGC,QACnB,IAANA,QACJkI,EAAErI,IAAIE,EAAEmI,QACR2G,EAAEhP,IAAIE,EAAE8O,UAER3G,EAAErI,IAAIE,QACN8O,EAAEhP,IAAIG,KAIf0O,EAAUhP,QAAU,SAASC,UACpBA,GAAKhC,EAAK+B,QAAQC,EAAEuI,IAAMoG,EAAI5O,QAAQC,EAAEkP,IAGjDH,EAAUvQ,OAAS,SAASwB,KAiB5B+O,EAAU9N,IAAM,SAASb,EAAGC,MAEtB4R,MAAMC,QAAQ7R,GAAI,SAChB8R,EAAM,GACD3U,EAAI,EAAGA,EAAI6C,EAAE5C,OAAQD,IAC5B2U,EAAI3U,GAAKuR,EAAU9N,IAAIb,EAAGC,EAAE7C,WAEvB2U,EAEF,GAAI,MAAO9R,GAAK,MAAOA,EAAG,KAE3BpC,EAAKmC,EAAE8O,EAAEpB,EAAIzN,EAAEpC,EAAImC,EAAE8O,EAAElG,EAAI3I,EAAEnC,EAAKkC,EAAEmI,EAAEtK,EACtCC,EAAKkC,EAAE8O,EAAElG,EAAI3I,EAAEpC,EAAImC,EAAE8O,EAAEpB,EAAIzN,EAAEnC,EAAKkC,EAAEmI,EAAErK,SACnCF,EAAKyB,IAAIxB,EAAGC,GAEd,GAAI,MAAOmC,GAAK,MAAOA,EAAG,KAI3B2R,EAAKjD,EAAUI,kBACnB6C,EAAG9C,EAAIP,EAAI+C,OAAOtR,EAAE8O,EAAG7O,EAAE6O,GACzB8C,EAAGzJ,EAAIvK,EAAKyC,IAAIkO,EAAIgD,QAAQvR,EAAE8O,EAAG7O,EAAEkI,GAAInI,EAAEmI,GAClCyJ,IAOXjD,EAAUqD,OAAS,SAAShS,EAAGC,WAEzB8R,EAAM,GACD3U,EAAI,EAAGA,EAAI6C,EAAE5C,OAAQD,IAC5B2U,EAAI3U,GAAKuR,EAAU9N,IAAIb,EAAGC,EAAE7C,WAEvB2U,GAMTpD,EAAUsD,MAAQ,SAASjS,UAElB,SAASC,UACP0O,EAAU9N,IAAIb,EAAGC,KAI5B0O,EAAU4C,QAAU,SAASvR,EAAGC,OAG1BpC,EAAKmC,EAAE8O,EAAEpB,EAAIzN,EAAEpC,EAAImC,EAAE8O,EAAElG,EAAI3I,EAAEnC,EAAKkC,EAAEmI,EAAEtK,EACtCC,EAAKkC,EAAE8O,EAAElG,EAAI3I,EAAEpC,EAAImC,EAAE8O,EAAEpB,EAAIzN,EAAEnC,EAAKkC,EAAEmI,EAAErK,SACnCF,EAAKyB,IAAIxB,EAAGC,IAGrB6Q,EAAUuD,MAAQ,SAASlS,EAAGC,OAKxB2R,EAAKjD,EAAUI,kBACnB6C,EAAG9C,EAAIP,EAAI+C,OAAOtR,EAAE8O,EAAG7O,EAAE6O,GACzB8C,EAAGzJ,EAAIvK,EAAKyC,IAAIkO,EAAIgD,QAAQvR,EAAE8O,EAAG7O,EAAEkI,GAAInI,EAAEmI,GAClCyJ,GAYTjD,EAAU8C,KAAO,SAASzR,EAAGC,MAEvB,MAAOA,GAAK,MAAOA,EAAG,KAEpBkS,EAAKlS,EAAEpC,EAAImC,EAAEmI,EAAEtK,EACfuU,EAAKnS,EAAEnC,EAAIkC,EAAEmI,EAAErK,EACfD,EAAKmC,EAAE8O,EAAEpB,EAAIyE,EAAKnS,EAAE8O,EAAElG,EAAIwJ,EAC1BtU,GAAMkC,EAAE8O,EAAElG,EAAIuJ,EAAKnS,EAAE8O,EAAEpB,EAAI0E,SACxBxU,EAAKyB,IAAIxB,EAAGC,GAEd,GAAI,MAAOmC,GAAK,MAAOA,EAAG,KAI3B2R,EAAKjD,EAAUI,kBACnB6C,EAAG9C,EAAEhP,IAAIyO,EAAImD,QAAQ1R,EAAE8O,EAAG7O,EAAE6O,IAC5B8C,EAAGzJ,EAAErI,IAAIyO,EAAIoD,SAAS3R,EAAE8O,EAAGlR,EAAKgD,IAAIX,EAAEkI,EAAGnI,EAAEmI,KACpCyJ,IAIXjD,EAAUgD,SAAW,SAAS3R,EAAGC,OAG3BkS,EAAKlS,EAAEpC,EAAImC,EAAEmI,EAAEtK,EACfuU,EAAKnS,EAAEnC,EAAIkC,EAAEmI,EAAErK,EACfD,EAAKmC,EAAE8O,EAAEpB,EAAIyE,EAAKnS,EAAE8O,EAAElG,EAAIwJ,EAC1BtU,GAAMkC,EAAE8O,EAAElG,EAAIuJ,EAAKnS,EAAE8O,EAAEpB,EAAI0E,SACxBxU,EAAKyB,IAAIxB,EAAGC,IAGrB6Q,EAAU0D,OAAS,SAASrS,EAAGC,OAKzB2R,EAAKjD,EAAUI,kBACnB6C,EAAG9C,EAAEhP,IAAIyO,EAAImD,QAAQ1R,EAAE8O,EAAG7O,EAAE6O,IAC5B8C,EAAGzJ,EAAErI,IAAIyO,EAAIoD,SAAS3R,EAAE8O,EAAGlR,EAAKgD,IAAIX,EAAEkI,EAAGnI,EAAEmI,KACpCyJ,GCjLT5C,EAAMjQ,UAAUuT,aAAe,SAASV,OAClClE,EAAIiB,EAAU4C,QAAQK,EAAI7T,KAAKkR,kBAC9BvB,EAAE5N,IAAI4N,QACNyB,GAAGrP,IAAI4N,QAEP1N,EAAI4R,EAAG9C,EAAEmC,gBACT7B,GAAKwC,EAAG9C,EAAEmC,YAGjBjC,EAAMjQ,UAAUwT,eAAiB,SAAStD,EAAa2C,QAChD3C,YAAYnP,IAAImP,OAEjBvB,EAAIiB,EAAU4C,QAAQK,EAAI7T,KAAKkR,kBAC9BvB,EAAE5N,IAAI4N,QACNyB,GAAGrP,IAAI4N,IASdsB,EAAMjQ,UAAUyT,aAAe,SAASZ,EAAIa,GAC1CA,OAAuB,IAATA,EAAuB,EAAIA,EACzCb,EAAG9C,EAAEL,UAAU,EAAMgE,GAAQ1U,KAAKqR,GAAKqD,EAAO1U,KAAKiC,GACnD4R,EAAGzJ,EAAEhI,WAAY,EAAMsS,EAAO1U,KAAKoR,GAAIsD,EAAM1U,KAAK2P,GAGlDkE,EAAGzJ,EAAEvH,IAAI2N,EAAIgD,QAAQK,EAAG9C,EAAG/Q,KAAKkR,eAQlCD,EAAMjQ,UAAU2T,QAAU,SAASC,OAE7BF,GAAQE,EAAQ5U,KAAKmR,SAAW,EAAMnR,KAAKmR,aAC1CC,GAAGhP,WAAWsS,EAAM1U,KAAK2P,EAAG,EAAI+E,EAAM1U,KAAKoR,SAC3CC,GAAKqD,EAAO1U,KAAKiC,GAAK,EAAIyS,GAAQ1U,KAAKqR,QACvCF,OAASyD,GAGhB3D,EAAMjQ,UAAU6T,QAAU,gBACnBxD,GAAKrR,KAAKiC,OACVmP,GAAGrP,IAAI/B,KAAK2P,IAMnBsB,EAAMjQ,UAAUkC,UAAY,eACtBmO,EAAK3R,EAAKgB,IAAIV,KAAKqR,IAAK3R,EAAKyH,IAAKzH,EAAKyH,SACtClF,GAAKjC,KAAKqR,GAAKA,OACfA,GAAKA,GAGZJ,EAAMjQ,UAAUO,MAAQ,eAClBA,EAAQ,IAAI0P,SAChB1P,EAAM2P,YAAYnP,IAAI/B,KAAKkR,aAC3B3P,EAAM4P,OAASnR,KAAKmR,OACpB5P,EAAM8P,GAAKrR,KAAKqR,GAChB9P,EAAMU,EAAIjC,KAAKiC,EACfV,EAAM6P,GAAGrP,IAAI/B,KAAKoR,IAClB7P,EAAMoO,EAAE5N,IAAI/B,KAAK2P,GACVpO,GAGT0P,EAAMjQ,UAAUe,IAAM,SAAS+S,QACxB5D,YAAYnP,IAAI+S,EAAK5D,kBACrBC,OAAS2D,EAAK3D,YACdE,GAAKyD,EAAKzD,QACVpP,EAAI6S,EAAK7S,OACTmP,GAAGrP,IAAI+S,EAAK1D,SACZzB,EAAE5N,IAAI+S,EAAKnF,IE7FlB4B,EAASvQ,UAAUyT,aAAe,SAASZ,EAAIzJ,UAC7CyJ,EAAG9C,EAAEhP,IAAI/B,KAAKiC,GACd4R,EAAGzJ,EAAErI,IAAIlC,EAAKgD,IAAI7C,KAAK2P,EAAGa,EAAIgD,QAAQK,EAAG9C,EAAG3G,KACrCyJ,GCHTrC,EAAMxQ,UAAU+T,OAAS,aAGzBvD,EAAMxQ,UAAUC,WAAa,iBACpB,IAGTuQ,EAAMwD,MAAQ,GAEdxD,EAAMtQ,aAAe,SAASC,EAAM8T,EAASC,OACvCC,EAAQ3D,EAAMwD,MAAM7T,EAAKiU,aACtBD,GAASD,EAAQC,EAAOhU,IAGjCqQ,EAAM5P,QAAU,SAASyT,WACdA,GAGX7D,EAAMxQ,UAAUsU,UAAY,kBACnBtV,KAAK0R,UASdF,EAAMxQ,UAAUuU,QAAU,kBACjBvV,KAAKyR,QAQdD,EAAMxQ,UAAUwU,OAAS,aAMzBhE,EAAMxQ,UAAUyU,cAAgB,aAUhCjE,EAAMxQ,UAAU0U,UAAY,SAAS7B,EAAIzJ,KAWzCoH,EAAMxQ,UAAUiJ,QAAU,SAASnL,EAAQF,EAAO+W,EAAWC,KAW7DpE,EAAMxQ,UAAU6U,YAAc,SAAS5P,EAAM4N,EAAI+B,KAUjDpE,EAAMxQ,UAAU8U,YAAc,SAASC,EAAUC,KAMjDxE,EAAMxQ,UAAUiV,qBAAuB,SAASC,KCzEhD,IAAIC,EAAa,CACfjQ,SAAW,KACXkQ,SAAW,GACXC,YAAc,EACdL,QAAU,EACVM,UAAW,EAEXC,iBAAmB,EACnBC,mBAAqB,EACrBC,eAAiB,OAMnB,SAASC,EAAaC,EAASf,QACxB3P,KAAO,IAAI1B,OACXoS,QAAUA,OACVf,WAAaA,OACbjE,QAaP,SAASiF,EAAQC,EAAMxB,EAAOyB,GACxBzB,EAAMA,OACRyB,EAAMzB,EACNA,EAAQA,EAAMA,OAEU,iBAARyB,IAChBA,EAAM,CAACd,QAAUc,IAGnBA,EAAMC,EAAQD,EAAKX,QAEda,OAASH,OAETI,WAAaH,EAAIV,cACjBc,cAAgBJ,EAAIT,iBACpBc,UAAYL,EAAId,aAChBoB,WAAaN,EAAIR,cAEjBe,mBAAqBP,EAAIP,sBACzBe,qBAAuBR,EAAIN,wBAC3Be,iBAAmBT,EAAIL,oBAGvBe,QAAUnC,OAEVoC,OAAS,UAETC,UAAY,QACZrH,aAAe,UAEhBsH,EAAa3X,KAAKwX,QAAQ/B,gBACrBpW,EAAI,EAAGA,EAAIsY,IAActY,OAC3BqY,UAAUrY,GAAK,IAAIqX,EAAa1W,KAAMX,QAGxCuY,WAAad,EAAI5Q,SAOxB0Q,EAAQ5V,UAAU+T,OAAS,eACrB8B,EAAO7W,KAAK6X,UACZC,EAAajB,EAAKkB,QAAQC,kBACzBC,eAAeH,GAChB9X,KAAKwX,QAAQzC,aACVyC,QAAQzC,iBAEX4C,EAAa3X,KAAKwX,QAAQ/B,gBACrBpW,EAAI,EAAGA,EAAIsY,IAActY,OAC3BqY,UAAUrY,GAAK,IAAIqX,EAAa1W,KAAMX,QAExC6Y,cAAcJ,EAAYjB,EAAKsB,MACpCtB,EAAKuB,iBAGPxB,EAAQ5V,UAAUC,WAAa,iBACtB,CACLmV,SAAUpW,KAAKiX,WACfZ,YAAarW,KAAKkX,cAClBlB,QAAShW,KAAKmX,UACdb,SAAUtW,KAAKoX,WAEfb,iBAAkBvW,KAAKqX,mBACvBb,mBAAoBxW,KAAKsX,qBACzBb,eAAgBzW,KAAKuX,iBAErBlC,MAAOrV,KAAKwX,UAIhBZ,EAAQ1V,aAAe,SAASC,EAAM0V,EAAM3B,OACtCG,EAAQH,EAAQ1D,EAAOrQ,EAAKkU,cAClBA,GAAS,IAAIuB,EAAQC,EAAMxB,EAAOlU,IAQlDyV,EAAQ5V,UAAUuU,QAAU,kBACnBvV,KAAKwX,QAAQjC,WAQtBqB,EAAQ5V,UAAUqX,SAAW,kBACpBrY,KAAKwX,SAMdZ,EAAQ5V,UAAUsV,SAAW,kBACpBtW,KAAKoX,YAMdR,EAAQ5V,UAAUsX,UAAY,SAASC,GACjCA,GAAUvY,KAAKoX,kBACZJ,OAAOwB,UAAS,QAChBpB,WAAamB,IAetB3B,EAAQ5V,UAAUkK,YAAc,kBACvBlL,KAAK4X,YAMdhB,EAAQ5V,UAAUyX,YAAc,SAAStX,QAClCyW,WAAazW,GAOpByV,EAAQ5V,UAAU6W,QAAU,kBACnB7X,KAAKgX,QAMdJ,EAAQ5V,UAAU0X,QAAU,kBACnB1Y,KAAKyX,QAMdb,EAAQ5V,UAAU2X,WAAa,kBACtB3Y,KAAKmX,WAOdP,EAAQ5V,UAAU4X,WAAa,SAAS5C,QAEjCmB,UAAYnB,GAMnBY,EAAQ5V,UAAU6X,YAAc,kBACvB7Y,KAAKiX,YAOdL,EAAQ5V,UAAU8X,YAAc,SAAS1C,QAClCa,WAAab,GAMpBQ,EAAQ5V,UAAU+X,eAAiB,kBAC1B/Y,KAAKkX,eAOdN,EAAQ5V,UAAUgY,eAAiB,SAAS3C,QACrCa,cAAgBb,GAMvBO,EAAQ5V,UAAU0U,UAAY,SAAStL,UAC9BpK,KAAKwX,QAAQ9B,UAAU1V,KAAKgX,OAAOvC,eAAgBrK,IAM5DwM,EAAQ5V,UAAUiJ,QAAU,SAASnL,EAAQF,EAAOgX,UAC3C5V,KAAKwX,QAAQvN,QAAQnL,EAAQF,EAAOoB,KAAKgX,OAAOvC,eAAgBmB,IAQzEgB,EAAQ5V,UAAUiY,YAAc,SAASlD,QAClCyB,QAAQ1B,YAAYC,EAAU/V,KAAKmX,YAO1CP,EAAQ5V,UAAUkY,QAAU,SAAStD,UAE5B5V,KAAK0X,UAAU9B,GAAY3P,MAMpC2Q,EAAQ5V,UAAUkX,cAAgB,SAASJ,EAAYjE,QAIhDxD,aAAerQ,KAAKwX,QAAQ/B,oBAE5B,IAAIpW,EAAI,EAAGA,EAAIW,KAAKqQ,eAAgBhR,EAAG,KACtC6W,EAAQlW,KAAK0X,UAAUrY,QACtBmY,QAAQ3B,YAAYK,EAAMjQ,KAAM4N,EAAIxU,GACzC6W,EAAMvE,QAAUmG,EAAWvM,YAAY2K,EAAMjQ,KAAMiQ,KAIvDU,EAAQ5V,UAAUiX,eAAiB,SAASH,OAErC,IAAIzY,EAAI,EAAGA,EAAIW,KAAKqQ,eAAgBhR,EAAG,KACtC6W,EAAQlW,KAAK0X,UAAUrY,GAC3ByY,EAAWrM,aAAayK,EAAMvE,SAC9BuE,EAAMvE,QAAU,UAGbtB,aAAe,GAOtBuG,EAAQ5V,UAAUmY,YAAc,SAASrB,EAAYsB,EAAKC,OACnD,IAAIha,EAAI,EAAGA,EAAIW,KAAKqQ,eAAgBhR,EAAG,KACtC6W,EAAQlW,KAAK0X,UAAUrY,GAGvBia,EAAQ,IAAI/U,EACZgV,EAAQ,IAAIhV,OACXiT,QAAQ3B,YAAYyD,EAAOF,EAAKlD,EAAMN,iBACtC4B,QAAQ3B,YAAY0D,EAAOF,EAAKnD,EAAMN,YAE3CM,EAAMjQ,KAAKpC,QAAQyV,EAAOC,OAEtBjH,EAAezS,EAAKgD,IAAIwW,EAAIjP,EAAGgP,EAAIhP,GAEvC0N,EAAWnM,UAAUuK,EAAMvE,QAASuE,EAAMjQ,KAAMqM,KASpDsE,EAAQ5V,UAAUwY,cAAgB,SAASC,QACpCpC,mBAAqBoC,EAAOC,gBAC5BpC,qBAAuBmC,EAAOE,kBAC9BpC,iBAAmBkC,EAAOG,cAC1BC,YAGPjD,EAAQ5V,UAAU8Y,oBAAsB,kBAC/B9Z,KAAKqX,oBAGdT,EAAQ5V,UAAU+Y,oBAAsB,SAASL,UACxC1Z,KAAKqX,mBAAqBqC,GAGnC9C,EAAQ5V,UAAUgZ,sBAAwB,kBACjCha,KAAKsX,sBAGdV,EAAQ5V,UAAUiZ,sBAAwB,SAASN,QAC5CrC,qBAAuBqC,GAG9B/C,EAAQ5V,UAAUkZ,kBAAoB,kBAC7Bla,KAAKuX,kBAGdX,EAAQ5V,UAAUmZ,kBAAoB,SAASP,QACxCrC,iBAAmBqC,GAO1BhD,EAAQ5V,UAAU6Y,SAAW,cACR,MAAf7Z,KAAKgX,gBAKLoD,EAAOpa,KAAKgX,OAAOqD,iBAChBD,GAAM,KACPE,EAAUF,EAAKE,QACfC,EAAWD,EAAQE,cACnBC,EAAWH,EAAQI,cACnBH,GAAYva,MAAQya,GAAYza,MAClCsa,EAAQK,mBAGVP,EAAOA,EAAKzM,SAGViN,EAAQ5a,KAAKgX,OAAO6D,cAEX,MAATD,UAKA9C,EAAa8C,EAAM5C,aACd3Y,EAAI,EAAGA,EAAIW,KAAKqQ,eAAgBhR,EACvCyY,EAAWvF,WAAWvS,KAAK0X,UAAUrY,GAAGsS,WAgB5CiF,EAAQ5V,UAAU8Z,cAAgB,SAAShG,MAErCA,EAAKuC,qBAAuBrX,KAAKqX,oBAAkD,IAA5BvC,EAAKuC,0BACvDvC,EAAKuC,mBAAqB,MAG/B0D,EAAmE,IAAvDjG,EAAKyC,iBAAmBvX,KAAKsX,sBACzC0D,EAAmE,IAAvDlG,EAAKwC,qBAAuBtX,KAAKuX,yBACnCwD,GAAYC,GC/Z5B,IAAIC,EAAaC,EAAKC,OAAS,SAC3BC,EAAgBF,EAAKG,UAAY,YACjCC,EAAcJ,EAAKK,QAAU,UA0C7BC,EAAU,CACZpG,KAAO6F,EACPpK,SAAWhR,EAAKwB,OAChBoP,MAAQ,EAERgL,eAAiB5b,EAAKwB,OACtBqa,gBAAkB,EAElBC,cAAgB,EAChBC,eAAiB,EAEjBC,eAAgB,EAChBC,QAAS,EACTC,aAAe,EAEfC,YAAa,EACbC,OAAQ,EACRC,QAAS,EAEThW,SAAW,MAWb,SAASgV,EAAKN,EAAO9D,GAEnBA,EAAMC,EAAQD,EAAK0E,QASdzD,QAAU6C,OAEVuB,YAAcrF,EAAImF,WAClBG,gBAAkBtF,EAAIkF,gBACtBK,aAAevF,EAAIgF,YACnBQ,oBAAsBxF,EAAI+E,mBAC1BU,aAAezF,EAAIoF,YAEnBM,cAAe,OACfC,WAAY,OAEZ7E,WAAad,EAAI5Q,cACjBuL,OAASqF,EAAI1B,KAEdpV,KAAKyR,QAAU6J,QACZoB,OAAS,OACTC,UAAY,SAEZD,OAAS,OACTC,UAAY,QAIdC,IAAM,OACNC,OAAS,OAGT1E,KAAOvH,EAAUI,gBACjBmH,KAAK/N,EAAIvK,EAAK0B,MAAMuV,EAAIjG,eACxBsH,KAAKpH,EAAEL,SAASoG,EAAIrG,YAGpBqM,QAAU,IAAI7L,OACd6L,QAAQvI,aAAavU,KAAKmY,WAG1B4E,WAAa,IAAIzL,OACjB0L,WAAa,IAAIzL,OAEjB0L,QAAUpd,EAAKwB,YACf6b,SAAW,OAEXC,iBAAmBtd,EAAK0B,MAAMuV,EAAI2E,qBAClC2B,kBAAoBtG,EAAI4E,qBAExB2B,gBAAkBvG,EAAI6E,mBACtB2B,iBAAmBxG,EAAI8E,oBACvB2B,eAAiBzG,EAAIiF,kBAErByB,YAAc,OAEdC,YAAc,UACdC,cAAgB,UAChBC,cAAgB,UAEhBC,OAAS,UACTnG,OAAS,UAEToG,aAAc,EA0erB,SAASC,SACFC,KAAO,OACPC,OAASne,EAAKwB,YACd4c,EAAI,ECnoBX,SAASC,EAAMjc,EAAGC,EAAGyN,EAAGnH,GACL,WAAbvI,EAAOgC,IAAwB,OAANA,QACtBkc,GAAKte,EAAK0B,MAAMU,QAChBmc,GAAKve,EAAK0B,MAAMW,IACC,iBAAND,QACXkc,GAAKte,EAAKyB,IAAIW,EAAG0N,QACjByO,GAAKve,EAAKyB,IAAIY,EAAGsG,UAEjB2V,GAAKte,EAAKwB,YACV+c,GAAKve,EAAKwB,QC6BnB,SAASgd,SACFjJ,UACAkJ,YAAcze,EAAKwB,YACnBkd,WAAa1e,EAAKwB,YAClBmd,OAAS,CAAE,IAAIC,EAAiB,IAAIA,QACpCC,WAAa,EAqBpB,SAASD,SACFF,WAAa1e,EAAKwB,YAClBsd,cAAgB,OAChBC,eAAiB,OACjB5Y,GAAK,IAAI6Y,EAUhB,SAASA,SACFC,GAAK,IAAIC,EAwBhB,SAASA,SACFC,YACAC,YACAC,WACAC,MAiBP,SAASC,SACF5U,YACAgU,OAAS,QACTa,YAAc,GF0BrBnE,EAAKla,UAAUC,WAAa,mBACtBqe,EAAW,GACN7U,EAAIzK,KAAK2d,cAAelT,EAAGA,EAAIA,EAAEgN,OACxC6H,EAASxZ,KAAK2E,SAET,CACL2K,KAAMpV,KAAKyR,OACXqK,OAAQ9b,KAAKqc,aACbxL,SAAU7Q,KAAKmY,KAAK/N,EACpBqG,MAAOzQ,KAAKmY,KAAKpH,EAAEmC,WACnBuI,eAAgBzb,KAAKmd,iBACrBzB,gBAAiB1b,KAAKod,kBACtBkC,SAAUA,IAIdpE,EAAKha,aAAe,SAASC,EAAMyZ,EAAO1F,OACpC2B,EAAO,IAAIqE,EAAKN,EAAOzZ,MAEvBA,EAAKme,aACF,IAAIjgB,EAAI8B,EAAKme,SAAShgB,OAAS,EAAGD,GAAK,EAAGA,IAAK,KAC9CsX,EAAUzB,EAAQ0B,EAASzV,EAAKme,SAASjgB,GAAIwX,GACjDA,EAAK0I,YAAY5I,UAGdE,GAGTqE,EAAKla,UAAUwe,cAAgB,oBACtBxf,KAAK+X,UAAW/X,KAAK+X,QAAQ0H,aAGtCvE,EAAKla,UAAU6Z,SAAW,kBACjB7a,KAAK+X,SAGdmD,EAAKla,UAAU0X,QAAU,kBAChB1Y,KAAKyX,QAGdyD,EAAKla,UAAUyX,YAAc,SAAStX,QAC/ByW,WAAazW,GAGpB+Z,EAAKla,UAAUkK,YAAc,kBACpBlL,KAAK4X,YAGdsD,EAAKla,UAAU0e,eAAiB,kBACvB1f,KAAK2d,eAGdzC,EAAKla,UAAU2e,aAAe,kBACrB3f,KAAKyd,aAOdvC,EAAKla,UAAUqZ,eAAiB,kBACvBra,KAAK0d,eAGdxC,EAAKla,UAAU4e,SAAW,kBACjB5f,KAAKyR,QAAUwJ,GAGxBC,EAAKla,UAAU6e,UAAY,kBAClB7f,KAAKyR,QAAU6J,GAGxBJ,EAAKla,UAAU8e,YAAc,kBACpB9f,KAAKyR,QAAU2J,GAMxBF,EAAKla,UAAU+e,UAAY,uBACpBC,QAAQ/E,GACNjb,MAGTkb,EAAKla,UAAUif,WAAa,uBACrBD,QAAQ1E,GACNtb,MAGTkb,EAAKla,UAAUkf,aAAe,uBACvBF,QAAQ5E,GACNpb,MAMTkb,EAAKla,UAAUuU,QAAU,kBAChBvV,KAAKyR,QAOdyJ,EAAKla,UAAUgf,QAAU,SAAS5K,MAIJ,GAAxBpV,KAAKwf,iBAILxf,KAAKyR,QAAU2D,QAId3D,OAAS2D,OAETgD,gBAEDpY,KAAKyR,QAAUwJ,SACZkC,iBAAiBrb,eACjBsb,kBAAoB,OACpBN,QAAQjI,eACRsL,4BAGF3H,UAAS,QAETyE,QAAQnb,eACRob,SAAW,UAGZkD,EAAKpgB,KAAK0d,cACP0C,GAAI,KACLC,EAAMD,EACVA,EAAKA,EAAGzS,UACHoK,QAAQuI,eAAeD,EAAI/F,cAE7BoD,cAAgB,aAGjB5F,EAAa9X,KAAK+X,QAAQC,aACrBvN,EAAIzK,KAAK2d,cAAelT,EAAGA,EAAIA,EAAEgN,eACpC8I,EAAa9V,EAAE4F,aACVhR,EAAI,EAAGA,EAAIkhB,IAAclhB,EAChCyY,EAAWvF,WAAW9H,EAAEiN,UAAUrY,GAAGsS,WAK3CuJ,EAAKla,UAAUwf,SAAW,kBACjBxgB,KAAKqc,cAMdnB,EAAKla,UAAUyf,UAAY,SAASC,QAC7BrE,eAAiBqE,GAGxBxF,EAAKla,UAAU2f,kBAAoB,kBAC1B3gB,KAAKoc,iBAGdlB,EAAKla,UAAU4f,mBAAqB,SAASF,QACtCtE,kBAAoBsE,EACG,GAAxB1gB,KAAKoc,sBACF5D,UAAS,IAIlB0C,EAAKla,UAAU6f,QAAU,kBAChB7gB,KAAKmc,aAQdjB,EAAKla,UAAUwX,SAAW,SAASkI,GAC7BA,EACsB,GAApB1gB,KAAKmc,mBACFA,aAAc,OACdqB,YAAc,SAGhBrB,aAAc,OACdqB,YAAc,OACdL,iBAAiBrb,eACjBsb,kBAAoB,OACpBH,QAAQnb,eACRob,SAAW,IAIpBhC,EAAKla,UAAU8f,SAAW,kBACjB9gB,KAAKuc,cAgBdrB,EAAKla,UAAU+f,UAAY,SAASL,MAG9BA,GAAQ1gB,KAAKuc,qBAIZA,eAAiBmE,EAElB1gB,KAAKuc,qBAEHzE,EAAa9X,KAAK+X,QAAQC,aACrBvN,EAAIzK,KAAK2d,cAAelT,EAAGA,EAAIA,EAAEgN,OACxChN,EAAEyN,cAAcJ,EAAY9X,KAAKmY,UAI9B,KAEDL,EAAa9X,KAAK+X,QAAQC,aACrBvN,EAAIzK,KAAK2d,cAAelT,EAAGA,EAAIA,EAAEgN,OACxChN,EAAEwN,eAAeH,WAIfsI,EAAKpgB,KAAK0d,cACP0C,GAAI,KACLC,EAAMD,EACVA,EAAKA,EAAGzS,UACHoK,QAAQuI,eAAeD,EAAI/F,cAE7BoD,cAAgB,OAIzBxC,EAAKla,UAAUggB,gBAAkB,kBACxBhhB,KAAKsc,qBAMdpB,EAAKla,UAAUigB,iBAAmB,SAASP,GACrC1gB,KAAKsc,qBAAuBoE,SAI3BpE,sBAAwBoE,OAExBtD,kBAAoB,OAEpBhF,kBAMP8C,EAAKla,UAAUyT,aAAe,kBACrBzU,KAAKmY,MAWd+C,EAAKla,UAAUuT,aAAe,SAAS1D,EAAUJ,MAEnB,GAAxBzQ,KAAKwf,sBAIJrH,KAAKpW,IAAI8O,EAAUJ,QACnBqM,QAAQvI,aAAavU,KAAKmY,cAE3BL,EAAa9X,KAAK+X,QAAQC,aACrBvN,EAAIzK,KAAK2d,cAAelT,EAAGA,EAAIA,EAAEgN,OACxChN,EAAE0O,YAAYrB,EAAY9X,KAAKmY,KAAMnY,KAAKmY,QAI9C+C,EAAKla,UAAUkgB,qBAAuB,gBAC/BpE,QAAQrI,aAAazU,KAAKmY,KAAM,IAMvC+C,EAAKla,UAAUmf,oBAAsB,eAC/BtM,EAAKjD,EAAUI,gBAEd8L,QAAQrI,aAAaZ,EAAI,WAE1BiE,EAAa9X,KAAK+X,QAAQC,aACrBvN,EAAIzK,KAAK2d,cAAelT,EAAGA,EAAIA,EAAEgN,OACxChN,EAAE0O,YAAYrB,EAAYjE,EAAI7T,KAAKmY,OAOvC+C,EAAKla,UAAU2T,QAAU,SAASC,QAE3BkI,QAAQnI,QAAQC,QAChBkI,QAAQnN,EAAE5N,IAAI/B,KAAK8c,QAAQ1L,SAC3B0L,QAAQ7a,EAAIjC,KAAK8c,QAAQzL,QACzByL,QAAQrI,aAAazU,KAAKmY,KAAM,IAMvC+C,EAAKla,UAAUmgB,YAAc,kBACpBnhB,KAAKmY,KAAK/N,GAGnB8Q,EAAKla,UAAUogB,YAAc,SAAShX,QAC/BmK,aAAanK,EAAGpK,KAAK8c,QAAQ7a,IAMpCiZ,EAAKla,UAAUkS,SAAW,kBACjBlT,KAAK8c,QAAQ7a,GAGtBiZ,EAAKla,UAAU0P,SAAW,SAASD,QAC5B8D,aAAavU,KAAKmY,KAAK/N,EAAGqG,IAMjCyK,EAAKla,UAAUqgB,eAAiB,kBACvBrhB,KAAK8c,QAAQnN,GAMtBuL,EAAKla,UAAUsgB,eAAiB,kBACvBthB,KAAK8c,QAAQ5L,aAQtBgK,EAAKla,UAAUugB,kBAAoB,kBAC1BvhB,KAAKmd,kBAQdjC,EAAKla,UAAUwgB,gCAAkC,SAASC,OACpDvQ,EAAcrR,EAAKgD,IAAI4e,EAAYzhB,KAAK8c,QAAQnN,UAC7C9P,EAAKyC,IAAItC,KAAKmd,iBAAkBtd,EAAK8D,MAAM3D,KAAKod,kBACnDlM,KAQNgK,EAAKla,UAAU0gB,gCAAkC,SAASnD,UACjDve,KAAKwhB,gCAAgCxhB,KAAK2hB,cAAcpD,KAQjErD,EAAKla,UAAU4gB,kBAAoB,SAASpgB,GACtCxB,KAAKyR,QAAUwJ,IAGfpb,EAAK6D,IAAIlC,EAAGA,GAAK,QACdgX,UAAS,QAEX2E,iBAAiBpb,IAAIP,KAQ5B0Z,EAAKla,UAAU6gB,mBAAqB,kBAC3B7hB,KAAKod,mBAQdlC,EAAKla,UAAU8gB,mBAAqB,SAAS3f,GACvCnC,KAAKyR,QAAUwJ,IAGf9Y,EAAIA,EAAI,QACLqW,UAAS,QAEX4E,kBAAoBjb,IAG3B+Y,EAAKla,UAAU+gB,iBAAmB,kBACzB/hB,KAAKqd,iBAGdnC,EAAKla,UAAUghB,iBAAmB,SAASrG,QACpC0B,gBAAkB1B,GAGzBT,EAAKla,UAAUihB,kBAAoB,kBAC1BjiB,KAAKsd,kBAGdpC,EAAKla,UAAUkhB,kBAAoB,SAAStG,QACrC0B,iBAAmB1B,GAG1BV,EAAKla,UAAUmhB,gBAAkB,kBACxBniB,KAAKud,gBAMdrC,EAAKla,UAAUohB,gBAAkB,SAASC,QACnC9E,eAAiB8E,GAQxBnH,EAAKla,UAAUshB,QAAU,kBAChBtiB,KAAK0c,QAQdxB,EAAKla,UAAUuhB,WAAa,kBACnBviB,KAAK4c,IAAM5c,KAAK0c,OACjB7c,EAAK6D,IAAI1D,KAAK8c,QAAQ5L,YAAalR,KAAK8c,QAAQ5L,cAoBxDgK,EAAKla,UAAUiY,YAAc,SAAS9X,GACpCA,EAAK4c,KAAO/d,KAAK0c,OACjBvb,EAAK8c,EAAIje,KAAKuiB,aACdphB,EAAK6c,OAAOjc,IAAI/B,KAAK8c,QAAQ5L,cAQ/BgK,EAAKla,UAAUoX,cAAgB,mBAExBsE,OAAS,OACTC,UAAY,OACZC,IAAM,OACNC,OAAS,OACTC,QAAQ5L,YAAYpP,UAGrB9B,KAAK4f,YAAc5f,KAAK8f,0BACrBhD,QAAQ1L,GAAGrP,IAAI/B,KAAKmY,KAAK/N,QACzB0S,QAAQnN,EAAE5N,IAAI/B,KAAKmY,KAAK/N,aACxB0S,QAAQzL,GAAKrR,KAAK8c,QAAQ7a,WAO7BiP,EAAcrR,EAAKwB,OACdoJ,EAAIzK,KAAK2d,cAAelT,EAAGA,EAAIA,EAAEgN,UACrB,GAAfhN,EAAE0M,eAIFpB,EAAW,IAAI+H,EACnBrT,EAAEwO,YAAYlD,QACT2G,QAAU3G,EAASgI,KACxB7M,EAAYzO,OAAOsT,EAASgI,KAAMhI,EAASiI,aACtCpB,KAAO7G,EAASkI,EAInBje,KAAK0c,OAAS,QACXC,UAAY,EAAM3c,KAAK0c,OAC5BxL,EAAYpO,IAAI9C,KAAK2c,kBAIhBD,OAAS,OACTC,UAAY,GAGf3c,KAAK4c,IAAM,GAAmC,GAA5B5c,KAAKsc,0BAEpBM,KAAO5c,KAAK0c,OAAS7c,EAAK6D,IAAIwN,EAAaA,QAE3C2L,OAAS,EAAM7c,KAAK4c,WAGpBA,IAAM,OACNC,OAAS,OAIZ2F,EAAY3iB,EAAK0B,MAAMvB,KAAK8c,QAAQnN,QACnCmN,QAAQtI,eAAetD,EAAalR,KAAKmY,WAGzCgF,iBAAiB7a,IAAIzC,EAAK8D,MAAM3D,KAAKod,kBAAmBvd,EAAKgD,IAC9D7C,KAAK8c,QAAQnN,EAAG6S,MAWtBtH,EAAKla,UAAUyhB,YAAc,SAAS1M,MAER,GAAxB/V,KAAKwf,iBAILxf,KAAKyR,QAAU6J,QAIdqB,UAAY,OACZC,IAAM,OACNC,OAAS,OAETH,OAAS3G,EAASgI,KACnB/d,KAAK0c,QAAU,SACZA,OAAS,QAGXC,UAAY,EAAM3c,KAAK0c,OAExB3G,EAASkI,EAAI,GAAmC,GAA5Bje,KAAKsc,2BACtBM,IAAM7G,EAASkI,EAAIje,KAAK0c,OACvB7c,EAAK6D,IAAIqS,EAASiI,OAAQjI,EAASiI,aAEpCnB,OAAS,EAAM7c,KAAK4c,SAIvB4F,EAAY3iB,EAAK0B,MAAMvB,KAAK8c,QAAQnN,QACnCmN,QAAQtI,eAAeuB,EAASiI,OAAQhe,KAAKmY,WAG7CgF,iBAAiB7a,IAAIzC,EAAK8D,MAAM3D,KAAKod,kBAAmBvd,EAAKgD,IAC9D7C,KAAK8c,QAAQnN,EAAG6S,OAYtBtH,EAAKla,UAAU0hB,WAAa,SAASC,EAAOC,EAAOC,GAC7C7iB,KAAKyR,QAAU6J,IAGfuH,GAA4B,GAApB7iB,KAAKmc,kBACV3D,UAAS,GAGZxY,KAAKmc,mBACFc,QAAQ3a,IAAIqgB,QACZzF,UAAYrd,EAAK8D,MAAM9D,EAAKgD,IAAI+f,EAAO5iB,KAAK8c,QAAQnN,GAAIgT,MAUjEzH,EAAKla,UAAU8hB,mBAAqB,SAASH,EAAOE,GAC9C7iB,KAAKyR,QAAU6J,IAGfuH,GAA4B,GAApB7iB,KAAKmc,kBACV3D,UAAS,GAGZxY,KAAKmc,kBACFc,QAAQ3a,IAAIqgB,KAWrBzH,EAAKla,UAAU+hB,YAAc,SAASC,EAAQH,GACxC7iB,KAAKyR,QAAU6J,IAGfuH,GAA4B,GAApB7iB,KAAKmc,kBACV3D,UAAS,GAGZxY,KAAKmc,mBACFe,UAAY8F,KAarB9H,EAAKla,UAAUiiB,mBAAqB,SAASC,EAASN,EAAOC,GACvD7iB,KAAKyR,QAAU6J,IAGfuH,GAA4B,GAApB7iB,KAAKmc,kBACV3D,UAAS,GAIZxY,KAAKmc,mBACFgB,iBAAiB1a,OAAOzC,KAAK2c,UAAWuG,QACxC9F,mBAAqBpd,KAAK6c,OAAShd,EAAK8D,MAAM9D,EAAKgD,IAAI+f,EAAO5iB,KAAK8c,QAAQnN,GAAIuT,MAUxFhI,EAAKla,UAAUmiB,oBAAsB,SAASD,EAASL,GACjD7iB,KAAKyR,QAAU6J,IAIfuH,GAA4B,GAApB7iB,KAAKmc,kBACV3D,UAAS,GAGZxY,KAAKmc,mBACFiB,mBAAqBpd,KAAK6c,OAASqG,KAQ5ChI,EAAKla,UAAU8Z,cAAgB,SAAShG,MAElC9U,KAAKyR,QAAU6J,GAAexG,EAAKrD,QAAU6J,SACxC,MAGJ,IAAI8H,EAAKpjB,KAAKyd,YAAa2F,EAAIA,EAAKA,EAAGzV,QACtCyV,EAAGC,OAASvO,GACqB,GAA/BsO,EAAGE,MAAMC,0BACJ,SAIN,GAMTrI,EAAKla,UAAUue,YAAc,SAAS5I,MAGR,GAAxB3W,KAAKwf,uBACA,QAGLxf,KAAKuc,aAAc,KACjBzE,EAAa9X,KAAK+X,QAAQC,aAC9BrB,EAAQuB,cAAcJ,EAAY9X,KAAKmY,aAGzCxB,EAAQc,OAASzX,KAAK2d,mBACjBA,cAAgBhH,EAGjBA,EAAQQ,UAAY,QACjBiB,qBAKFL,QAAQyL,cAAe,EAErB7M,GAgBTuE,EAAKla,UAAUyiB,cAAgB,SAASpO,EAAOqO,MAGjB,GAAxB1jB,KAAKwf,uBACA,SAGL7I,EAAU,IAAIC,EAAQ5W,KAAMqV,EAAOqO,eAClCnE,YAAY5I,GACVA,GAcTuE,EAAKla,UAAU2iB,eAAiB,SAAShN,MAGX,GAAxB3W,KAAKwf,oBAQLxf,KAAK2d,gBAAkBhH,OACpBgH,cAAgBhH,EAAQc,oBAIzBpM,EAAOrL,KAAK2d,cACD,MAARtS,GAAc,IACfA,EAAKoM,SAAWd,EAAS,CAC3BtL,EAAKoM,OAASd,EAAQc,aAIxBpM,EAAOA,EAAKoM,eAQZ2C,EAAOpa,KAAK0d,cACTtD,GAAM,KACPzK,EAAIyK,EAAKE,QACbF,EAAOA,EAAKzM,SAER4M,EAAW5K,EAAE6K,cACbC,EAAW9K,EAAE+K,cAEb/D,GAAW4D,GAAY5D,GAAW8D,QAG/B1C,QAAQuI,eAAe3Q,MAI5B3P,KAAKuc,aAAc,KACjBzE,EAAa9X,KAAK+X,QAAQC,aAC9BrB,EAAQsB,eAAeH,GAGzBnB,EAAQK,OAAS,KACjBL,EAAQc,OAAS,UAEZM,QAAQ6L,QAAQ,iBAAkBjN,QAGlCyB,kBAMP8C,EAAKla,UAAU2gB,cAAgB,SAASpD,UAC/B3N,EAAU4C,QAAQxT,KAAKmY,KAAMoG,IAMtCrD,EAAKla,UAAU6iB,eAAiB,SAASC,UAChCtT,EAAIgD,QAAQxT,KAAKmY,KAAKpH,EAAG+S,IAMlC5I,EAAKla,UAAU+iB,cAAgB,SAAStC,UAC/B7Q,EAAUgD,SAAS5T,KAAKmY,KAAMsJ,IAOvCvG,EAAKla,UAAUgjB,eAAiB,SAASC,UAChCzT,EAAIoD,SAAS5T,KAAKmY,KAAKpH,EAAGkT,ICzgCnC/F,EAAMld,UAAUS,SAAW,kBAClBC,KAAKC,UAAU3B,OAGxBke,EAAMtc,QAAU,SAASC,UAChBA,GAAKhC,EAAK+B,QAAQC,EAAEsc,KAAOte,EAAK+B,QAAQC,EAAEuc,KAGnDF,EAAM7d,OAAS,SAASwB,KAQxBqc,EAAMld,UAAUe,IAAM,SAASE,EAAGC,EAAGyN,EAAGnH,GACrB,iBAANvG,GAA+B,iBAANC,GAA+B,iBAANyN,GACzC,iBAANnH,QACP2V,GAAGpc,IAAIE,EAAG0N,QACVyO,GAAGrc,IAAIG,EAAGsG,IAEO,WAAbvI,EAAOgC,IAA+B,WAAbhC,EAAOiC,SACpCic,GAAGpc,IAAIE,QACPmc,GAAGrc,IAAIG,IAEU,WAAbjC,EAAOgC,UAEXkc,GAAGpc,IAAIE,EAAEkc,SACTC,GAAGrc,IAAIE,EAAEmc,MAOlBF,EAAMld,UAAU2P,YAAc,gBACvBwN,GAAGre,EAAI,OACPse,GAAGte,EAAI,OACPqe,GAAGpe,EAAI,OACPqe,GAAGre,EAAI,GAGdme,EAAMld,UAAUc,QAAU,gBACnBqc,GAAGre,EAAI,OACPse,GAAGte,EAAI,OACPqe,GAAGpe,EAAI,OACPqe,GAAGre,EAAI,GAGdme,EAAMld,UAAUkjB,WAAa,eACvBjiB,EAAIjC,KAAKme,GAAGre,EACZoC,EAAIlC,KAAKoe,GAAGte,EACZ6P,EAAI3P,KAAKme,GAAGpe,EACZyI,EAAIxI,KAAKoe,GAAGre,EACZokB,EAAMliB,EAAIuG,EAAItG,EAAIyN,EACX,GAAPwU,IACFA,EAAM,EAAMA,OAEVC,EAAM,IAAIlG,SACdkG,EAAIjG,GAAGre,EAAIqkB,EAAM3b,EACjB4b,EAAIhG,GAAGte,GAAKqkB,EAAMjiB,EAClBkiB,EAAIjG,GAAGpe,GAAKokB,EAAMxU,EAClByU,EAAIhG,GAAGre,EAAIokB,EAAMliB,EACVmiB,GAOTlG,EAAMld,UAAUqjB,MAAQ,SAAS7iB,OAE3BS,EAAIjC,KAAKme,GAAGre,EACZoC,EAAIlC,KAAKoe,GAAGte,EACZ6P,EAAI3P,KAAKme,GAAGpe,EACZyI,EAAIxI,KAAKoe,GAAGre,EACZokB,EAAMliB,EAAIuG,EAAItG,EAAIyN,EACX,GAAPwU,IACFA,EAAM,EAAMA,OAEVhiB,EAAItC,EAAKwB,cACbc,EAAErC,EAAIqkB,GAAO3b,EAAIhH,EAAE1B,EAAIoC,EAAIV,EAAEzB,GAC7BoC,EAAEpC,EAAIokB,GAAOliB,EAAIT,EAAEzB,EAAI4P,EAAInO,EAAE1B,GACtBqC,GAOT+b,EAAMpb,IAAM,SAASwhB,EAAI9iB,MACnBA,GAAK,MAAOA,GAAK,MAAOA,EAAG,KAEzB1B,EAAIwkB,EAAGnG,GAAGre,EAAI0B,EAAE1B,EAAIwkB,EAAGlG,GAAGte,EAAI0B,EAAEzB,EAChCA,EAAIukB,EAAGnG,GAAGpe,EAAIyB,EAAE1B,EAAIwkB,EAAGlG,GAAGre,EAAIyB,EAAEzB,SAC7BF,EAAKyB,IAAIxB,EAAGC,GAEd,GAAIyB,GAAK,OAAQA,GAAK,OAAQA,SAO5B,IAAI0c,EAJHoG,EAAGnG,GAAGre,EAAI0B,EAAE2c,GAAGre,EAAIwkB,EAAGlG,GAAGte,EAAI0B,EAAE2c,GAAGpe,EAClCukB,EAAGnG,GAAGre,EAAI0B,EAAE4c,GAAGte,EAAIwkB,EAAGlG,GAAGte,EAAI0B,EAAE4c,GAAGre,EAClCukB,EAAGnG,GAAGpe,EAAIyB,EAAE2c,GAAGre,EAAIwkB,EAAGlG,GAAGre,EAAIyB,EAAE2c,GAAGpe,EAClCukB,EAAGnG,GAAGpe,EAAIyB,EAAE4c,GAAGte,EAAIwkB,EAAGlG,GAAGre,EAAIyB,EAAE4c,GAAGre,IAO9Cme,EAAM1K,QAAU,SAAS8Q,EAAI9iB,OAEvB1B,EAAIwkB,EAAGnG,GAAGre,EAAI0B,EAAE1B,EAAIwkB,EAAGlG,GAAGte,EAAI0B,EAAEzB,EAChCA,EAAIukB,EAAGnG,GAAGpe,EAAIyB,EAAE1B,EAAIwkB,EAAGlG,GAAGre,EAAIyB,EAAEzB,SAC7BF,EAAKyB,IAAIxB,EAAGC,IAGrBme,EAAMqG,SAAW,SAASD,EAAI9iB,UAOrB,IAAI0c,EAJHoG,EAAGnG,GAAGre,EAAI0B,EAAE2c,GAAGre,EAAIwkB,EAAGlG,GAAGte,EAAI0B,EAAE2c,GAAGpe,EAClCukB,EAAGnG,GAAGre,EAAI0B,EAAE4c,GAAGte,EAAIwkB,EAAGlG,GAAGte,EAAI0B,EAAE4c,GAAGre,EAClCukB,EAAGnG,GAAGpe,EAAIyB,EAAE2c,GAAGre,EAAIwkB,EAAGlG,GAAGre,EAAIyB,EAAE2c,GAAGpe,EAClCukB,EAAGnG,GAAGpe,EAAIyB,EAAE4c,GAAGte,EAAIwkB,EAAGlG,GAAGre,EAAIyB,EAAE4c,GAAGre,IAU5Cme,EAAMxK,KAAO,SAAS4Q,EAAI9iB,UACpBA,GAAK,MAAOA,GAAK,MAAOA,EAEnB3B,EAAKyB,IAAIzB,EAAK6D,IAAIlC,EAAG8iB,EAAGnG,IAAKte,EAAK6D,IAAIlC,EAAG8iB,EAAGlG,KAE1C5c,GAAK,OAAQA,GAAK,OAAQA,EAI5B,IAAI0c,EAFFre,EAAKyB,IAAIzB,EAAK6D,IAAI4gB,EAAGnG,GAAI3c,EAAE2c,IAAKte,EAAK6D,IAAI4gB,EAAGlG,GAAI5c,EAAE2c,KAClDte,EAAKyB,IAAIzB,EAAK6D,IAAI4gB,EAAGnG,GAAI3c,EAAE4c,IAAKve,EAAK6D,IAAI4gB,EAAGlG,GAAI5c,EAAE4c,WAHtD,GAUTF,EAAMtK,SAAW,SAAS0Q,EAAI9iB,UAGrB3B,EAAKyB,IAAIzB,EAAK6D,IAAIlC,EAAG8iB,EAAGnG,IAAKte,EAAK6D,IAAIlC,EAAG8iB,EAAGlG,MAGrDF,EAAMsG,UAAY,SAASF,EAAI9iB,UAKtB,IAAI0c,EAFFre,EAAKyB,IAAIzB,EAAK6D,IAAI4gB,EAAGnG,GAAI3c,EAAE2c,IAAKte,EAAK6D,IAAI4gB,EAAGlG,GAAI5c,EAAE2c,KAClDte,EAAKyB,IAAIzB,EAAK6D,IAAI4gB,EAAGnG,GAAI3c,EAAE4c,IAAKve,EAAK6D,IAAI4gB,EAAGlG,GAAI5c,EAAE4c,OAI7DF,EAAMna,IAAM,SAASugB,UAEZ,IAAIpG,EAAMre,EAAKkE,IAAIugB,EAAGnG,IAAKte,EAAKkE,IAAIugB,EAAGlG,MAGhDF,EAAM5b,IAAM,SAASmiB,EAAKC,UAGjB,IAAIxG,EAAMre,EAAKyC,IAAImiB,EAAItG,GAAIuG,EAAIvG,IAAKte,EAAKyC,IAAImiB,EAAIrG,GAAIsG,EAAItG,MCxLlEC,EAASsG,kBA+RT,SAA2BC,EAAMC,EAAKra,EAAQsa,EAAQC,OAEhDC,EAAS,EAGTC,EAAYplB,EAAK6D,IAAI8G,EAAQqa,EAAI,GAAGrjB,GAAKsjB,EACzCI,EAAYrlB,EAAK6D,IAAI8G,EAAQqa,EAAI,GAAGrjB,GAAKsjB,EAGzCG,GAAa,GACfL,EAAKI,KAAUjjB,IAAI8iB,EAAI,IACrBK,GAAa,GACfN,EAAKI,KAAUjjB,IAAI8iB,EAAI,OAGrBI,EAAYC,EAAY,EAAK,KAE3BC,EAASF,GAAaA,EAAYC,GACtCN,EAAKI,GAAQxjB,EAAEY,WAAW,EAAI+iB,EAAQN,EAAI,GAAGrjB,EAAG2jB,EAAQN,EAAI,GAAGrjB,GAG/DojB,EAAKI,GAAQhf,GAAG8Y,GAAGE,OAAS+F,EAC5BH,EAAKI,GAAQhf,GAAG8Y,GAAGG,OAAS4F,EAAI,GAAG7e,GAAG8Y,GAAGG,OACzC2F,EAAKI,GAAQhf,GAAG8Y,GAAGI,MAAQb,EAAS+G,SACpCR,EAAKI,GAAQhf,GAAG8Y,GAAGK,MAAQd,EAASgH,SAClCL,SAGGA,GA1TT3G,EAASiH,WAAaA,EACtBjH,EAASkH,eAoOT,SAAwBC,EAAQC,EAAQC,EAAWC,OAO5C,IAAItmB,EAAI,EAAGA,EAAIqmB,EAAUhH,aAAcrf,EAAG,KACzC2G,EAAK0f,EAAUlH,OAAOnf,GAAG2G,GAE7Bwf,EAAOnmB,GAAKumB,EAAWC,gBAElB,IAAIlX,EAAI,EAAGA,EAAIgX,EAAUjH,aAAc/P,KACtCgX,EAAUnH,OAAO7P,GAAG3I,GAAG/G,KAAO+G,EAAG/G,IAAK,CACxCumB,EAAOnmB,GAAKumB,EAAWE,wBAOpBzmB,EAAI,EAAGA,EAAIsmB,EAAUjH,aAAcrf,EAAG,CACzC2G,EAAK2f,EAAUnH,OAAOnf,GAAG2G,GAE7Byf,EAAOpmB,GAAKumB,EAAWG,aAEdpX,EAAI,EAAGA,EAAI+W,EAAUhH,aAAc/P,KACtC+W,EAAUlH,OAAO7P,GAAG3I,GAAG/G,KAAO+G,EAAG/G,IAAK,CACxCwmB,EAAOpmB,GAAKumB,EAAWE,sBA/P/BzH,EAASuH,WAAaA,EAGtBvH,EAAS2H,UAAY,EACrB3H,EAAS4H,QAAU,EACnB5H,EAAS6H,QAAU,EAGnB7H,EAAS+G,SAAW,EACpB/G,EAASgH,OAAS,EAsElBtmB,OAAOonB,eAAetH,EAAU7d,UAAW,MAAO,CAChDolB,IAAK,kBACIpmB,KAAK8e,GAAGE,OAA0B,EAAjBhf,KAAK8e,GAAGG,OAA6B,GAAhBjf,KAAK8e,GAAGI,MAA6B,GAAhBlf,KAAK8e,GAAGK,OAE5EkH,YAAY,EACZC,cAAc,IAGhBzH,EAAU7d,UAAUe,IAAM,SAASF,QAE5Bid,GAAG/c,IAAIF,EAAEid,KAkBhBC,EAAe/d,UAAUe,IAAM,SAASF,QACjCmd,OAASnd,EAAEmd,YACXC,OAASpd,EAAEod,YACXC,MAAQrd,EAAEqd,WACVC,MAAQtd,EAAEsd,OAuBjBd,EAASrd,UAAUulB,iBAAmB,SAASC,EAAIC,EAAKC,EAASC,EAAKC,MAC7C,GAAnB5mB,KAAK0e,gBAMLlU,GAFJgc,EAAKA,GAAM,IAAIpH,GAEC5U,OACZgU,EAASgI,EAAGhI,OACZa,EAAcmH,EAAGnH,mBAGbrf,KAAKoV,WACRiJ,EAAS2H,UACZxb,EAAS3K,EAAKyB,IAAI,EAAK,OACnBulB,EAASjW,EAAU4C,QAAQiT,EAAKzmB,KAAKue,YACrCuI,EAASlW,EAAU4C,QAAQmT,EAAK3mB,KAAKwe,OAAO,GAAGD,YAC/CwI,EAAOlnB,EAAKgD,IAAIikB,EAAQD,GACxBhnB,EAAKoD,cAAc8jB,GAAQrnB,EAAKQ,QAAUR,EAAKQ,UACjDsK,EAAOzI,IAAIglB,GACXvc,EAAOtH,iBAEL8jB,EAAKH,EAAOtlB,QAAQkB,OAAOikB,EAASlc,GACpCyc,EAAKH,EAAOvlB,QAAQkB,QAAQmkB,EAASpc,GACzCgU,EAAO,GAAK3e,EAAKmE,IAAIgjB,EAAIC,GACzB5H,EAAY,GAAKxf,EAAK6D,IAAI7D,EAAKgD,IAAIokB,EAAID,GAAKxc,GAC5CgU,EAAOlf,OAAS,EAChB+f,EAAY/f,OAAS,aAGlB+e,EAAS4H,QACZzb,EAASgG,EAAIgD,QAAQiT,EAAI1V,EAAG/Q,KAAKse,qBAC7B4I,EAAatW,EAAU4C,QAAQiT,EAAKzmB,KAAKue,YAEpClf,EAAI,EAAGA,EAAIW,KAAK0e,aAAcrf,EAAG,KACpC8nB,EAAYvW,EAAU4C,QAAQmT,EAAK3mB,KAAKwe,OAAOnf,GAAGkf,YAClDyI,EAAKnnB,EAAK0B,MAAM4lB,GAAW1kB,OAAOikB,EAAU7mB,EAAK6D,IAAI7D,EAAKgD,IAAIskB,EAAWD,GAAa1c,GAASA,GAC/Fyc,EAAKpnB,EAAK0B,MAAM4lB,GAAWvkB,OAAOgkB,EAASpc,GAC/CgU,EAAOnf,GAAKQ,EAAKmE,IAAIgjB,EAAIC,GACzB5H,EAAYhgB,GAAKQ,EAAK6D,IAAI7D,EAAKgD,IAAIokB,EAAID,GAAKxc,GAE9CgU,EAAOlf,OAASU,KAAK0e,WACrBW,EAAY/f,OAASU,KAAK0e,sBAGvBL,EAAS6H,QACZ1b,EAASgG,EAAIgD,QAAQmT,EAAI5V,EAAG/Q,KAAKse,iBAC7B4I,EAAatW,EAAU4C,QAAQmT,EAAK3mB,KAAKue,YAEpClf,EAAI,EAAGA,EAAIW,KAAK0e,aAAcrf,EAAG,CACpC8nB,EAAYvW,EAAU4C,QAAQiT,EAAKzmB,KAAKwe,OAAOnf,GAAGkf,YAClD0I,EAAKpnB,EAAKgE,QAAQ,EAAGsjB,EAAWP,EAAU/mB,EAAK6D,IAAI7D,EAAKgD,IAAIskB,EAAWD,GAAa1c,GAASA,GAC7Fwc,EAAKnnB,EAAKgE,QAAQ,EAAGsjB,GAAYT,EAASlc,GAC9CgU,EAAOnf,GAAKQ,EAAKmE,IAAIgjB,EAAIC,GACzB5H,EAAYhgB,GAAKQ,EAAK6D,IAAI7D,EAAKgD,IAAImkB,EAAIC,GAAKzc,GAE9CgU,EAAOlf,OAASU,KAAK0e,WACrBW,EAAY/f,OAASU,KAAK0e,WAE1BlU,EAAO1H,KAAK,UAId0jB,EAAGhc,OAASA,EACZgc,EAAGhI,OAASA,EACZgI,EAAGnH,YAAcA,EACVmH,IAWT,IAAIZ,EAAa,CAEfwB,UAAY,EACZrB,SAAW,EACXD,aAAe,EACfD,YAAc,GAoDhB,SAASP,SACF9jB,EAAI3B,EAAKwB,YACT2E,GAAK,IAAI6Y,EAGhByG,EAAWtkB,UAAUe,IAAM,SAASF,QAC7BL,EAAEO,IAAIF,EAAEL,QACRwE,GAAGjE,IAAIF,EAAEmE,WCvTD,CACbvE,SAAU,SAAS4lB,GACjBA,EAA6B,iBAAZA,EAAuBA,EAAU,SAC9CC,EAAS,OACR,IAAIC,KAAQvnB,KACW,mBAAfA,KAAKunB,IAA8C,WAAtBtnB,EAAOD,KAAKunB,MAClDD,GAAUC,EAAO,KAAOvnB,KAAKunB,GAAQF,UAGlCC,ICoBX,SAASE,EAAK1nB,EAAGC,EAAG0nB,QACZznB,gBAAgBwnB,UACb,IAAIA,EAAK1nB,EAAGC,EAAG0nB,QAEP,IAAN3nB,QACJA,EAAI,EAAGE,KAAKD,EAAI,EAAGC,KAAKynB,EAAI,GACX,WAAbxnB,EAAOH,SACXA,EAAIA,EAAEA,EAAGE,KAAKD,EAAID,EAAEC,EAAGC,KAAKynB,EAAI3nB,EAAE2nB,SAElC3nB,EAAIA,EAAGE,KAAKD,EAAIA,EAAGC,KAAKynB,EAAIA,GCJrC,SAASC,EAAMzlB,EAAGC,EAAGyN,GACF,WAAb1P,EAAOgC,IAAwB,OAANA,QACtBkc,GAAKqJ,EAAKjmB,MAAMU,QAChBmc,GAAKoJ,EAAKjmB,MAAMW,QAChBylB,GAAKH,EAAKjmB,MAAMoO,UAEhBwO,GAAKqJ,SACLpJ,GAAKoJ,SACLG,GAAKH,KCgBd,SAASI,SACFC,OAAS,IAAIC,OACbC,OAAS,IAAID,OACbE,WAAa,UACbC,WAAa,UACbC,UAAW,EAWlB,SAASC,SACFtB,OAAShnB,EAAKwB,YACdylB,OAASjnB,EAAKwB,YACd+B,cACAglB,WAWP,SAASC,SACFC,OAAS,OACTtJ,OAAS,QACTC,OAAS,QACT3Q,MAAQ,EAYf,SAASia,EAASzpB,EAAQ0pB,EAAO5pB,KAC7B6pB,EAAMC,aAEJb,EAASjpB,EAAMipB,OACfE,EAASnpB,EAAMmpB,OACftB,EAAM7nB,EAAMopB,WACZrB,EAAM/nB,EAAMqpB,WAGZU,EAAU,IAAIC,EAClBD,EAAQE,UAAUL,EAAOX,EAAQpB,EAAKsB,EAAQpB,WAG1CmC,EAAWH,EAAQI,IACnBC,EAAa1kB,EAASkD,qBAItByhB,EAAQ,GACRC,EAAQ,GACRC,EAAY,EAMZC,EAAO,EACJA,EAAOJ,GAAY,CAExBG,EAAYR,EAAQU,YACf,IAAIhqB,EAAI,EAAGA,EAAI8pB,IAAa9pB,EAC/B4pB,EAAM5pB,GAAKypB,EAASzpB,GAAG2f,OACvBkK,EAAM7pB,GAAKypB,EAASzpB,GAAG4f,UAGzB0J,EAAQtE,QAGe,GAAnBsE,EAAQU,eAKRjf,EAAIue,EAAQW,mBACCrmB,oBASbuF,EAAImgB,EAAQY,wBAGZ/gB,EAAEvF,gBAAkBvD,EAAKQ,QAAUR,EAAKQ,kBAWxCspB,EAASV,EAASH,EAAQU,SAE9BG,EAAOxK,OAAS6I,EAAO4B,WAAWjZ,EAAIoD,SAAS6S,EAAI1V,EAAGlR,EAAKiE,IAAI0E,KAC/DghB,EAAOE,GAAK9Y,EAAU4C,QAAQiT,EAAKoB,EAAO8B,UAAUH,EAAOxK,SAE3DwK,EAAOvK,OAAS8I,EAAO0B,WAAWjZ,EAAIoD,SAAS+S,EAAI5V,EAAGvI,IACtDghB,EAAOI,GAAKhZ,EAAU4C,QAAQmT,EAAKoB,EAAO4B,UAAUH,EAAOvK,SAE3DuK,EAAOrnB,EAAItC,EAAKgD,IAAI2mB,EAAOI,GAAIJ,EAAOE,MAGpCN,IACAX,EAAMoB,aAIJC,GAAY,MACPzqB,EAAI,EAAGA,EAAI8pB,IAAa9pB,KAC3BmqB,EAAOxK,QAAUiK,EAAM5pB,IAAMmqB,EAAOvK,QAAUiK,EAAM7pB,GAAI,CAC1DyqB,GAAY,WAMZA,UAKFnB,EAAQU,WAGZZ,EAAMsB,YAAcrqB,EAAKmB,IAAI4nB,EAAMsB,YAAaX,GAGhDT,EAAQqB,iBAAiBlrB,EAAO+nB,OAAQ/nB,EAAOgoB,QAC/ChoB,EAAOsE,SAAWvD,EAAKuD,SAAStE,EAAO+nB,OAAQ/nB,EAAOgoB,QACtDhoB,EAAOspB,WAAagB,EAGpBT,EAAQsB,WAAWzB,GAGf5pB,EAAMspB,SAAU,KACdgC,EAAKrC,EAAOnW,SACZyY,EAAKpC,EAAOrW,YAEZ5S,EAAOsE,SAAW8mB,EAAKC,GAAMrrB,EAAOsE,SAAW1D,EAAKQ,QAAS,CAG/DpB,EAAOsE,UAAY8mB,EAAKC,MACpB3f,EAAS3K,EAAKgD,IAAI/D,EAAOgoB,OAAQhoB,EAAO+nB,QAC5Crc,EAAOtH,YACPpE,EAAO+nB,OAAOpkB,OAAOynB,EAAI1f,GACzB1L,EAAOgoB,OAAOlkB,OAAOunB,EAAI3f,OACpB,KAGDJ,EAAIvK,EAAKmE,IAAIlF,EAAO+nB,OAAQ/nB,EAAOgoB,QACvChoB,EAAO+nB,OAAO9kB,IAAIqI,GAClBtL,EAAOgoB,OAAO/kB,IAAIqI,GAClBtL,EAAOsE,SAAW,IAQxB,SAAS0kB,SACFsC,SAAW,QACXC,WAAa,QACbhB,QAAU,OACV3X,SAAW,EAmDlB,SAAS4Y,SACFtL,YACAC,YACAyK,GAAK7pB,EAAKwB,YACVuoB,GAAK/pB,EAAKwB,YACVc,EAAItC,EAAKwB,YACTY,EAYP,SAAS2mB,SACF2B,KAAO,IAAID,OACXE,KAAO,IAAIF,OACXG,KAAO,IAAIH,OACXvB,IAAM,CAAE/oB,KAAKuqB,KAAMvqB,KAAKwqB,KAAMxqB,KAAKyqB,WACnCpB,QC7QP,SAASqB,EAAYpQ,QACdA,QAAUA,OACVqQ,UACAhd,UACA0V,MA0BP,SAASuH,EAAQC,EAAI7L,EAAQ8L,EAAI7L,EAAQ8L,QAElCC,QAAU,IAAIN,EAAY1qB,WAC1BirB,QAAU,IAAIP,EAAY1qB,WAE1BkrB,WAAaL,OACbM,WAAaL,OAEbM,SAAWpM,OACXqM,SAAWpM,OAEXqM,cAAgBP,OAEhBQ,WAAa,IAAIlN,OAEjBT,OAAS,UACTnG,OAAS,UAET+T,MAAQ,OACRC,WAAa,OAEbhP,WAAY,OAEZxF,WAAayU,EAAY1rB,KAAKkrB,WAAWjU,WAC1CjX,KAAKmrB,WAAWlU,iBACfC,cAAgByU,GAAe3rB,KAAKkrB,WAAWhU,cAChDlX,KAAKmrB,WAAWjU,oBAEf0U,eAAiB,OAGjBC,eAAgB,OAGhBrP,cAAe,OAGfsP,gBAAiB,OAGjBC,cAAe,OAGfC,iBAAkB,OAElBC,SAAW,QACXC,SAAWrsB,EAAKwB,YAChB8qB,aAAe,IAAIjO,OACnBkO,IAAM,IAAIlO,OACVmO,kBAEAC,oBACAC,gBACAC,mBAEAC,gBACAC,gBACAC,aACAC,aAEAC,cAAgB,QAChBC,cAAgBjtB,EAAKwB,YACrB0rB,aAAeltB,EAAKwB,YACpB2rB,eAAiBntB,EAAKwB,YACtB4rB,eAAiBptB,EAAKwB,YACtB6rB,YACAC,eACAC,eACAC,kBAEAC,gBACAC,gBACAC,aACAC,QAybP,SAASC,SACFxD,GAAKrqB,EAAKwB,YACV8oB,GAAKtqB,EAAKwB,YACVsd,cAAgB,OAChBC,eAAiB,OACjB+O,WAAa,OACbC,YAAc,OACdC,aAAe,EAiftB,SAASnC,EAAYoC,EAAWC,UACvBruB,EAAKa,KAAKutB,EAAYC,GAO/B,SAASpC,GAAeqC,EAAcC,UAC7BD,EAAeC,EAAeD,EAAeC,EHziCtDzG,EAAKxmB,UAAUC,WAAa,iBACnB,CACLnB,EAAGE,KAAKF,EACRC,EAAGC,KAAKD,EACR0nB,EAAGznB,KAAKynB,IAIZD,EAAKtmB,aAAe,SAASC,OACvBC,EAAMrC,OAAOa,OAAO4nB,EAAKxmB,kBAC7BI,EAAItB,EAAIqB,EAAKrB,EACbsB,EAAIrB,EAAIoB,EAAKpB,EACbqB,EAAIqmB,EAAItmB,EAAKsmB,EACNrmB,GAGTomB,EAAKlmB,IAAM,SAASxB,EAAGC,EAAG0nB,OACpBrmB,EAAMrC,OAAOa,OAAO4nB,EAAKxmB,kBAC7BI,EAAItB,EAAIA,EACRsB,EAAIrB,EAAIA,EACRqB,EAAIqmB,EAAIA,EACDrmB,GAGTomB,EAAKjmB,MAAQ,SAASC,UAEbgmB,EAAKlmB,IAAIE,EAAE1B,EAAG0B,EAAEzB,EAAGyB,EAAEimB,IAG9BD,EAAKxmB,UAAUS,SAAW,kBACjBC,KAAKC,UAAU3B,OAMxBwnB,EAAK5lB,QAAU,SAASJ,UACfA,GAAK9B,EAAKS,SAASqB,EAAE1B,IAAMJ,EAAKS,SAASqB,EAAEzB,IAAML,EAAKS,SAASqB,EAAEimB,IAG1ED,EAAKnnB,OAAS,SAASwB,KAQvB2lB,EAAKxmB,UAAUc,QAAU,uBAClBhC,EAAI,OACJC,EAAI,OACJ0nB,EAAI,EACFznB,MAGTwnB,EAAKxmB,UAAUe,IAAM,SAASjC,EAAGC,EAAG0nB,eAC7B3nB,EAAIA,OACJC,EAAIA,OACJ0nB,EAAIA,EACFznB,MAGTwnB,EAAKxmB,UAAUsB,IAAM,SAASH,eACvBrC,GAAKqC,EAAErC,OACPC,GAAKoC,EAAEpC,OACP0nB,GAAKtlB,EAAEslB,EACLznB,MAGTwnB,EAAKxmB,UAAU6B,IAAM,SAASV,eACvBrC,GAAKqC,EAAErC,OACPC,GAAKoC,EAAEpC,OACP0nB,GAAKtlB,EAAEslB,EACLznB,MAGTwnB,EAAKxmB,UAAU8B,IAAM,SAASC,eACvBjD,GAAKiD,OACLhD,GAAKgD,OACL0kB,GAAK1kB,EACH/C,MAGTwnB,EAAKhkB,SAAW,SAAShC,EAAGW,UAGnBX,GAAKW,GACG,WAAblC,EAAOuB,IAAwB,OAANA,GACZ,WAAbvB,EAAOkC,IAAwB,OAANA,GACzBX,EAAE1B,IAAMqC,EAAErC,GAAK0B,EAAEzB,IAAMoC,EAAEpC,GAAKyB,EAAEimB,IAAMtlB,EAAEslB,GAM5CD,EAAK9jB,IAAM,SAASlC,EAAGW,UACdX,EAAE1B,EAAIqC,EAAErC,EAAI0B,EAAEzB,EAAIoC,EAAEpC,EAAIyB,EAAEimB,EAAItlB,EAAEslB,GAMzCD,EAAK7jB,MAAQ,SAASnC,EAAGW,UAChB,IAAIqlB,EACThmB,EAAEzB,EAAIoC,EAAEslB,EAAIjmB,EAAEimB,EAAItlB,EAAEpC,EACpByB,EAAEimB,EAAItlB,EAAErC,EAAI0B,EAAE1B,EAAIqC,EAAEslB,EACpBjmB,EAAE1B,EAAIqC,EAAEpC,EAAIyB,EAAEzB,EAAIoC,EAAErC,IAIxB0nB,EAAKllB,IAAM,SAASd,EAAGW,UACd,IAAIqlB,EAAKhmB,EAAE1B,EAAIqC,EAAErC,EAAG0B,EAAEzB,EAAIoC,EAAEpC,EAAGyB,EAAEimB,EAAItlB,EAAEslB,IAGhDD,EAAK3kB,IAAM,SAASrB,EAAGW,UACd,IAAIqlB,EAAKhmB,EAAE1B,EAAIqC,EAAErC,EAAG0B,EAAEzB,EAAIoC,EAAEpC,EAAGyB,EAAEimB,EAAItlB,EAAEslB,IAGhDD,EAAK1kB,IAAM,SAAStB,EAAGuB,UACd,IAAIykB,EAAKzkB,EAAIvB,EAAE1B,EAAGiD,EAAIvB,EAAEzB,EAAGgD,EAAIvB,EAAEimB,IAG1CD,EAAKxmB,UAAU8C,IAAM,uBACdhE,GAAKE,KAAKF,OACVC,GAAKC,KAAKD,OACV0nB,GAAKznB,KAAKynB,EACRznB,MAGTwnB,EAAK1jB,IAAM,SAAStC,UACX,IAAIgmB,GAAMhmB,EAAE1B,GAAI0B,EAAEzB,GAAIyB,EAAEimB,IC/HjCC,EAAM1mB,UAAUS,SAAW,kBAClBC,KAAKC,UAAU3B,OAGxB0nB,EAAM9lB,QAAU,SAASC,UAChBA,GAAK2lB,EAAK5lB,QAAQC,EAAEsc,KAAOqJ,EAAK5lB,QAAQC,EAAEuc,KAAOoJ,EAAK5lB,QAAQC,EAAE8lB,KAGzED,EAAMrnB,OAAS,SAASwB,KAWxB6lB,EAAM1mB,UAAUc,QAAU,uBACnBqc,GAAGrc,eACHsc,GAAGtc,eACH6lB,GAAG7lB,UACD9B,MAUT0nB,EAAM1mB,UAAUktB,QAAU,SAAS1sB,OAC7B2iB,EAAMqD,EAAK9jB,IAAI1D,KAAKme,GAAIqJ,EAAK7jB,MAAM3D,KAAKoe,GAAIpe,KAAK2nB,KAC1C,GAAPxD,IACFA,EAAM,EAAMA,OAEV9U,EAAI,IAAImY,SACZnY,EAAEvP,EAAIqkB,EAAMqD,EAAK9jB,IAAIlC,EAAGgmB,EAAK7jB,MAAM3D,KAAKoe,GAAIpe,KAAK2nB,KACjDtY,EAAEtP,EAAIokB,EAAMqD,EAAK9jB,IAAI1D,KAAKme,GAAIqJ,EAAK7jB,MAAMnC,EAAGxB,KAAK2nB,KACjDtY,EAAEoY,EAAItD,EAAMqD,EAAK9jB,IAAI1D,KAAKme,GAAIqJ,EAAK7jB,MAAM3D,KAAKoe,GAAI5c,IAC3C6N,GAYTqY,EAAM1mB,UAAUmtB,QAAU,SAAS3sB,OAC7B4sB,EAAMpuB,KAAKme,GAAGre,EACduuB,EAAMruB,KAAKoe,GAAGte,EACdwuB,EAAMtuB,KAAKme,GAAGpe,EACdwuB,EAAMvuB,KAAKoe,GAAGre,EACdokB,EAAMiK,EAAMG,EAAMF,EAAMC,EACjB,GAAPnK,IACFA,EAAM,EAAMA,OAEV9U,EAAIxP,EAAKwB,cACbgO,EAAEvP,EAAIqkB,GAAOoK,EAAM/sB,EAAE1B,EAAIuuB,EAAM7sB,EAAEzB,GACjCsP,EAAEtP,EAAIokB,GAAOiK,EAAM5sB,EAAEzB,EAAIuuB,EAAM9sB,EAAE1B,GAC1BuP,GASTqY,EAAM1mB,UAAUwtB,aAAe,SAASC,OAClCxsB,EAAIjC,KAAKme,GAAGre,EACZoC,EAAIlC,KAAKoe,GAAGte,EACZ6P,EAAI3P,KAAKme,GAAGpe,EACZyI,EAAIxI,KAAKoe,GAAGre,EACZokB,EAAMliB,EAAIuG,EAAItG,EAAIyN,EACX,GAAPwU,IACFA,EAAM,EAAMA,GAEdsK,EAAEtQ,GAAGre,EAAIqkB,EAAM3b,EACfimB,EAAErQ,GAAGte,GAAKqkB,EAAMjiB,EAChBusB,EAAEtQ,GAAGsJ,EAAI,EACTgH,EAAEtQ,GAAGpe,GAAKokB,EAAMxU,EAChB8e,EAAErQ,GAAGre,EAAIokB,EAAMliB,EACfwsB,EAAErQ,GAAGqJ,EAAI,EACTgH,EAAE9G,GAAG7nB,EAAI,EACT2uB,EAAE9G,GAAG5nB,EAAI,EACT0uB,EAAE9G,GAAGF,EAAI,GASXC,EAAM1mB,UAAU0tB,gBAAkB,SAASD,OACrCtK,EAAMqD,EAAK9jB,IAAI1D,KAAKme,GAAIqJ,EAAK7jB,MAAM3D,KAAKoe,GAAIpe,KAAK2nB,KAC1C,GAAPxD,IACFA,EAAM,EAAMA,OAEViK,EAAMpuB,KAAKme,GAAGre,EACduuB,EAAMruB,KAAKoe,GAAGte,EACd6uB,EAAM3uB,KAAK2nB,GAAG7nB,EACdyuB,EAAMvuB,KAAKoe,GAAGre,EACd6uB,EAAM5uB,KAAK2nB,GAAG5nB,EACd8uB,EAAM7uB,KAAK2nB,GAAGF,EAElBgH,EAAEtQ,GAAGre,EAAIqkB,GAAOoK,EAAMM,EAAMD,EAAMA,GAClCH,EAAEtQ,GAAGpe,EAAIokB,GAAOwK,EAAMC,EAAMP,EAAMQ,GAClCJ,EAAEtQ,GAAGsJ,EAAItD,GAAOkK,EAAMO,EAAMD,EAAMJ,GAElCE,EAAErQ,GAAGte,EAAI2uB,EAAEtQ,GAAGpe,EACd0uB,EAAErQ,GAAGre,EAAIokB,GAAOiK,EAAMS,EAAMF,EAAMA,GAClCF,EAAErQ,GAAGqJ,EAAItD,GAAOwK,EAAMN,EAAMD,EAAMQ,GAElCH,EAAE9G,GAAG7nB,EAAI2uB,EAAEtQ,GAAGsJ,EACdgH,EAAE9G,GAAG5nB,EAAI0uB,EAAErQ,GAAGqJ,EACdgH,EAAE9G,GAAGF,EAAItD,GAAOiK,EAAMG,EAAMF,EAAMA,IAWpC3G,EAAM5kB,IAAM,SAASb,EAAGC,MAElBA,GAAK,MAAOA,GAAK,MAAOA,GAAK,MAAOA,SAK/B,IAAIslB,EAHP1nB,EAAImC,EAAEkc,GAAGre,EAAIoC,EAAEpC,EAAImC,EAAEmc,GAAGte,EAAIoC,EAAEnC,EAAIkC,EAAE0lB,GAAG7nB,EAAIoC,EAAEulB,EAC7C1nB,EAAIkC,EAAEkc,GAAGpe,EAAImC,EAAEpC,EAAImC,EAAEmc,GAAGre,EAAImC,EAAEnC,EAAIkC,EAAE0lB,GAAG5nB,EAAImC,EAAEulB,EACzCxlB,EAAEkc,GAAGsJ,EAAIvlB,EAAEpC,EAAImC,EAAEmc,GAAGqJ,EAAIvlB,EAAEnC,EAAIkC,EAAE0lB,GAAGF,EAAIvlB,EAAEulB,GAG5C,GAAIvlB,GAAK,MAAOA,GAAK,MAAOA,EAAG,KAEhCpC,EAAImC,EAAEkc,GAAGre,EAAIoC,EAAEpC,EAAImC,EAAEmc,GAAGte,EAAIoC,EAAEnC,EAC9BA,EAAIkC,EAAEkc,GAAGpe,EAAImC,EAAEpC,EAAImC,EAAEmc,GAAGre,EAAImC,EAAEnC,SAC3BF,EAAKyB,IAAIxB,EAAGC,KAMvB2nB,EAAMoH,QAAU,SAAS7sB,EAAGC,UAMnB,IAAIslB,EAHHvlB,EAAEkc,GAAGre,EAAIoC,EAAEpC,EAAImC,EAAEmc,GAAGte,EAAIoC,EAAEnC,EAAIkC,EAAE0lB,GAAG7nB,EAAIoC,EAAEulB,EACzCxlB,EAAEkc,GAAGpe,EAAImC,EAAEpC,EAAImC,EAAEmc,GAAGre,EAAImC,EAAEnC,EAAIkC,EAAE0lB,GAAG5nB,EAAImC,EAAEulB,EACzCxlB,EAAEkc,GAAGsJ,EAAIvlB,EAAEpC,EAAImC,EAAEmc,GAAGqJ,EAAIvlB,EAAEnC,EAAIkC,EAAE0lB,GAAGF,EAAIvlB,EAAEulB,IAInDC,EAAMlU,QAAU,SAASvR,EAAGC,OAGtBpC,EAAImC,EAAEkc,GAAGre,EAAIoC,EAAEpC,EAAImC,EAAEmc,GAAGte,EAAIoC,EAAEnC,EAC9BA,EAAIkC,EAAEkc,GAAGpe,EAAImC,EAAEpC,EAAImC,EAAEmc,GAAGre,EAAImC,EAAEnC,SAC3BF,EAAKyB,IAAIxB,EAAGC,IAGrB2nB,EAAMplB,IAAM,SAASL,EAAGC,UAGf,IAAIwlB,EACTF,EAAKllB,IAAIL,EAAEkc,GAAIjc,EAAEic,IACjBqJ,EAAKllB,IAAIL,EAAEmc,GAAIlc,EAAEkc,IACjBoJ,EAAKllB,IAAIL,EAAE0lB,GAAIzlB,EAAEylB,MCpMrBY,EAASwG,MAAQnH,EACjBW,EAASyG,OAAS7G,EAClBI,EAAS0G,MAAQnH,EACjBS,EAAS2G,MAAQ7G,EAqBjBI,EAAMC,SAAW,EACjBD,EAAMoB,SAAW,EACjBpB,EAAMsB,YAAc,IAwMN/oB,UAAUmuB,eAAiB,kBAChCnvB,KAAKqpB,WAMAroB,UAAU2oB,UAAY,SAAS7d,UAEpC9L,KAAKqqB,WAAWve,MAMX9K,UAAUyoB,WAAa,SAASjhB,WACxC4mB,EAAY,EACZC,EAAYxvB,EAAK6D,IAAI1D,KAAKqqB,WAAW,GAAI7hB,GACpCnJ,EAAI,EAAGA,EAAIW,KAAKqpB,UAAWhqB,EAAG,KACjCmK,EAAQ3J,EAAK6D,IAAI1D,KAAKqqB,WAAWhrB,GAAImJ,GACrCgB,EAAQ6lB,IACVD,EAAY/vB,EACZgwB,EAAY7lB,UAGT4lB,KAMKpuB,UAAUsuB,iBAAmB,SAAS9mB,UAC3CxI,KAAKqqB,WAAWrqB,KAAKypB,WAAWjhB,OAO3BxH,UAAUe,IAAM,SAASsT,EAAOvJ,GAG5CuJ,EAAMY,qBAAqBjW,KAAM8L,IAYnCwe,EAActpB,UAAUe,IAAM,SAASP,QAChCwd,OAASxd,EAAEwd,YACXC,OAASzd,EAAEyd,YACXyK,GAAK7pB,EAAK0B,MAAMC,EAAEkoB,SAClBE,GAAK/pB,EAAK0B,MAAMC,EAAEooB,SAClBznB,EAAItC,EAAK0B,MAAMC,EAAEW,QACjBF,EAAIT,EAAES,GAWb2mB,EAAQ5nB,UAAUuuB,MAAQ,kBACJ,GAAhBvvB,KAAKqpB,QACA,CAAC,IAAMrpB,KAAKqpB,QACjBrpB,KAAKuqB,KAAKtoB,EAAGjC,KAAKuqB,KAAKb,GAAG5pB,EAAGE,KAAKuqB,KAAKb,GAAG3pB,EAAGC,KAAKuqB,KAAKX,GAAG9pB,EAAGE,KAAKuqB,KAAKX,GAAG7pB,EAC1EC,KAAKwqB,KAAKvoB,EAAGjC,KAAKwqB,KAAKd,GAAG5pB,EAAGE,KAAKwqB,KAAKd,GAAG3pB,EAAGC,KAAKwqB,KAAKZ,GAAG9pB,EAAGE,KAAKwqB,KAAKZ,GAAG7pB,EAC1EC,KAAKyqB,KAAKxoB,EAAGjC,KAAKyqB,KAAKf,GAAG5pB,EAAGE,KAAKyqB,KAAKf,GAAG3pB,EAAGC,KAAKyqB,KAAKb,GAAG9pB,EAAGE,KAAKyqB,KAAKb,GAAG7pB,GAC1E0B,WAEuB,GAAhBzB,KAAKqpB,QACP,CAAC,IAAMrpB,KAAKqpB,QACjBrpB,KAAKuqB,KAAKtoB,EAAGjC,KAAKuqB,KAAKb,GAAG5pB,EAAGE,KAAKuqB,KAAKb,GAAG3pB,EAAGC,KAAKuqB,KAAKX,GAAG9pB,EAAGE,KAAKuqB,KAAKX,GAAG7pB,EAC1EC,KAAKwqB,KAAKvoB,EAAGjC,KAAKwqB,KAAKd,GAAG5pB,EAAGE,KAAKwqB,KAAKd,GAAG3pB,EAAGC,KAAKwqB,KAAKZ,GAAG9pB,EAAGE,KAAKwqB,KAAKZ,GAAG7pB,GAC1E0B,WAEuB,GAAhBzB,KAAKqpB,QACP,CAAC,IAAMrpB,KAAKqpB,QACjBrpB,KAAKuqB,KAAKtoB,EAAGjC,KAAKuqB,KAAKb,GAAG5pB,EAAGE,KAAKuqB,KAAKb,GAAG3pB,EAAGC,KAAKuqB,KAAKX,GAAG9pB,EAAGE,KAAKuqB,KAAKX,GAAG7pB,GAC1E0B,WAGK,IAAMzB,KAAKqpB,SAKtBT,EAAQ5nB,UAAU6nB,UAAY,SAASL,EAAOX,EAAQG,EAAYD,EAAQE,QAInEoB,QAAUb,EAAMla,UAChB,IAAIjP,EAAI,EAAGA,EAAIW,KAAKqpB,UAAWhqB,EAAG,EACjCmC,EAAIxB,KAAK+oB,IAAI1pB,IACf2f,OAASwJ,EAAMxJ,OAAO3f,GACxBmC,EAAEyd,OAASuJ,EAAMvJ,OAAO5f,OACpBmwB,EAAU3H,EAAO8B,UAAUnoB,EAAEwd,QAC7ByQ,EAAU1H,EAAO4B,UAAUnoB,EAAEyd,QACjCzd,EAAEkoB,GAAK9Y,EAAU4C,QAAQwU,EAAYwH,GACrChuB,EAAEooB,GAAKhZ,EAAU4C,QAAQyU,EAAYwH,GACrCjuB,EAAEW,EAAItC,EAAKgD,IAAIrB,EAAEooB,GAAIpoB,EAAEkoB,IACvBloB,EAAES,EAAI,KAKJjC,KAAKqpB,QAAU,EAAG,KAChBqG,EAAUlH,EAAMF,OAChBqH,EAAU3vB,KAAK4vB,aACfD,EAAU,GAAMD,GAAW,EAAMA,EAAUC,GACxCA,EAAUjwB,EAAKQ,gBAEfmpB,QAAU,MAKC,GAAhBrpB,KAAKqpB,QAAc,KACjB7nB,GAAAA,EAAIxB,KAAK+oB,IAAI,IACf/J,OAAS,EACXxd,EAAEyd,OAAS,EACPuQ,EAAU3H,EAAO8B,UAAU,GAC3B8F,EAAU1H,EAAO4B,UAAU,GAC/BnoB,EAAEkoB,GAAK9Y,EAAU4C,QAAQwU,EAAYwH,GACrChuB,EAAEooB,GAAKhZ,EAAU4C,QAAQyU,EAAYwH,GACrCjuB,EAAEW,EAAItC,EAAKgD,IAAIrB,EAAEooB,GAAIpoB,EAAEkoB,IACvBloB,EAAES,EAAI,OACDonB,QAAU,IAKnBT,EAAQ5nB,UAAUipB,WAAa,SAASzB,GACtCA,EAAMF,OAAStoB,KAAK4vB,YACpBpH,EAAMla,MAAQtO,KAAKqpB,YACd,IAAIhqB,EAAI,EAAGA,EAAIW,KAAKqpB,UAAWhqB,EAClCmpB,EAAMxJ,OAAO3f,GAAKW,KAAK+oB,IAAI1pB,GAAG2f,OAC9BwJ,EAAMvJ,OAAO5f,GAAKW,KAAK+oB,IAAI1pB,GAAG4f,QAIlC2J,EAAQ5nB,UAAUuoB,mBAAqB,kBAC7BvpB,KAAKqpB,cACR,SACIxpB,EAAKiE,IAAI9D,KAAKuqB,KAAKpoB,QAEvB,MACC0tB,EAAMhwB,EAAKgD,IAAI7C,KAAKwqB,KAAKroB,EAAGnC,KAAKuqB,KAAKpoB,UAChCtC,EAAK8D,MAAMksB,EAAKhwB,EAAKiE,IAAI9D,KAAKuqB,KAAKpoB,IACnC,EAEDtC,EAAK8D,MAAM,EAAKksB,GAGhBhwB,EAAK8D,MAAMksB,EAAK,kBAMlBhwB,EAAKwB,SAIhBunB,EAAQ5nB,UAAUsoB,gBAAkB,kBAC1BtpB,KAAKqpB,cACR,SAEIxpB,EAAKwB,YAET,SACIxB,EAAK0B,MAAMvB,KAAKuqB,KAAKpoB,QAEzB,SACItC,EAAKgE,QAAQ7D,KAAKuqB,KAAKtoB,EAAGjC,KAAKuqB,KAAKpoB,EAAGnC,KAAKwqB,KAAKvoB,EAAGjC,KAAKwqB,KAAKroB,QAElE,iBAKItC,EAAKwB,SAIhBunB,EAAQ5nB,UAAUgpB,iBAAmB,SAAS8F,EAAIC,UACxC/vB,KAAKqpB,cACR,aAIA,EACHyG,EAAG/tB,IAAI/B,KAAKuqB,KAAKb,IACjBqG,EAAGhuB,IAAI/B,KAAKuqB,KAAKX,eAGd,EACHkG,EAAG1tB,WAAWpC,KAAKuqB,KAAKtoB,EAAGjC,KAAKuqB,KAAKb,GAAI1pB,KAAKwqB,KAAKvoB,EAAGjC,KAAKwqB,KAAKd,IAChEqG,EAAG3tB,WAAWpC,KAAKuqB,KAAKtoB,EAAGjC,KAAKuqB,KAAKX,GAAI5pB,KAAKwqB,KAAKvoB,EAAGjC,KAAKwqB,KAAKZ,eAG7D,EACHkG,EAAG1tB,WAAWpC,KAAKuqB,KAAKtoB,EAAGjC,KAAKuqB,KAAKb,GAAI1pB,KAAKwqB,KAAKvoB,EAAGjC,KAAKwqB,KAAKd,IAChEoG,EAAGrtB,OAAOzC,KAAKyqB,KAAKxoB,EAAGjC,KAAKyqB,KAAKf,IACjCqG,EAAGhuB,IAAI+tB,KASXlH,EAAQ5nB,UAAU4uB,UAAY,kBACpB5vB,KAAKqpB,cACR,OAIA,SACI,OAEJ,SACIxpB,EAAKuD,SAASpD,KAAKuqB,KAAKpoB,EAAGnC,KAAKwqB,KAAKroB,QAEzC,SACItC,EAAK8D,MAAM9D,EAAKgD,IAAI7C,KAAKwqB,KAAKroB,EAAGnC,KAAKuqB,KAAKpoB,GAAItC,EAAKgD,IAAI7C,KAAKyqB,KAAKtoB,EACrEnC,KAAKuqB,KAAKpoB,mBAIP,IAIXymB,EAAQ5nB,UAAUqjB,MAAQ,kBAChBrkB,KAAKqpB,cACR,aAGA,OACE2G,oBAGF,OACEC,WA+BTrH,EAAQ5nB,UAAUgvB,OAAS,eACrBE,EAAKlwB,KAAKuqB,KAAKpoB,EACfguB,EAAKnwB,KAAKwqB,KAAKroB,EACf0tB,EAAMhwB,EAAKgD,IAAIstB,EAAID,GAGnBE,GAASvwB,EAAK6D,IAAIwsB,EAAIL,MACtBO,GAAS,cAEN7F,KAAKtoB,EAAI,YACTonB,QAAU,OAKbgH,EAAQxwB,EAAK6D,IAAIysB,EAAIN,MACrBQ,GAAS,cAEN7F,KAAKvoB,EAAI,OACTonB,QAAU,YACVkB,KAAKxoB,IAAI/B,KAAKwqB,UAKjB8F,EAAU,GAAOD,EAAQD,QACxB7F,KAAKtoB,EAAIouB,EAAQC,OACjB9F,KAAKvoB,EAAImuB,EAAQE,OACjBjH,QAAU,GAQjBT,EAAQ5nB,UAAUivB,OAAS,eACrBC,EAAKlwB,KAAKuqB,KAAKpoB,EACfguB,EAAKnwB,KAAKwqB,KAAKroB,EACfouB,EAAKvwB,KAAKyqB,KAAKtoB,EAMf0tB,EAAMhwB,EAAKgD,IAAIstB,EAAID,GACnBM,EAAQ3wB,EAAK6D,IAAIwsB,EAAIL,GAErBQ,EADQxwB,EAAK6D,IAAIysB,EAAIN,GAErBO,GAASI,EAMTC,EAAM5wB,EAAKgD,IAAI0tB,EAAIL,GACnBQ,EAAQ7wB,EAAK6D,IAAIwsB,EAAIO,GAErBE,EADQ9wB,EAAK6D,IAAI6sB,EAAIE,GAErBG,GAASF,EAMTG,EAAMhxB,EAAKgD,IAAI0tB,EAAIJ,GACnBW,EAAQjxB,EAAK6D,IAAIysB,EAAIU,GAErBE,EADQlxB,EAAK6D,IAAI6sB,EAAIM,GAErBG,GAASF,EAGTG,EAAOpxB,EAAK8D,MAAMksB,EAAKY,GAEvBS,EAASD,EAAOpxB,EAAK8D,MAAMwsB,EAAII,GAC/BY,EAASF,EAAOpxB,EAAK8D,MAAM4sB,EAAIL,GAC/BkB,EAASH,EAAOpxB,EAAK8D,MAAMusB,EAAIC,MAG/BC,GAAS,GAAOQ,GAAS,cACtBrG,KAAKtoB,EAAI,YACTonB,QAAU,MAKbgH,EAAQ,GAAOD,EAAQ,GAAOgB,GAAU,EAAK,KAC3Cd,EAAU,GAAOD,EAAQD,eACxB7F,KAAKtoB,EAAIouB,EAAQC,OACjB9F,KAAKvoB,EAAImuB,EAAQE,YACjBjH,QAAU,MAKbsH,EAAQ,GAAOC,EAAQ,GAAOO,GAAU,EAAK,KAC3CE,EAAU,GAAOV,EAAQC,eACxBrG,KAAKtoB,EAAI0uB,EAAQU,OACjB5G,KAAKxoB,EAAI2uB,EAAQS,OACjBhI,QAAU,YACVmB,KAAKzoB,IAAI/B,KAAKyqB,SAKjB4F,GAAS,GAAOW,GAAS,cACtBxG,KAAKvoB,EAAI,OACTonB,QAAU,YACVkB,KAAKxoB,IAAI/B,KAAKwqB,SAKjBmG,GAAS,GAAOI,GAAS,cACtBtG,KAAKxoB,EAAI,OACTonB,QAAU,YACVkB,KAAKxoB,IAAI/B,KAAKyqB,SAKjBsG,EAAQ,GAAOC,EAAQ,GAAOE,GAAU,EAAK,KAC3CI,EAAU,GAAOP,EAAQC,eACxBxG,KAAKvoB,EAAI8uB,EAAQO,OACjB7G,KAAKxoB,EAAI+uB,EAAQM,OACjBjI,QAAU,YACVkB,KAAKxoB,IAAI/B,KAAKyqB,UAKjB8G,EAAW,GAAOL,EAASC,EAASC,QACnC7G,KAAKtoB,EAAIivB,EAASK,OAClB/G,KAAKvoB,EAAIkvB,EAASI,OAClB9G,KAAKxoB,EAAImvB,EAASG,OAClBlI,QAAU,GAMjBd,EAAS9e,YAAc,SAAS+nB,EAAQxS,EAAQyS,EAAQxS,EAAQwH,EAAKE,OAC/D/nB,EAAQ,IAAIgpB,EAChBhpB,EAAMipB,OAAO9lB,IAAIyvB,EAAQxS,GACzBpgB,EAAMmpB,OAAOhmB,IAAI0vB,EAAQxS,GACzBrgB,EAAMopB,WAAavB,EACnB7nB,EAAMqpB,WAAatB,EACnB/nB,EAAMspB,UAAW,MAEbM,EAAQ,IAAIH,EAEZvpB,EAAS,IAAIqpB,SACjBI,EAASzpB,EAAQ0pB,EAAO5pB,GAEjBE,EAAOsE,SAAW,GAAO1D,EAAKQ,SCthBvC0qB,EAAQ5pB,UAAU0wB,eAAiB,SAASC,OACtCpX,EAAWva,KAAKkrB,WAChBzQ,EAAWza,KAAKmrB,WAEhBqG,EAASjX,EAASlC,WAClBoZ,EAAShX,EAASpC,WAElBuZ,EAAQrX,EAAS1C,UACjBga,EAAQpX,EAAS5C,UAEjBia,EAAW9xB,KAAK+xB,cAEhBrT,EAAaoT,EAASpT,gBAGrB+N,WAAamF,EAAMjV,eACnB+P,WAAamF,EAAMlV,eACnBgQ,QAAUiF,EAAM/U,YAChB+P,QAAUiF,EAAMhV,YAEhB0P,WAAavsB,KAAKiX,gBAClBuV,cAAgBxsB,KAAKkX,mBACrBoV,eAAiBtsB,KAAK4rB,oBAEtBS,aAAe3N,OAEf0N,IAAItqB,eACJqqB,aAAarqB,eAEbwrB,WAAasE,EAAMjV,eACnB4Q,WAAasE,EAAMlV,eACnB6Q,QAAUoE,EAAM/U,YAChB4Q,QAAUoE,EAAMhV,YAChBmQ,eAAiBntB,EAAK0B,MAAMqwB,EAAM9U,QAAQ5L,kBAC1C+b,eAAiBptB,EAAK0B,MAAMswB,EAAM/U,QAAQ5L,kBAE1Cic,UAAYqE,EAAO9f,cACnB0b,UAAYqE,EAAO/f,cAEnBwb,OAAS4E,EAAS1c,UAClB0X,cAAgBjtB,EAAK0B,MAAMuwB,EAASxT,kBACpCyO,aAAeltB,EAAK0B,MAAMuwB,EAASvT,iBACnC8O,aAAe3O,MAEf,IAAI/P,EAAI,EAAGA,EAAI+P,IAAc/P,EAAG,KAC/BqjB,EAAKF,EAAStT,OAAO7P,GACrBsjB,EAAMjyB,KAAKisB,SAAStd,GAAK,IAAI+e,EAE7BiE,EAAKO,cACPD,EAAItT,cAAgBgT,EAAKQ,QAAUH,EAAGrT,cACtCsT,EAAIrT,eAAiB+S,EAAKQ,QAAUH,EAAGpT,iBAGvCqT,EAAItT,cAAgB,EACpBsT,EAAIrT,eAAiB,GAGvBqT,EAAI/H,GAAGpoB,UACPmwB,EAAI9H,GAAGroB,UACPmwB,EAAItE,WAAa,EACjBsE,EAAIrE,YAAc,EAClBqE,EAAIpE,aAAe,OAEdhB,cAAcle,GAAK9O,EAAK0B,MAAMywB,EAAGzT,cAS1CqM,EAAQ5pB,UAAU+wB,YAAc,kBACvB/xB,KAAKurB,YAQdX,EAAQ5pB,UAAUulB,iBAAmB,SAAS6L,OACxCR,EAAQ5xB,KAAKkrB,WAAWrT,UACxBga,EAAQ7xB,KAAKmrB,WAAWtT,UACxB2Z,EAASxxB,KAAKkrB,WAAW7S,WACzBoZ,EAASzxB,KAAKmrB,WAAW9S,kBAEtBrY,KAAKurB,WAAWhF,iBAAiB6L,EAAeR,EAAMnd,eACzD+c,EAAO9f,SAAUmgB,EAAMpd,eAAgBgd,EAAO/f,WAQpDkZ,EAAQ5pB,UAAUqxB,WAAa,SAAS3R,QACjCmL,gBAAkBnL,GAMzBkK,EAAQ5pB,UAAUsxB,UAAY,kBACrBtyB,KAAK6rB,eAMdjB,EAAQ5pB,UAAUuxB,WAAa,kBACtBvyB,KAAK8rB,gBAMdlB,EAAQ5pB,UAAU0X,QAAU,kBACnB1Y,KAAKyX,QAMdmT,EAAQ5pB,UAAUwZ,YAAc,kBACvBxa,KAAKkrB,YAMdN,EAAQ5pB,UAAU0Z,YAAc,kBACvB1a,KAAKmrB,YAMdP,EAAQ5pB,UAAUwxB,eAAiB,kBAC1BxyB,KAAKorB,UAMdR,EAAQ5pB,UAAUyxB,eAAiB,kBAC1BzyB,KAAKqrB,UAMdT,EAAQ5pB,UAAU2Z,iBAAmB,gBAC9BoR,cAAe,GAOtBnB,EAAQ5pB,UAAU8X,YAAc,SAAS1C,QAClCa,WAAab,GAMpBwU,EAAQ5pB,UAAU6X,YAAc,kBACvB7Y,KAAKiX,YAMd2T,EAAQ5pB,UAAU0xB,cAAgB,gBAC3Bzb,WAAayU,EAAY1rB,KAAKkrB,WAAWjU,WAC1CjX,KAAKmrB,WAAWlU,aAOtB2T,EAAQ5pB,UAAUgY,eAAiB,SAAS3C,QACrCa,cAAgBb,GAMvBuU,EAAQ5pB,UAAU+X,eAAiB,kBAC1B/Y,KAAKkX,eAMd0T,EAAQ5pB,UAAU2xB,iBAAmB,gBAC9Bzb,cAAgByU,GAAe3rB,KAAKkrB,WAAWhU,cAChDlX,KAAKmrB,WAAWjU,gBAOtB0T,EAAQ5pB,UAAU4xB,gBAAkB,SAASC,QACtCjH,eAAiBiH,GAMxBjI,EAAQ5pB,UAAU8xB,gBAAkB,kBAC3B9yB,KAAK4rB,gBAMdhB,EAAQ5pB,UAAU+xB,SAAW,SAASjB,EAAUrL,EAAKE,QAC9C2E,cAAcwG,EAAUrL,EAAKzmB,KAAKkrB,WAAYlrB,KAAKorB,SAAUzE,EAC9D3mB,KAAKmrB,WAAYnrB,KAAKqrB,WAY5BT,EAAQ5pB,UAAUgyB,OAAS,SAASC,QAG7BpH,eAAgB,MAEjBqH,GAAW,EACXC,EAAcnzB,KAAK8rB,eAEnBsH,EAAUpzB,KAAKkrB,WAAW5U,WAC1B+c,EAAUrzB,KAAKmrB,WAAW7U,WAC1BiC,EAAS6a,GAAWC,EAEpBzB,EAAQ5xB,KAAKkrB,WAAWrT,UACxBga,EAAQ7xB,KAAKmrB,WAAWtT,UACxB4O,EAAMmL,EAAMnd,eACZkS,EAAMkL,EAAMpd,kBAGZ8D,EAAQ,KACNiZ,EAASxxB,KAAKkrB,WAAW7S,WACzBoZ,EAASzxB,KAAKmrB,WAAW9S,WAC7B6a,EAAW3K,EAAS9e,YAAY+nB,EAAQxxB,KAAKorB,SAAUqG,EACnDzxB,KAAKqrB,SAAU5E,EAAKE,QAGnB4E,WAAW7M,WAAa,MACxB,KAGD4U,EAActzB,KAAKurB,gBAClBA,WAAa,IAAIlN,OAEjB0U,SAAS/yB,KAAKurB,WAAY9E,EAAKE,GACpCuM,EAAWlzB,KAAKurB,WAAW7M,WAAa,MAInC,IAAIrf,EAAI,EAAGA,EAAIW,KAAKurB,WAAW7M,aAAcrf,EAAG,KAC/Ck0B,EAAMvzB,KAAKurB,WAAW/M,OAAOnf,GACjCk0B,EAAI5U,cAAgB,EACpB4U,EAAI3U,eAAiB,MAEhB,IAAIjQ,EAAI,EAAGA,EAAI2kB,EAAY5U,aAAc/P,EAAG,KAC3C6kB,EAAMF,EAAY9U,OAAO7P,MACzB6kB,EAAIxtB,GAAG/G,KAAOs0B,EAAIvtB,GAAG/G,IAAK,CAC5Bs0B,EAAI5U,cAAgB6U,EAAI7U,cACxB4U,EAAI3U,eAAiB4U,EAAI5U,uBAM3BsU,GAAYC,IACdvB,EAAMpZ,UAAS,GACfqZ,EAAMrZ,UAAS,SAIdsT,eAAiBoH,EAEH,GAAfC,GAAoC,GAAZD,GAAoBD,GAC9CA,EAASQ,aAAazzB,MAGL,GAAfmzB,GAAmC,GAAZD,GAAqBD,GAC9CA,EAASS,WAAW1zB,MAGR,GAAVuY,GAAmB2a,GAAYD,GACjCA,EAASU,SAAS3zB,KAAMszB,IAI5B1I,EAAQ5pB,UAAU4yB,wBAA0B,SAASjC,UAC5C3xB,KAAK6zB,yBAAyBlC,GAAM,IAG7C/G,EAAQ5pB,UAAU8yB,2BAA6B,SAASnC,EAAMoC,EAAMC,UAC3Dh0B,KAAK6zB,yBAAyBlC,GAAM,EAAMoC,EAAMC,IAGzDpJ,EAAQ5pB,UAAU6yB,yBAA2B,SAASlC,EAAMsC,EAAKF,EAAMC,OAEjEzZ,EAAWva,KAAKkrB,WAChBzQ,EAAWza,KAAKmrB,WAEhByG,EAAQrX,EAAS1C,UACjBga,EAAQpX,EAAS5C,UAEL+Z,EAAM7U,WACN8U,EAAM9U,eAClBmX,EAAYtC,EAAM5U,WAClBmX,EAAYtC,EAAM7U,WAElBoX,EAAev0B,EAAK0B,MAAMvB,KAAKgtB,gBAC/BqH,EAAex0B,EAAK0B,MAAMvB,KAAKitB,gBAE/BqH,EAAK,EACL1nB,EAAK,EACJqnB,GAAQrC,GAASmC,GAAQnC,GAASoC,IACrCM,EAAKt0B,KAAKstB,WACV1gB,EAAK5M,KAAKwtB,aAGR+G,EAAK,EACLC,EAAK,EACJP,GAAQpC,GAASkC,GAAQlC,GAASmC,IACrCO,EAAKv0B,KAAKutB,WACViH,EAAKx0B,KAAKytB,iBAGRzG,EAAKnnB,EAAK0B,MAAM2yB,EAAUvkB,GAC1B8kB,EAAKP,EAAUjyB,EAEfglB,EAAKpnB,EAAK0B,MAAM4yB,EAAUxkB,GAC1B+kB,EAAKP,EAAUlyB,EAEf0yB,EAAgB,EAGXhmB,EAAI,EAAGA,EAAI3O,KAAKqtB,eAAgB1e,EAAG,KAStCnE,EAAQoY,EAAOgS,EARfnO,EAAM7V,EAAUI,WAChB2V,EAAM/V,EAAUI,kBACpByV,EAAI1V,EAAEhP,IAAI0yB,GACV9N,EAAI5V,EAAEhP,IAAI2yB,GACVjO,EAAIrc,EAAIvK,EAAKgD,IAAImkB,EAAIxW,EAAIgD,QAAQiT,EAAI1V,EAAGqjB,IACxCzN,EAAIvc,EAAIvK,EAAKgD,IAAIokB,EAAIzW,EAAIgD,QAAQmT,EAAI5V,EAAGsjB,IAIhCr0B,KAAKktB,aACR7O,EAAS2H,cACRa,EAASjW,EAAU4C,QAAQiT,EAAKzmB,KAAK+sB,cACrCjG,EAASlW,EAAU4C,QAAQmT,EAAK3mB,KAAK6sB,cAAc,KACvDriB,EAAS3K,EAAKgD,IAAIikB,EAAQD,IACnB3jB,YACP0f,EAAQ/iB,EAAKgE,QAAQ,GAAKgjB,EAAQ,GAAKC,GACvC8N,EAAa/0B,EAAK6D,IAAI7D,EAAKgD,IAAIikB,EAAQD,GAASrc,GAAUxK,KAAKmtB,UACzDntB,KAAKotB,qBAGR/O,EAAS4H,QACZzb,EAASgG,EAAIgD,QAAQiT,EAAI1V,EAAG/Q,KAAK8sB,mBAC7B5F,EAAatW,EAAU4C,QAAQiT,EAAKzmB,KAAK+sB,cACzC5F,EAAYvW,EAAU4C,QAAQmT,EAAK3mB,KAAK6sB,cAAcle,IAC1DimB,EAAa/0B,EAAK6D,IAAI7D,EAAKgD,IAAIskB,EAAWD,GAAa1c,GACjDxK,KAAKmtB,UAAYntB,KAAKotB,UAC5BxK,EAAQuE,aAGL9I,EAAS6H,QACZ1b,EAASgG,EAAIgD,QAAQmT,EAAI5V,EAAG/Q,KAAK8sB,eAC7B5F,EAAatW,EAAU4C,QAAQmT,EAAK3mB,KAAK+sB,cACzC5F,EAAYvW,EAAU4C,QAAQiT,EAAKzmB,KAAK6sB,cAAcle,IAC1DimB,EAAa/0B,EAAK6D,IAAI7D,EAAKgD,IAAIskB,EAAWD,GAAa1c,GACjDxK,KAAKmtB,UAAYntB,KAAKotB,UAC5BxK,EAAQuE,EAGR3c,EAAO1H,KAAK,OAIVonB,EAAKrqB,EAAKgD,IAAI+f,EAAOoE,GACrBmD,EAAKtqB,EAAKgD,IAAI+f,EAAOqE,GAGzB0N,EAAgBj1B,EAAKkB,IAAI+zB,EAAeC,OAEpC5sB,EAAYisB,EAAM3vB,EAAS2D,YAAc3D,EAAS0D,UAClDhB,EAAa1C,EAAS0C,WACtBU,EAAsBpD,EAASoD,oBAG/BqF,EAAIrN,EAAKoB,MAAMkH,GAAa4sB,EAAa5tB,IACxCU,EAAqB,GAGtBmtB,EAAMh1B,EAAK8D,MAAMumB,EAAI1f,GACrBsqB,EAAMj1B,EAAK8D,MAAMwmB,EAAI3f,GACrBuqB,EAAIT,EAAKC,EAAK3nB,EAAKioB,EAAMA,EAAML,EAAKM,EAAMA,EAG1C5R,EAAU6R,EAAI,GAAOhoB,EAAIgoB,EAAI,EAE7BC,EAAIn1B,EAAKiD,IAAIogB,EAAS1Y,GAE1Bwc,EAAGpkB,OAAO0xB,EAAIU,GACdP,GAAM7nB,EAAK/M,EAAK8D,MAAMumB,EAAI8K,GAE1B/N,EAAGxkB,OAAO8xB,EAAIS,GACdN,GAAMF,EAAK30B,EAAK8D,MAAMwmB,EAAI6K,UAG5Bd,EAAUvkB,EAAE5N,IAAIilB,GAChBkN,EAAUjyB,EAAIwyB,EAEdN,EAAUxkB,EAAE5N,IAAIklB,GAChBkN,EAAUlyB,EAAIyyB,EAEPC,GAcT/J,EAAQ5pB,UAAUi0B,uBAAyB,SAAStD,OAC9CpX,EAAWva,KAAKkrB,WAChBzQ,EAAWza,KAAKmrB,WAEhByG,EAAQrX,EAAS1C,UACjBga,EAAQpX,EAAS5C,UAEjBqd,EAAYtD,EAAM7U,WAClBoY,EAAYtD,EAAM9U,WAElBmX,EAAYtC,EAAM5U,WAClBmX,EAAYtC,EAAM7U,WAElB0J,EAAU1mB,KAAKmtB,UACfvG,EAAU5mB,KAAKotB,UACf0E,EAAW9xB,KAAK+xB,cAEhBuC,EAAKt0B,KAAKysB,WACV8H,EAAKv0B,KAAK0sB,WACV9f,EAAK5M,KAAK2sB,QACV6H,EAAKx0B,KAAK4sB,QACVwH,EAAev0B,EAAK0B,MAAMvB,KAAKgtB,gBAC/BqH,EAAex0B,EAAK0B,MAAMvB,KAAKitB,gBAE/BjG,EAAKnnB,EAAK0B,MAAM2yB,EAAUvkB,GAC1B8kB,EAAKP,EAAUjyB,EACfmzB,EAAKv1B,EAAK0B,MAAM2zB,EAAU1zB,GAC1BkoB,EAAKwL,EAAU/yB,EAEf8kB,EAAKpnB,EAAK0B,MAAM4yB,EAAUxkB,GAC1B+kB,EAAKP,EAAUlyB,EACfozB,EAAKx1B,EAAK0B,MAAM4zB,EAAU3zB,GAC1BooB,EAAKuL,EAAUhzB,EAIfskB,EAAM7V,EAAUI,WAChB2V,EAAM/V,EAAUI,WACpByV,EAAI1V,EAAEhP,IAAI0yB,GACV9N,EAAI5V,EAAEhP,IAAI2yB,GACVjO,EAAIrc,EAAEhI,WAAW,EAAG4kB,GAAK,EAAGxW,EAAIgD,QAAQiT,EAAI1V,EAAGqjB,IAC/CzN,EAAIvc,EAAEhI,WAAW,EAAG6kB,GAAK,EAAGzW,EAAIgD,QAAQmT,EAAI5V,EAAGsjB,QAE3CjC,EAAgBN,EAASvL,iBAAiB,KAAME,EAAKC,EAASC,EAAKC,QAElEsF,SAASnqB,IAAIqwB,EAAc5nB,YAE3B,IAAImE,EAAI,EAAGA,EAAI3O,KAAKqsB,eAAgB1d,EAAG,KACtCsjB,EAAMjyB,KAAKisB,SAAStd,GAExBsjB,EAAI/H,GAAGnoB,IAAIlC,EAAKgD,IAAIuvB,EAAc5T,OAAO7P,GAAIqY,IAC7CiL,EAAI9H,GAAGpoB,IAAIlC,EAAKgD,IAAIuvB,EAAc5T,OAAO7P,GAAIsY,QAEzC4N,EAAMh1B,EAAK8D,MAAMsuB,EAAI/H,GAAIlqB,KAAKksB,UAC9B4I,EAAMj1B,EAAK8D,MAAMsuB,EAAI9H,GAAInqB,KAAKksB,UAE9BoJ,EAAUhB,EAAKC,EAAK3nB,EAAKioB,EAAMA,EAAML,EAAKM,EAAMA,EAEpD7C,EAAItE,WAAa2H,EAAU,EAAM,EAAMA,EAAU,MAE7CC,EAAU11B,EAAK8D,MAAM3D,KAAKksB,SAAU,GAEpCsJ,EAAM31B,EAAK8D,MAAMsuB,EAAI/H,GAAIqL,GACzBE,EAAM51B,EAAK8D,MAAMsuB,EAAI9H,GAAIoL,GAEzBG,EAAWpB,EAAKC,EAAK3nB,EAAK4oB,EAAMA,EAAMhB,EAAKiB,EAAMA,EAErDxD,EAAIrE,YAAc8H,EAAW,EAAM,EAAMA,EAAW,EAGpDzD,EAAIpE,aAAe,MACf8H,EAAO91B,EAAK6D,IAAI1D,KAAKksB,SAAUmJ,GAC7Bx1B,EAAK6D,IAAI1D,KAAKksB,SAAUrsB,EAAK8D,MAAMimB,EAAIqI,EAAI9H,KAC3CtqB,EAAK6D,IAAI1D,KAAKksB,SAAUkJ,GACxBv1B,EAAK6D,IAAI1D,KAAKksB,SAAUrsB,EAAK8D,MAAM+lB,EAAIuI,EAAI/H,KAC7CyL,GAAQrxB,EAASmD,oBACnBwqB,EAAIpE,cAAgB7tB,KAAKwsB,cAAgBmJ,MAKpB,GAArB31B,KAAKqsB,cAAqBsF,EAAKiE,WAAY,KACzCC,EAAO71B,KAAKisB,SAAS,GACrB6J,EAAO91B,KAAKisB,SAAS,GAErB8J,EAAOl2B,EAAK8D,MAAMkyB,EAAK3L,GAAIlqB,KAAKksB,UAChC8J,EAAOn2B,EAAK8D,MAAMkyB,EAAK1L,GAAInqB,KAAKksB,UAChC+J,EAAOp2B,EAAK8D,MAAMmyB,EAAK5L,GAAIlqB,KAAKksB,UAChCgK,EAAOr2B,EAAK8D,MAAMmyB,EAAK3L,GAAInqB,KAAKksB,UAEhCiK,EAAM7B,EAAKC,EAAK3nB,EAAKmpB,EAAOA,EAAOvB,EAAKwB,EAAOA,EAC/CI,EAAM9B,EAAKC,EAAK3nB,EAAKqpB,EAAOA,EAAOzB,EAAK0B,EAAOA,EAC/CG,EAAM/B,EAAKC,EAAK3nB,EAAKmpB,EAAOE,EAAOzB,EAAKwB,EAAOE,EAI/CC,EAAMA,EADiB,KACaA,EAAMC,EAAMC,EAAMA,SAEnDjK,IAAIjO,GAAGpc,IAAIo0B,EAAKE,QAChBjK,IAAIhO,GAAGrc,IAAIs0B,EAAKD,QAChBjK,aAAapqB,IAAI/B,KAAKosB,IAAIlI,oBAI1BmI,aAAe,EAIxB6H,EAAUvkB,EAAE5N,IAAIilB,GAChBkN,EAAUjyB,EAAIwyB,EACdS,EAAU1zB,EAAEO,IAAIqzB,GAChBF,EAAU/yB,EAAIunB,EAEdyK,EAAUxkB,EAAE5N,IAAIklB,GAChBkN,EAAUlyB,EAAIyyB,EACdS,EAAU3zB,EAAEO,IAAIszB,GAChBF,EAAUhzB,EAAIynB,GAGhBgB,EAAQ5pB,UAAUs1B,oBAAsB,SAAS3E,OAC3CpX,EAAWva,KAAKkrB,WAChBzQ,EAAWza,KAAKmrB,WAEhByG,EAAQrX,EAAS1C,UACjBga,EAAQpX,EAAS5C,UAEjBqd,EAAYtD,EAAM7U,WAClBoY,EAAYtD,EAAM9U,WACN6U,EAAM5U,WACN6U,EAAM7U,mBAElBsX,EAAKt0B,KAAKysB,WACV7f,EAAK5M,KAAK2sB,QACV4H,EAAKv0B,KAAK0sB,WACV8H,EAAKx0B,KAAK4sB,QAEVwI,EAAKv1B,EAAK0B,MAAM2zB,EAAU1zB,GAC1BkoB,EAAKwL,EAAU/yB,EACfkzB,EAAKx1B,EAAK0B,MAAM4zB,EAAU3zB,GAC1BooB,EAAKuL,EAAUhzB,EAEfqI,EAASxK,KAAKksB,SACdqJ,EAAU11B,EAAK8D,MAAM6G,EAAQ,GAExBmE,EAAI,EAAGA,EAAI3O,KAAKqsB,eAAgB1d,EAAG,KACtCsjB,EAAMjyB,KAAKisB,SAAStd,GAEpBqmB,EAAIn1B,EAAKgE,QAAQouB,EAAItT,cAAenU,EAAQynB,EAAIrT,eAAgB2W,GACpE7L,GAAM9c,EAAK/M,EAAK8D,MAAMsuB,EAAI/H,GAAI8K,GAC9BI,EAAGxyB,OAAO0xB,EAAIU,GACdpL,GAAM4K,EAAK30B,EAAK8D,MAAMsuB,EAAI9H,GAAI6K,GAC9BK,EAAG5yB,OAAO8xB,EAAIS,GAGhBE,EAAU1zB,EAAEO,IAAIqzB,GAChBF,EAAU/yB,EAAIunB,EACdyL,EAAU3zB,EAAEO,IAAIszB,GAChBF,EAAUhzB,EAAIynB,GAGhBgB,EAAQ5pB,UAAUu1B,wBAA0B,SAAS5E,WAC/CG,EAAW9xB,KAAKurB,WACX5c,EAAI,EAAGA,EAAI3O,KAAKqsB,eAAgB1d,EACvCmjB,EAAStT,OAAO7P,GAAGgQ,cAAgB3e,KAAKisB,SAAStd,GAAGgQ,cACpDmT,EAAStT,OAAO7P,GAAGiQ,eAAiB5e,KAAKisB,SAAStd,GAAGiQ,gBAIzDgM,EAAQ5pB,UAAUw1B,wBAA0B,SAAS7E,OAC/CC,EAAQ5xB,KAAKkrB,WAAWlU,OACxB6a,EAAQ7xB,KAAKmrB,WAAWnU,OAExBke,EAAYtD,EAAM7U,WACN6U,EAAM5U,eAElBmY,EAAYtD,EAAM9U,WACN8U,EAAM7U,mBAElBsX,EAAKt0B,KAAKysB,WACV7f,EAAK5M,KAAK2sB,QACV4H,EAAKv0B,KAAK0sB,WACV8H,EAAKx0B,KAAK4sB,QAEVwI,EAAKv1B,EAAK0B,MAAM2zB,EAAU1zB,GAC1BkoB,EAAKwL,EAAU/yB,EACfkzB,EAAKx1B,EAAK0B,MAAM4zB,EAAU3zB,GAC1BooB,EAAKuL,EAAUhzB,EAEfqI,EAASxK,KAAKksB,SACdqJ,EAAU11B,EAAK8D,MAAM6G,EAAQ,GAC7B4L,EAAWpW,KAAKusB,WAMX5d,EAAI,EAAGA,EAAI3O,KAAKqsB,eAAgB1d,EAAG,KACtCsjB,EAAMjyB,KAAKisB,SAAStd,IAGpB8nB,EAAK52B,EAAKwB,QACXmB,WAAW,EAAG6yB,EAAI,EAAGx1B,EAAK8D,MAAMimB,EAAIqI,EAAI9H,KAC3CsM,EAAG9zB,WAAW,EAAGyyB,EAAI,EAAGv1B,EAAK8D,MAAM+lB,EAAIuI,EAAI/H,SAGvCwM,EAAK72B,EAAK6D,IAAI+yB,EAAIlB,GAAWv1B,KAAKssB,eAClCqK,EAAS1E,EAAIrE,aAAgB8I,EAG7BE,EAAcxgB,EAAW6b,EAAItT,cAGjCgY,GAFIE,EAAan3B,EAAKoB,MAAMmxB,EAAIrT,eAAiB+X,GAASC,EACtDA,IACkB3E,EAAIrT,eAC1BqT,EAAIrT,eAAiBiY,MAGjB7B,EAAIn1B,EAAKiD,IAAI6zB,EAAQpB,GAEzBH,EAAGxyB,OAAO0xB,EAAIU,GACdtL,GAAM9c,EAAK/M,EAAK8D,MAAMsuB,EAAI/H,GAAI8K,GAE9BK,EAAG5yB,OAAO8xB,EAAIS,GACdpL,GAAM4K,EAAK30B,EAAK8D,MAAMsuB,EAAI9H,GAAI6K,MAIP,GAArBh1B,KAAKqsB,cAAwC,GAAnBsF,EAAKiE,eAC5B,IAAIv2B,EAAI,EAAGA,EAAIW,KAAKqsB,eAAgBhtB,EAAG,KAItCo3B,EAHAxE,EAAMjyB,KAAKisB,SAAS5sB,IAGpBo3B,EAAK52B,EAAKwB,QACXmB,WAAW,EAAG6yB,EAAI,EAAGx1B,EAAK8D,MAAMimB,EAAIqI,EAAI9H,KAC3CsM,EAAG9zB,WAAW,EAAGyyB,EAAI,EAAGv1B,EAAK8D,MAAM+lB,EAAIuI,EAAI/H,SAOvC2M,EAJAC,EAAKj3B,EAAK6D,IAAI+yB,EAAIjsB,GAClBmsB,GAAU1E,EAAItE,YAAcmJ,EAAK7E,EAAIpE,cAIzC8I,GADIE,EAAan3B,EAAKmB,IAAIoxB,EAAItT,cAAgBgY,EAAQ,IAChC1E,EAAItT,cAC1BsT,EAAItT,cAAgBkY,EAGhB7B,EAAIn1B,EAAKiD,IAAI6zB,EAAQnsB,GAEzB4qB,EAAGxyB,OAAO0xB,EAAIU,GACdtL,GAAM9c,EAAK/M,EAAK8D,MAAMsuB,EAAI/H,GAAI8K,GAE9BK,EAAG5yB,OAAO8xB,EAAIS,GACdpL,GAAM4K,EAAK30B,EAAK8D,MAAMsuB,EAAI9H,GAAI6K,OAE3B,KA0CDa,EAAO71B,KAAKisB,SAAS,GACrB6J,EAAO91B,KAAKisB,SAAS,GAErBhqB,EAAIpC,EAAKyB,IAAIu0B,EAAKlX,cAAemX,EAAKnX,eAItCoY,EAAMl3B,EAAKwB,OAAOiB,IAAI+yB,GAAI/yB,IAAIzC,EAAK8D,MAAMimB,EAAIiM,EAAK1L,KAAKtnB,IAAIuyB,GAAIvyB,IAAIhD,EAAK8D,MAAM+lB,EAAImM,EAAK3L,KACvF8M,EAAMn3B,EAAKwB,OAAOiB,IAAI+yB,GAAI/yB,IAAIzC,EAAK8D,MAAMimB,EAAIkM,EAAK3L,KAAKtnB,IAAIuyB,GAAIvyB,IAAIhD,EAAK8D,MAAM+lB,EAAIoM,EAAK5L,KAGvF+M,EAAMp3B,EAAK6D,IAAIqzB,EAAKvsB,GACpB0sB,EAAMr3B,EAAK6D,IAAIszB,EAAKxsB,GAEpBtI,EAAIrC,EAAKyB,IAAI21B,EAAMpB,EAAKhI,aAAcqJ,EAAMpB,EAAKjI,kBAGrD3rB,EAAEW,IAAIqb,EAAM1K,QAAQxT,KAAKosB,IAAKnqB,MAKrB,KAUHnC,EAAIoe,EAAM1K,QAAQxT,KAAKmsB,aAAcjqB,GAAG4B,SAExChE,EAAEA,GAAK,GAAOA,EAAEC,GAAK,EAAK,KAExByI,EAAI3I,EAAKgD,IAAI/C,EAAGmC,GAGhBk1B,EAAKt3B,EAAKiD,IAAI0F,EAAE1I,EAAG0K,GACnB4sB,EAAKv3B,EAAKiD,IAAI0F,EAAEzI,EAAGyK,GAEvB4qB,EAAGzyB,WAAW2xB,EAAI6C,EAAI7C,EAAI8C,GAC1B1N,GAAM9c,GAAM/M,EAAK8D,MAAMkyB,EAAK3L,GAAIiN,GAAMt3B,EAAK8D,MAAMmyB,EAAK5L,GAAIkN,IAE1D/B,EAAG7yB,WAAW+xB,EAAI4C,EAAI5C,EAAI6C,GAC1BxN,GAAM4K,GAAM30B,EAAK8D,MAAMkyB,EAAK1L,GAAIgN,GAAMt3B,EAAK8D,MAAMmyB,EAAK3L,GAAIiN,IAG1DvB,EAAKlX,cAAgB7e,EAAEA,EACvBg2B,EAAKnX,cAAgB7e,EAAEC,WAuBzBD,EAAEA,GAAK+1B,EAAKlI,WAAazrB,EAAEpC,EAC3BA,EAAEC,EAAI,EACNk3B,EAAM,EACNC,EAAMl3B,KAAKosB,IAAIjO,GAAGpe,EAAID,EAAEA,EAAIoC,EAAEnC,EAE1BD,EAAEA,GAAK,GAAOo3B,GAAO,EAAK,CAExB1uB,EAAI3I,EAAKgD,IAAI/C,EAAGmC,GAGhBk1B,EAAKt3B,EAAKiD,IAAI0F,EAAE1I,EAAG0K,GACnB4sB,EAAKv3B,EAAKiD,IAAI0F,EAAEzI,EAAGyK,GACvB4qB,EAAGzyB,WAAW2xB,EAAI6C,EAAI7C,EAAI8C,GAC1B1N,GAAM9c,GAAM/M,EAAK8D,MAAMkyB,EAAK3L,GAAIiN,GAAMt3B,EAAK8D,MAAMmyB,EAAK5L,GAAIkN,IAE1D/B,EAAG7yB,WAAW+xB,EAAI4C,EAAI5C,EAAI6C,GAC1BxN,GAAM4K,GAAM30B,EAAK8D,MAAMkyB,EAAK1L,GAAIgN,GAAMt3B,EAAK8D,MAAMmyB,EAAK3L,GAAIiN,IAG1DvB,EAAKlX,cAAgB7e,EAAEA,EACvBg2B,EAAKnX,cAAgB7e,EAAEC,WAsBzBD,EAAEA,EAAI,EACNA,EAAEC,GAAK+1B,EAAKnI,WAAazrB,EAAEnC,EAC3Bk3B,EAAMj3B,KAAKosB,IAAIhO,GAAGte,EAAIA,EAAEC,EAAImC,EAAEpC,EAC9Bo3B,EAAM,EAEFp3B,EAAEC,GAAK,GAAOk3B,GAAO,EAAK,CAExBzuB,EAAI3I,EAAKgD,IAAI/C,EAAGmC,GAGhBk1B,EAAKt3B,EAAKiD,IAAI0F,EAAE1I,EAAG0K,GACnB4sB,EAAKv3B,EAAKiD,IAAI0F,EAAEzI,EAAGyK,GACvB4qB,EAAGzyB,WAAW2xB,EAAI6C,EAAI7C,EAAI8C,GAC1B1N,GAAM9c,GAAM/M,EAAK8D,MAAMkyB,EAAK3L,GAAIiN,GAAMt3B,EAAK8D,MAAMmyB,EAAK5L,GAAIkN,IAE1D/B,EAAG7yB,WAAW+xB,EAAI4C,EAAI5C,EAAI6C,GAC1BxN,GAAM4K,GAAM30B,EAAK8D,MAAMkyB,EAAK1L,GAAIgN,GAAMt3B,EAAK8D,MAAMmyB,EAAK3L,GAAIiN,IAG1DvB,EAAKlX,cAAgB7e,EAAEA,EACvBg2B,EAAKnX,cAAgB7e,EAAEC,WAsBzBD,EAAEA,EAAI,EACNA,EAAEC,EAAI,EACNk3B,EAAM/0B,EAAEpC,EACRo3B,EAAMh1B,EAAEnC,EAEJk3B,GAAO,GAAOC,GAAO,EAAK,CAExB1uB,EAAI3I,EAAKgD,IAAI/C,EAAGmC,GAGhBk1B,EAAKt3B,EAAKiD,IAAI0F,EAAE1I,EAAG0K,GACnB4sB,EAAKv3B,EAAKiD,IAAI0F,EAAEzI,EAAGyK,GACvB4qB,EAAGzyB,WAAW2xB,EAAI6C,EAAI7C,EAAI8C,GAC1B1N,GAAM9c,GAAM/M,EAAK8D,MAAMkyB,EAAK3L,GAAIiN,GAAMt3B,EAAK8D,MAAMmyB,EAAK5L,GAAIkN,IAE1D/B,EAAG7yB,WAAW+xB,EAAI4C,EAAI5C,EAAI6C,GAC1BxN,GAAM4K,GAAM30B,EAAK8D,MAAMkyB,EAAK1L,GAAIgN,GAAMt3B,EAAK8D,MAAMmyB,EAAK3L,GAAIiN,IAG1DvB,EAAKlX,cAAgB7e,EAAEA,EACvBg2B,EAAKnX,cAAgB7e,EAAEC,eAW7Bm1B,EAAU1zB,EAAEO,IAAIqzB,GAChBF,EAAU/yB,EAAIunB,EAEdyL,EAAU3zB,EAAEO,IAAIszB,GAChBF,EAAUhzB,EAAIynB,GAmBhB,IAAIyN,GAAc,GChjClB,SAASC,UACFjU,MAAQ,UACRC,MAAQ,UACRqH,KAAO,UACPhd,KAAO,KA4Bd,SAAS4pB,GAAMzgB,EAAK8a,EAAOC,GACzBD,EAAQ9a,EAAI8a,OAASA,EACrBC,EAAQ/a,EAAI+a,OAASA,OAMhBpgB,OAAS,qBAET+lB,QAAU5F,OACV6F,QAAU5F,OAEV6F,QAAU,OACVnU,qBAAuBzM,EAAI6gB,sBAE3B/Z,OAAS,UACTnG,OAAS,UAETmgB,QAAU,IAAIN,QACdO,QAAU,IAAIP,QAEd9a,cAAe,OACf5E,WAAad,EAAI5Q,SD8/BxB0kB,EAAQkN,QAAU,SAASC,EAAOC,EAAOC,GAEvCZ,GAAYU,GAASV,GAAYU,IAAU,GAC3CV,GAAYU,GAAOC,GAASC,GAG9BrN,EAAQhrB,OAAS,SAAS2a,EAAUyE,EAAQvE,EAAUwE,OAKhD3E,EAASyQ,EAJT7L,EAAQ3E,EAAShF,UACjB4J,EAAQ1E,EAASlF,aAIjBwV,EAAcsM,GAAYnY,IAAUmY,GAAYnY,GAAOC,GACzD7E,EAAU,IAAIsQ,EAAQrQ,EAAUyE,EAAQvE,EAAUwE,EAAQ8L,OACrD,CAAA,KAAIA,EAAcsM,GAAYlY,IAAUkY,GAAYlY,GAAOD,WAGzD,KAFP5E,EAAU,IAAIsQ,EAAQnQ,EAAUwE,EAAQ1E,EAAUyE,EAAQ+L,GAM5DxQ,EAAWD,EAAQE,cACnBC,EAAWH,EAAQI,cACnBsE,EAAS1E,EAAQkY,iBACjBvT,EAAS3E,EAAQmY,qBACbb,EAAQrX,EAAS1C,UACjBga,EAAQpX,EAAS5C,iBAGrByC,EAAQ0Q,QAAQ1Q,QAAUA,EAC1BA,EAAQ0Q,QAAQ3H,MAAQwO,EAExBvX,EAAQ0Q,QAAQL,KAAO,KACvBrQ,EAAQ0Q,QAAQrd,KAAOikB,EAAMlU,cACF,MAAvBkU,EAAMlU,gBACRkU,EAAMlU,cAAciN,KAAOrQ,EAAQ0Q,SAErC4G,EAAMlU,cAAgBpD,EAAQ0Q,QAG9B1Q,EAAQ2Q,QAAQ3Q,QAAUA,EAC1BA,EAAQ2Q,QAAQ5H,MAAQuO,EAExBtX,EAAQ2Q,QAAQN,KAAO,KACvBrQ,EAAQ2Q,QAAQtd,KAAOkkB,EAAMnU,cACF,MAAvBmU,EAAMnU,gBACRmU,EAAMnU,cAAciN,KAAOrQ,EAAQ2Q,SAErC4G,EAAMnU,cAAgBpD,EAAQ2Q,QAGH,GAAvB1Q,EAASjE,YAA8C,GAAvBmE,EAASnE,aAC3Csb,EAAMpZ,UAAS,GACfqZ,EAAMrZ,UAAS,IAGV8B,GAGTsQ,EAAQsN,QAAU,SAAS5d,EAAS2Y,OAC9B1Y,EAAWD,EAAQ4Q,WACnBzQ,EAAWH,EAAQ6Q,WAEnByG,EAAQrX,EAAS1C,UACjBga,EAAQpX,EAAS5C,UAEjByC,EAAQiY,cACVU,EAASS,WAAWpZ,GAIlBA,EAAQ0Q,QAAQL,OAClBrQ,EAAQ0Q,QAAQL,KAAKhd,KAAO2M,EAAQ0Q,QAAQrd,MAG1C2M,EAAQ0Q,QAAQrd,OAClB2M,EAAQ0Q,QAAQrd,KAAKgd,KAAOrQ,EAAQ0Q,QAAQL,MAG1CrQ,EAAQ0Q,SAAW4G,EAAMlU,gBAC3BkU,EAAMlU,cAAgBpD,EAAQ0Q,QAAQrd,MAIpC2M,EAAQ2Q,QAAQN,OAClBrQ,EAAQ2Q,QAAQN,KAAKhd,KAAO2M,EAAQ2Q,QAAQtd,MAG1C2M,EAAQ2Q,QAAQtd,OAClB2M,EAAQ2Q,QAAQtd,KAAKgd,KAAOrQ,EAAQ2Q,QAAQN,MAG1CrQ,EAAQ2Q,SAAW4G,EAAMnU,gBAC3BmU,EAAMnU,cAAgBpD,EAAQ2Q,QAAQtd,MAGpC2M,EAAQiR,WAAW7M,WAAa,GAA4B,GAAvBnE,EAASjE,YACpB,GAAvBmE,EAASnE,aACdsb,EAAMpZ,UAAS,GACfqZ,EAAMrZ,UAAS,QAGb0G,EAAQ3E,EAAShF,UACjB4J,EAAQ1E,EAASlF,UAEjB4iB,EAAad,GAAYnY,GAAOC,GAAOgZ,WACjB,mBAAfA,GACTA,EAAW7d,ICtmCfid,GAAMviB,MAAQ,GAEduiB,GAAMr2B,aAAe,SAASC,EAAM8T,EAASC,OACvCC,EAAQoiB,GAAMviB,MAAM7T,EAAKiU,aACtBD,GAASD,EAAQC,EAAOhU,IAQjCo2B,GAAMv2B,UAAU8f,SAAW,kBAClB9gB,KAAKw3B,QAAQ1W,YAAc9gB,KAAKy3B,QAAQ3W,YAQjDyW,GAAMv2B,UAAUuU,QAAU,kBACjBvV,KAAKyR,QAQd8lB,GAAMv2B,UAAUo3B,SAAW,kBAClBp4B,KAAKw3B,SAQdD,GAAMv2B,UAAUq3B,SAAW,kBAClBr4B,KAAKy3B,SAQdF,GAAMv2B,UAAU0X,QAAU,kBACjB1Y,KAAKyX,QAGd8f,GAAMv2B,UAAUkK,YAAc,kBACrBlL,KAAK4X,YAGd2f,GAAMv2B,UAAUyX,YAAc,SAAStX,QAChCyW,WAAazW,GAUpBo2B,GAAMv2B,UAAUs3B,oBAAsB,kBAC7Bt4B,KAAKujB,oBAQdgU,GAAMv2B,UAAUu3B,WAAa,aAQ7BhB,GAAMv2B,UAAUw3B,WAAa,aAS7BjB,GAAMv2B,UAAUy3B,iBAAmB,SAASC,KAS5CnB,GAAMv2B,UAAU23B,kBAAoB,SAASD,KAQ7CnB,GAAMv2B,UAAU6N,YAAc,SAASC,KAKvCyoB,GAAMv2B,UAAU43B,wBAA0B,SAASjH,KAKnD4F,GAAMv2B,UAAU63B,yBAA2B,SAASlH,KAMpD4F,GAAMv2B,UAAU83B,yBAA2B,SAASnH,KC/N7C,OAAY,kBACVoH,KAAKC,UAGM,SAASC,UACpBF,KAAKC,MAAQC,GCqBtBC,GAAanK,MAoCb,gBACOlH,OAAS,IAAIC,QACbC,OAAS,IAAID,QACbqR,OAAS,IAAIloB,OACbmoB,OAAS,IAAInoB,OACbooB,MAxCPH,GAAalK,OAASsK,GAqBtB,IAAI1R,GAAgBW,EAASwG,MACzB5G,GAAiBI,EAASyG,OAC1BlH,GAAgBS,EAAS0G,MACzB5G,GAAeE,EAAS2G,MAgC5B,SAASoK,UACFC,WACA/pB,EAuBP,SAAS0pB,GAAap6B,EAAQF,OACxB46B,EAAQC,OAEVhR,EAAMiR,SAER56B,EAAOy6B,MAAQD,GAAUK,UACzB76B,EAAO0Q,EAAI5Q,EAAMy6B,SAEbxR,EAASjpB,EAAMipB,OACfE,EAASnpB,EAAMmpB,OAEfoR,EAASv6B,EAAMu6B,OACfC,EAASx6B,EAAMw6B,OAInBD,EAAOj2B,YACPk2B,EAAOl2B,gBAEHm2B,EAAOz6B,EAAMy6B,KAEbO,EAAc/R,EAAOnW,SAAWqW,EAAOrW,SACvCmoB,EAASn6B,EAAKmB,IAAIyD,EAAS0C,WAAY4yB,EAAc,EAAMt1B,EAAS0C,YACpE8yB,EAAY,IAAOx1B,EAAS0C,WAG5B2D,EAAK,EACLovB,EAAkBz1B,EAASiD,iBAC3B6hB,EAAO,EAGPZ,EAAQ,IAAIH,GAEZ2R,EAAgB,IAAIpS,OACxBoS,EAAcnS,OAASjpB,EAAMipB,OAC7BmS,EAAcjS,OAASnpB,EAAMmpB,OAC7BiS,EAAc9R,UAAW,IAIhB,KACHzB,EAAM7V,EAAUI,WAChB2V,EAAM/V,EAAUI,WACpBmoB,EAAO1kB,aAAagS,EAAK9b,GACzByuB,EAAO3kB,aAAakS,EAAKhc,GAIzBqvB,EAAchS,WAAavB,EAC3BuT,EAAc/R,WAAatB,MACvBsT,EAAiB,IAAI9R,MACzBI,EAAS0R,EAAgBzR,EAAOwR,GAG5BC,EAAe72B,UAAY,EAAK,CAElCtE,EAAOy6B,MAAQD,GAAUY,aACzBp7B,EAAO0Q,EAAI,WAITyqB,EAAe72B,SAAWy2B,EAASC,EAAW,CAEhDh7B,EAAOy6B,MAAQD,GAAUa,WACzBr7B,EAAO0Q,EAAI7E,YAKTyvB,EAAM,IAAIC,GACdD,EAAIE,WAAW9R,EAAOX,EAAQsR,EAAQpR,EAAQqR,EAAQzuB,WAuBlD4vB,GAAO,EACP3vB,EAAKyuB,EACLmB,EAAe,IACV,KAEHC,EAAKL,EAAIM,kBAAkB9vB,MAClBwvB,EAAIpb,OACJob,EAAInb,OAGbwb,EAAKZ,EAASC,EAAW,CAE3Bh7B,EAAOy6B,MAAQD,GAAUqB,YACzB77B,EAAO0Q,EAAI6pB,EACXkB,GAAO,WAKLE,EAAKZ,EAASC,EAAW,CAE3BnvB,EAAKC,YAKHgwB,EAAKR,EAAIrH,SAASpoB,MACTyvB,EAAIpb,OACJob,EAAInb,OAIb2b,EAAKf,EAASC,EAAW,CAC3Bh7B,EAAOy6B,MAAQD,GAAUuB,SACzB/7B,EAAO0Q,EAAI7E,EACX4vB,GAAO,WAKLK,GAAMf,EAASC,EAAW,CAE5Bh7B,EAAOy6B,MAAQD,GAAUa,WACzBr7B,EAAO0Q,EAAI7E,EACX4vB,GAAO,gBAKLO,EAAgB,EAChBC,EAAKpwB,EAAIqwB,EAAKpwB,IACT,KAEH4E,EAGFA,EAFkB,EAAhBsrB,EAEEC,GAAMlB,EAASe,IAAOI,EAAKD,IAAON,EAAKG,GAGvC,IAAOG,EAAKC,KAGhBF,IACArS,EAAMwS,iBAEJpwB,EAAIuvB,EAAIrH,SAASvjB,MACR4qB,EAAIpb,OACJob,EAAInb,OAEbvf,EAAKqE,IAAI8G,EAAIgvB,GAAUC,EAAW,CAEpClvB,EAAK4E,WAKH3E,EAAIgvB,GACNkB,EAAKvrB,EACLorB,EAAK/vB,IAELmwB,EAAKxrB,EACLirB,EAAK5vB,GAGc,IAAjBiwB,WAKNrS,EAAMyS,gBAAkBx7B,EAAKmB,IAAI4nB,EAAMyS,gBAAiBJ,KAEtDN,GAEkBl2B,EAASuC,8BAK7BuiB,IACAX,EAAM0S,SAEJZ,WAIAnR,GAAQ2Q,EAAiB,CAE3Bj7B,EAAOy6B,MAAQD,GAAUuB,SACzB/7B,EAAO0Q,EAAI7E,SAKf8d,EAAM2S,YAAc17B,EAAKmB,IAAI4nB,EAAM2S,YAAahS,OAE5C6P,EAAOQ,GAAWD,GACtB/Q,EAAM4S,WAAa37B,EAAKmB,IAAI4nB,EAAM4S,WAAYpC,GAC9CxQ,EAAM6S,SAAWrC,KAvPTU,UAAY,KACZkB,SAAW,KACXX,aAAe,KACfC,WAAa,KACbQ,YAAc,EAaxBlS,EAAM6S,QAAU,EAChB7S,EAAM4S,WAAa,EACnB5S,EAAMiR,SAAW,EACjBjR,EAAM0S,SAAW,EACjB1S,EAAM2S,YAAc,EACpB3S,EAAMwS,aAAe,EACrBxS,EAAMyS,gBAAkB,EAwOxB,SAASb,UACFkB,SAAW,IAAIzT,QACf0T,SAAW,IAAI1T,QACf2T,cACAC,cACA1c,YACAC,YACAxN,YACAkqB,aAAe97B,EAAKwB,YACpBu6B,OAAS/7B,EAAKwB,OAarBg5B,GAAmBr5B,UAAUs5B,WAAa,SAAS9R,EAAOX,EAAQsR,EAAQpR,EAAQqR,EAAQzuB,QACnF4wB,SAAW1T,OACX2T,SAAWzT,MACZzZ,EAAQka,EAAMla,WAGbmtB,SAAWtC,OACXuC,SAAWtC,MAEZ3S,EAAM7V,EAAUI,WAChB2V,EAAM/V,EAAUI,mBACfyqB,SAAShnB,aAAagS,EAAK9b,QAC3B+wB,SAASjnB,aAAakS,EAAKhc,GAEnB,GAAT2D,EAAY,MACTmD,OAzCM,MA0CPoqB,EAAc77B,KAAKu7B,SAAS5R,UAAUnB,EAAMxJ,OAAO,IACnD8c,EAAc97B,KAAKw7B,SAAS7R,UAAUnB,EAAMvJ,OAAO,IACnD4H,EAASjW,EAAU4C,QAAQiT,EAAKoV,GAChC/U,EAASlW,EAAU4C,QAAQmT,EAAKmV,eAC/BF,OAAOx5B,WAAW,EAAG0kB,GAAS,EAAGD,GAClChc,EAAI7K,KAAK47B,OAAO14B,YAGf,GAAIslB,EAAMxJ,OAAO,IAAMwJ,EAAMxJ,OAAO,GAAI,MAExCvN,OAlDK,MAmDNsqB,EAAehU,EAAO4B,UAAUnB,EAAMvJ,OAAO,IAC7C+c,EAAejU,EAAO4B,UAAUnB,EAAMvJ,OAAO,SAE5C2c,OAAS/7B,EAAK8D,MAAM9D,EAAKgD,IAAIm5B,EAAcD,GAAe,QAC1DH,OAAO14B,gBACRsH,EAASgG,EAAIgD,QAAQmT,EAAI5V,EAAG/Q,KAAK47B,aAEhCD,aAAe97B,EAAKmE,IAAI+3B,EAAcC,GACvClV,EAASlW,EAAU4C,QAAQmT,EAAK3mB,KAAK27B,cAErCE,EAAchU,EAAO8B,UAAUnB,EAAMxJ,OAAO,IAC5C6H,EAASjW,EAAU4C,QAAQiT,EAAKoV,UAEhChxB,EAAIhL,EAAK6D,IAAImjB,EAAQrc,GAAU3K,EAAK6D,IAAIojB,EAAQtc,IAC5C,SACDoxB,OAAS/7B,EAAKiE,IAAI9D,KAAK47B,QAC5B/wB,GAAKA,GAEAA,OAIF4G,OA1EK,MA2ENwqB,EAAej8B,KAAKu7B,SAAS5R,UAAUnB,EAAMxJ,OAAO,IACpDkd,EAAel8B,KAAKu7B,SAAS5R,UAAUnB,EAAMxJ,OAAO,SAEnD4c,OAAS/7B,EAAK8D,MAAM9D,EAAKgD,IAAIq5B,EAAcD,GAAe,QAC1DL,OAAO14B,YACRsH,EAASgG,EAAIgD,QAAQiT,EAAI1V,EAAG/Q,KAAK47B,aAEhCD,aAAe97B,EAAKmE,IAAIi4B,EAAcC,OAMvCrxB,EALAgc,EAASjW,EAAU4C,QAAQiT,EAAKzmB,KAAK27B,cAErCG,EAAc97B,KAAKw7B,SAAS7R,UAAUnB,EAAMvJ,OAAO,IACnD6H,EAASlW,EAAU4C,QAAQmT,EAAKmV,UAEhCjxB,EAAIhL,EAAK6D,IAAIojB,EAAQtc,GAAU3K,EAAK6D,IAAImjB,EAAQrc,IAC5C,SACDoxB,OAAS/7B,EAAKiE,IAAI9D,KAAK47B,QAC5B/wB,GAAKA,GAEAA,GAIXwvB,GAAmBr5B,UAAUm7B,QAAU,SAASC,EAAM5sB,OAEhDiX,EAAM7V,EAAUI,WAChB2V,EAAM/V,EAAUI,uBACfyqB,SAAShnB,aAAagS,EAAKjX,QAC3BksB,SAASjnB,aAAakS,EAAKnX,GAExBxP,KAAKyR,aAzGA,KA2GP2qB,EAAM,KACJC,EAAQ7rB,EAAIoD,SAAS6S,EAAI1V,EAAG/Q,KAAK47B,QACjCU,EAAQ9rB,EAAIoD,SAAS+S,EAAI5V,EAAGlR,EAAKiE,IAAI9D,KAAK47B,cAEzC5c,OAAShf,KAAKu7B,SAAS9R,WAAW4S,QAClCpd,OAASjf,KAAKw7B,SAAS/R,WAAW6S,OAGrCT,EAAc77B,KAAKu7B,SAAS5R,UAAU3pB,KAAKgf,QAC3C8c,EAAc97B,KAAKw7B,SAAS7R,UAAU3pB,KAAKif,QAE3C4H,EAASjW,EAAU4C,QAAQiT,EAAKoV,GAChC/U,EAASlW,EAAU4C,QAAQmT,EAAKmV,UAE1Bj8B,EAAK6D,IAAIojB,EAAQ9mB,KAAK47B,QAAU/7B,EAAK6D,IAAImjB,EAAQ7mB,KAAK47B,aAxHtD,MA6HNpxB,EAASgG,EAAIgD,QAAQiT,EAAI1V,EAAG/Q,KAAK47B,QACjC/U,EAASjW,EAAU4C,QAAQiT,EAAKzmB,KAAK27B,iBAErCS,EAAM,CACJE,EAAQ9rB,EAAIoD,SAAS+S,EAAI5V,EAAGlR,EAAKiE,IAAI0G,SAEpCwU,QAAU,OACVC,OAASjf,KAAKw7B,SAAS/R,WAAW6S,GAGrCR,EAAc97B,KAAKw7B,SAAS7R,UAAU3pB,KAAKif,QAC3C6H,EAASlW,EAAU4C,QAAQmT,EAAKmV,UAE1Bj8B,EAAK6D,IAAIojB,EAAQtc,GAAU3K,EAAK6D,IAAImjB,EAAQrc,QAzI5C,EA8INA,EAASgG,EAAIgD,QAAQmT,EAAI5V,EAAG/Q,KAAK47B,QACjC9U,EAASlW,EAAU4C,QAAQmT,EAAK3mB,KAAK27B,iBAErCS,EAAM,CACJC,EAAQ7rB,EAAIoD,SAAS6S,EAAI1V,EAAGlR,EAAKiE,IAAI0G,SAEpCyU,QAAU,OACVD,OAAShf,KAAKu7B,SAAS9R,WAAW4S,GAGrCR,EAAc77B,KAAKu7B,SAAS5R,UAAU3pB,KAAKgf,QAC3C6H,EAASjW,EAAU4C,QAAQiT,EAAKoV,UAE1Bh8B,EAAK6D,IAAImjB,EAAQrc,GAAU3K,EAAK6D,IAAIojB,EAAQtc,kBAMlD4xB,SACGpd,QAAU,OACVC,QAAU,GAEV,IAIXob,GAAmBr5B,UAAU05B,kBAAoB,SAASlrB,UACjDxP,KAAKm8B,SAAQ,EAAM3sB,IAG5B6qB,GAAmBr5B,UAAU+xB,SAAW,SAASvjB,UACxCxP,KAAKm8B,SAAQ,EAAO3sB,ICxd7B+sB,GAAOC,SAAWA,GAalB,IAAIC,GAAWvD,GAAanK,MACxBuK,GAAYJ,GAAalK,OAQ7B,SAASwN,GAASE,QACXA,GAAK,OACLhE,OAAS,OACTiE,mBAAqB,OACrBC,mBAAqB,OACrB1K,cAAe,OACf0D,YAAa,OAGbiH,QAAU,OACV1K,QAAU,EAiBjB,SAASoK,GAAO3hB,QACT7C,QAAU6C,OACVkiB,QAAU,QACVC,SAAW,QACXC,WAAa,QACbC,SAAW,GAnBlBT,GAASx7B,UAAUk8B,MAAQ,SAASR,GAC9B18B,KAAK08B,GAAK,SACPG,QAAU78B,KAAK04B,aAEjBgE,GAAKA,OACLhE,OAAe,GAANgE,EAAU,EAAI,EAAIA,OAC3BvK,QAAUuK,EAAK18B,KAAK68B,SAgB3BN,GAAOv7B,UAAUm8B,MAAQ,gBAClBL,QAAQx9B,OAAS,OACjBy9B,SAASz9B,OAAS,OAClB09B,WAAW19B,OAAS,OACpB29B,SAAS39B,OAAS,GAGzBi9B,GAAOv7B,UAAUo8B,QAAU,SAASvmB,QAE7BkmB,SAASj3B,KAAK+Q,IAQrB0lB,GAAOv7B,UAAUq8B,WAAa,SAAS/iB,QAEhC0iB,WAAWl3B,KAAKwU,IAGvBiiB,GAAOv7B,UAAUs8B,SAAW,SAASha,QAE9B2Z,SAASn3B,KAAKwd,IAMrBiZ,GAAOv7B,UAAUu8B,WAAa,SAAS5L,WACjC/W,EAAQ5a,KAAK+X,QAGR7V,EAAI0Y,EAAM4iB,WAAYt7B,EAAGA,EAAIA,EAAEuV,OACtCvV,EAAEsa,cAAe,MAEd,IAAI7M,EAAIiL,EAAM8C,cAAe/N,EAAGA,EAAIA,EAAE8H,OACzC9H,EAAE6M,cAAe,MAEd,IAAI7N,EAAIiM,EAAM6C,YAAa9O,EAAGA,EAAIA,EAAE8I,OACvC9I,EAAE6N,cAAe,UAIfvN,EAAQjP,KAAK88B,QAERW,EAAO7iB,EAAM4iB,WAAYC,EAAMA,EAAOA,EAAKhmB,WAE9CgmB,EAAKjhB,cAIa,GAAlBihB,EAAK5c,WAAyC,GAAnB4c,EAAK3c,aAKhC2c,EAAK7d,qBAKJud,QAELluB,EAAMnJ,KAAK23B,GAEXA,EAAKjhB,cAAe,EAGbvN,EAAM3P,OAAS,GAAG,CAEnB4C,EAAI+M,EAAME,cAETiuB,QAAQl7B,GAGbA,EAAEsW,UAAS,IAIPtW,EAAE0d,gBAKD,IAAIQ,EAAKle,EAAEwb,cAAe0C,EAAIA,EAAKA,EAAGzS,KAAM,KAC3C2M,EAAU8F,EAAG9F,YAGbA,EAAQkC,eAKe,GAAvBlC,EAAQgY,aAAgD,GAAxBhY,EAAQiY,mBAKxCa,EAAU9Y,EAAQ4Q,WAAW9T,WAC7Bic,EAAU/Y,EAAQ6Q,WAAW/T,eAC7Bgc,IAAWC,OAIVgK,WAAW/iB,GAChBA,EAAQkC,cAAe,GAEnB6G,EAAQjD,EAAGiD,OAGL7G,eAKVvN,EAAMnJ,KAAKud,GACXA,EAAM7G,cAAe,QAIlB,IAAIkhB,EAAKx7B,EAAEub,YAAaigB,EAAIA,EAAKA,EAAG/vB,KAAM,KAKzC0V,KAJyB,GAAzBqa,EAAGpa,MAAM9G,aAOW,IAHpB6G,EAAQqa,EAAGra,OAGLvC,kBAILwc,SAASI,EAAGpa,OACjBoa,EAAGpa,MAAM9G,cAAe,EAEpB6G,EAAM7G,eAKVvN,EAAMnJ,KAAKud,GACXA,EAAM7G,cAAe,WAIpBmhB,YAAYhM,OAGZ,IAAItyB,EAAI,EAAGA,EAAIW,KAAK+8B,SAASz9B,SAAUD,EAAG,EAGzC6C,EAAIlC,KAAK+8B,SAAS19B,IAChBugB,aACJ1d,EAAEsa,cAAe,MASzB+f,GAAOv7B,UAAU28B,YAAc,SAAShM,WAElC/W,EAAQ5a,KAAK+X,QACb6lB,EAAUhjB,EAAMijB,UAChB7hB,EAAapB,EAAMkjB,aAEnBluB,EAAI+hB,EAAK+K,GAGJr9B,EAAI,EAAGA,EAAIW,KAAK+8B,SAASz9B,SAAUD,EAAG,KACzCwX,EAAO7W,KAAK+8B,SAAS19B,GAErBsQ,EAAI9P,EAAK0B,MAAMsV,EAAKiG,QAAQnN,GAC5B1N,EAAI4U,EAAKiG,QAAQ7a,EACjBT,EAAI3B,EAAK0B,MAAMsV,EAAKsG,kBACpBhb,EAAI0U,EAAKuG,kBAGbvG,EAAKiG,QAAQ1L,GAAGrP,IAAI8U,EAAKiG,QAAQnN,GACjCkH,EAAKiG,QAAQzL,GAAKwF,EAAKiG,QAAQ7a,EAE3B4U,EAAKgJ,cAEPre,EAAEiB,OAAOmN,EAAIiH,EAAK0G,eAAgBqgB,GAClCp8B,EAAEiB,OAAOmN,EAAIiH,EAAK8F,UAAW9F,EAAKoG,SAClC9a,GAAKyN,EAAIiH,EAAKgG,OAAShG,EAAKqG,SAY5B1b,EAAEsB,IAAI,GAAO,EAAM8M,EAAIiH,EAAKwG,kBAC5Blb,GAAK,GAAO,EAAMyN,EAAIiH,EAAKyG,mBAG7BzG,EAAKmG,WAAWrN,EAAIA,EACpBkH,EAAKmG,WAAW/a,EAAIA,EACpB4U,EAAKkG,WAAWvb,EAAIA,EACpBqV,EAAKkG,WAAW5a,EAAIA,MAGb9C,EAAI,EAAGA,EAAIW,KAAKg9B,WAAW19B,SAAUD,EAAG,CACjCW,KAAKg9B,WAAW39B,GACtBqyB,eAAeC,OAKhBtyB,EAAI,EAAGA,EAAIW,KAAKg9B,WAAW19B,SAAUD,EAAG,CACjCW,KAAKg9B,WAAW39B,GACtB41B,uBAAuBtD,MAK7BA,EAAKO,iBAEE7yB,EAAI,EAAGA,EAAIW,KAAKg9B,WAAW19B,SAAUD,EAAG,CACjCW,KAAKg9B,WAAW39B,GACtBi3B,oBAAoB3E,OAMvBtyB,EAAI,EAAGA,EAAIW,KAAKi9B,SAAS39B,SAAUD,EAAG,CACjCW,KAAKi9B,SAAS59B,GACpBu5B,wBAAwBjH,OAMvBtyB,EAAI,EAAGA,EAAIsyB,EAAKgL,qBAAsBt9B,EAAG,KAC3C,IAAIsP,EAAI,EAAGA,EAAI3O,KAAKi9B,SAAS39B,SAAUqP,EAAG,CACjC3O,KAAKi9B,SAAStuB,GACpBkqB,yBAAyBlH,OAGxBhjB,EAAI,EAAGA,EAAI3O,KAAKg9B,WAAW19B,SAAUqP,EAAG,CACjC3O,KAAKg9B,WAAWruB,GACtB6nB,wBAAwB7E,QAO3BtyB,EAAI,EAAGA,EAAIW,KAAKg9B,WAAW19B,SAAUD,EAAG,CACjCW,KAAKg9B,WAAW39B,GACtBk3B,wBAAwB5E,OAMzBtyB,EAAI,EAAGA,EAAIW,KAAK+8B,SAASz9B,SAAUD,EAAG,CACzCwX,EAAO7W,KAAK+8B,SAAS19B,GAErBsQ,EAAI9P,EAAK0B,MAAMsV,EAAKmG,WAAWrN,GAC/B1N,EAAI4U,EAAKmG,WAAW/a,EACpBT,EAAI3B,EAAK0B,MAAMsV,EAAKkG,WAAWvb,GAC/BW,EAAI0U,EAAKkG,WAAW5a,MAGpB47B,EAAcl+B,EAAKiD,IAAI8M,EAAGpO,MAC1B3B,EAAKoD,cAAc86B,GAAez5B,EAASuD,sBAAuB,KAChEm2B,EAAQ15B,EAASsD,eAAiBm2B,EAAYz+B,SAClDkC,EAAEsB,IAAIk7B,OAGJltB,EAAWlB,EAAIzN,KACf2O,EAAWA,EAAWxM,EAASyD,mBAEjC5F,GADI67B,EAAQ15B,EAASwD,YAAcpI,EAAKqE,IAAI+M,GAK9CnB,EAAElN,OAAOmN,EAAGpO,GACZS,GAAK2N,EAAIzN,EAET0U,EAAKmG,WAAWrN,EAAE5N,IAAI4N,GACtBkH,EAAKmG,WAAW/a,EAAIA,EACpB4U,EAAKkG,WAAWvb,EAAEO,IAAIP,GACtBqV,EAAKkG,WAAW5a,EAAIA,MAMlB87B,GAAiB,MACZ5+B,EAAI,EAAGA,EAAIsyB,EAAKiL,qBAAsBv9B,EAAG,KAC5Cs1B,EAAgB,MACXhmB,EAAI,EAAGA,EAAI3O,KAAKg9B,WAAW19B,SAAUqP,EAAG,KAE3CimB,EADU50B,KAAKg9B,WAAWruB,GACLilB,wBAAwBjC,GACjDgD,EAAgBj1B,EAAKkB,IAAI+zB,EAAeC,OAItCsJ,EAAevJ,IAAkB,EAAMrwB,EAAS0C,WAEhDm3B,GAAa,MACRxvB,EAAI,EAAGA,EAAI3O,KAAKi9B,SAAS39B,SAAUqP,EAAG,KAEzCyvB,EADQp+B,KAAKi9B,SAAStuB,GACJmqB,yBAAyBnH,GAC/CwM,EAAaA,GAAcC,KAGzBF,GAAgBC,EAAY,CAE9BF,GAAiB,aAQZ5+B,EAAI,EAAGA,EAAIW,KAAK+8B,SAASz9B,SAAUD,EAAG,EACzCwX,EAAO7W,KAAK+8B,SAAS19B,IAEpByd,QAAQnN,EAAE5N,IAAI8U,EAAKmG,WAAWrN,GACnCkH,EAAKiG,QAAQ7a,EAAI4U,EAAKmG,WAAW/a,EACjC4U,EAAKsG,iBAAiBpb,IAAI8U,EAAKkG,WAAWvb,GAC1CqV,EAAKuG,kBAAoBvG,EAAKkG,WAAW5a,EACzC0U,EAAKqK,+BAGFmd,kBAEDriB,EAAY,KACVsiB,EAAex5B,EAAAA,EAEfy5B,EAAYj6B,EAAS8D,wBACrBo2B,EAAYl6B,EAASiE,6BAEhBlJ,EAAI,EAAGA,EAAIW,KAAK+8B,SAASz9B,SAAUD,EAAG,EACzCwX,EAAO7W,KAAK+8B,SAAS19B,IAChBugB,aAIoB,GAAxB/I,EAAKuF,iBACFvF,EAAKuG,kBAAoBvG,EAAKuG,kBAAoBohB,GAClD3+B,EAAKoD,cAAc4T,EAAKsG,kBAAoBohB,GAClD1nB,EAAK2G,YAAc,EACnB8gB,EAAe,IAEfznB,EAAK2G,aAAe5N,EACpB0uB,EAAe5+B,EAAKkB,IAAI09B,EAAcznB,EAAK2G,kBAI3C8gB,GAAgBh6B,EAAS4D,aAAe+1B,MACjC5+B,EAAI,EAAGA,EAAIW,KAAK+8B,SAASz9B,SAAUD,EAAG,EACzCwX,EAAO7W,KAAK+8B,SAAS19B,IACpBmZ,UAAS,MAMtB+jB,GAAOv7B,UAAUy9B,YAAc,SAASC,OACjC,IAAIr/B,EAAI,EAAGA,EAAIW,KAAK+8B,SAASz9B,SAAUD,EAAG,KACzC6C,EAAIlC,KAAK+8B,SAAS19B,GACtBs/B,EAAaD,EAAKx8B,EAAE8a,WAAW/a,EAAGC,EAAE8a,WAAWrN,EAAE7P,EAAGoC,EAAE8a,WAAWrN,EAAE5P,EAAGmC,EAAE6a,WAAW5a,EAAGD,EAAE6a,WAAWvb,EAAE1B,EAAGoC,EAAE6a,WAAWvb,EAAEzB,KAI3H,IAAI6+B,GAAY,IAAIpC,GA0apB,SAASqC,UACFC,eAAiB,QACjBC,gBAAkB,GArazBxC,GAAOv7B,UAAUg+B,cAAgB,SAASrN,OACpC/W,EAAQ5a,KAAK+X,WAEb6C,EAAMqkB,eAAgB,KACnB,IAAI/8B,EAAI0Y,EAAM4iB,WAAYt7B,EAAGA,EAAIA,EAAEuV,OACtCvV,EAAEsa,cAAe,EACjBta,EAAE4a,QAAQ3L,OAAS,MAGhB,IAAIxB,EAAIiL,EAAM8C,cAAe/N,EAAGA,EAAIA,EAAE8H,OAEzC9H,EAAE8M,WAAY,EACd9M,EAAE6M,cAAe,EACjB7M,EAAE8b,WAAa,EACf9b,EAAE6b,MAAQ,SAKL,SAEH0T,EAAa,KACbC,EAAW,EAENxvB,EAAIiL,EAAM8C,cAAe/N,EAAGA,EAAIA,EAAE8H,UAEpB,GAAjB9H,EAAE2iB,eAKF3iB,EAAE8b,WAAannB,EAAS+C,kBAIxBuN,EAAQ,KACRjF,EAAE8M,UAEJ7H,EAAQjF,EAAE6b,UACL,KACDX,EAAKlb,EAAE6K,cACPsQ,EAAKnb,EAAE+K,iBAGPmQ,EAAGvU,YAAcwU,EAAGxU,wBAIpB8oB,EAAKvU,EAAGhT,UACRwnB,EAAKvU,EAAGjT,UAIRynB,EAAUF,EAAGve,YAAcue,EAAGxf,WAC9B2f,EAAUF,EAAGxe,YAAcwe,EAAGzf,cAGnB,GAAX0f,GAA+B,GAAXC,eAIpBxkB,EAAWqkB,EAAG5e,aAAe4e,EAAGvf,YAChC7E,EAAWqkB,EAAG7e,aAAe6e,EAAGxf,eAGpB,GAAZ9E,GAAiC,GAAZC,eAMrB7J,EAASiuB,EAAGtiB,QAAQ3L,OAEpBiuB,EAAGtiB,QAAQ3L,OAASkuB,EAAGviB,QAAQ3L,QACjCA,EAASkuB,EAAGviB,QAAQ3L,OACpBiuB,EAAGtiB,QAAQnI,QAAQxD,IACVkuB,EAAGviB,QAAQ3L,OAASiuB,EAAGtiB,QAAQ3L,SACxCA,EAASiuB,EAAGtiB,QAAQ3L,OACpBkuB,EAAGviB,QAAQnI,QAAQxD,QAKjB6N,EAASrP,EAAE6iB,iBACXvT,EAAStP,EAAE8iB,iBAEF2M,EAAGtiB,QACHuiB,EAAGviB,YAGZle,EAAQ,IAAI69B,GAChB79B,EAAMipB,OAAO9lB,IAAI8oB,EAAGxS,WAAY2G,GAChCpgB,EAAMmpB,OAAOhmB,IAAI+oB,EAAGzS,WAAY4G,GAChCrgB,EAAMu6B,OAAOp3B,IAAIq9B,EAAGtiB,SACpBle,EAAMw6B,OAAOr3B,IAAIs9B,EAAGviB,SACpBle,EAAMy6B,KAAO,MAETv6B,EAAS,IAAIw6B,GACjBJ,GAAap6B,EAAQF,OAGjB8V,EAAO5V,EAAO0Q,EAEhBoF,EADE9V,EAAOy6B,OAASD,GAAUa,WACpBz6B,EAAKkB,IAAIuQ,GAAU,EAAMA,GAAUuD,EAAM,GAEzC,EAGV/E,EAAE6b,MAAQ5W,EACVjF,EAAE8M,WAAY,EAGZ7H,EAAQuqB,IAEVD,EAAavvB,EACbwvB,EAAWvqB,MAIG,MAAdsqB,GAAsB,EAAM,GAAOx/B,EAAKQ,QAAUi/B,EAAU,CAE9DvkB,EAAMqkB,gBAAiB,QAKrBpU,EAAKqU,EAAW1kB,cAChBsQ,EAAKoU,EAAWxkB,cAChB0kB,EAAKvU,EAAGhT,UACRwnB,EAAKvU,EAAGjT,cAER2nB,EAAUJ,EAAGtiB,QAAQvb,QACrBk+B,EAAUJ,EAAGviB,QAAQvb,WAEzB69B,EAAGzqB,QAAQwqB,GACXE,EAAG1qB,QAAQwqB,GAGXD,EAAWlM,OAAOpY,GAClBskB,EAAWziB,WAAY,IACrByiB,EAAWzT,WAGiB,GAA1ByT,EAAW5M,aAAmD,GAA3B4M,EAAW3M,cAUlD6M,EAAG5mB,UAAS,GACZ6mB,EAAG7mB,UAAS,QAGP2kB,aACAC,QAAQgC,QACRhC,QAAQiC,QACRhC,WAAW6B,GAEhBE,EAAG5iB,cAAe,EAClB6iB,EAAG7iB,cAAe,EAClB0iB,EAAW1iB,cAAe,UAGtBkjB,EAAS,CAAEN,EAAIC,GACVhgC,EAAI,EAAGA,EAAIqgC,EAAOpgC,SAAUD,EAAG,KAClCwX,EAAO6oB,EAAOrgC,IACTwgB,gBACF,IAAIO,EAAKvJ,EAAK6G,cAAe0C,EAAIA,EAAKA,EAAGzS,KAAM,KAI9C2M,EAAU8F,EAAG9F,YAGbA,EAAQkC,kBAKR6G,EAAQjD,EAAGiD,UACXA,EAAMxD,aAAgBhJ,EAAK2J,YAAe6C,EAAM7C,gBAKhD4S,EAAU9Y,EAAQ4Q,WAAW9T,WAC7Bic,EAAU/Y,EAAQ6Q,WAAW/T,eAC7Bgc,IAAWC,OAKXsM,EAAStc,EAAMvG,QAAQvb,QACD,GAAtB8hB,EAAM7G,cACR6G,EAAM1O,QAAQwqB,GAIhB7kB,EAAQ0Y,OAAOpY,GAIY,GAAvBN,EAAQgY,aAAgD,GAAxBhY,EAAQiY,cAO5CjY,EAAQkC,cAAe,OAClB6gB,WAAW/iB,GAGZ+I,EAAM7G,eAKV6G,EAAM7G,cAAe,EAEhB6G,EAAMzD,YACTyD,EAAM7K,UAAS,QAGZ4kB,QAAQ/Z,MArBXA,EAAMvG,QAAQ/a,IAAI49B,GAClBtc,EAAMnC,4BAyBd0d,GAAU1B,OAAO,EAAMiC,GAAYxN,EAAK+K,IACxCkC,GAAUzM,QAAU,EACpByM,GAAUhC,mBAAqB,GAC/BgC,GAAUjC,mBAAqBhL,EAAKgL,mBACpCiC,GAAU1M,cAAe,OAEpB0N,eAAehB,GAAWQ,EAAIC,OAG1BhgC,EAAI,EAAGA,EAAIW,KAAK+8B,SAASz9B,SAAUD,EAAG,KACzCwX,MAAAA,EAAO7W,KAAK+8B,SAAS19B,IACpBmd,cAAe,EAEf3F,EAAKgJ,aAIVhJ,EAAKsJ,0BAGIC,EAAKvJ,EAAK6G,cAAe0C,EAAIA,EAAKA,EAAGzS,KAC5CyS,EAAG9F,QAAQmC,WAAY,EACvB2D,EAAG9F,QAAQkC,cAAe,MAO9B5B,EAAMilB,kBAEFjlB,EAAMklB,cAAe,CACvBllB,EAAMqkB,gBAAiB,cAxHvBC,EAAW7M,YAAW,GACtB+M,EAAGtiB,QAAQ/a,IAAIy9B,GACfH,EAAGviB,QAAQ/a,IAAI09B,GACfL,EAAGle,uBACHme,EAAGne,yBAsITqb,GAAOv7B,UAAU4+B,eAAiB,SAASG,EAAShM,EAAMC,GAC5Ch0B,KAAK+X,YAGZ,IAAI1Y,EAAI,EAAGA,EAAIW,KAAK+8B,SAASz9B,SAAUD,EAAG,EACzCwX,EAAO7W,KAAK+8B,SAAS19B,IACpB2d,WAAWrN,EAAE5N,IAAI8U,EAAKiG,QAAQnN,GACnCkH,EAAKmG,WAAW/a,EAAI4U,EAAKiG,QAAQ7a,EACjC4U,EAAKkG,WAAWvb,EAAEO,IAAI8U,EAAKsG,kBAC3BtG,EAAKkG,WAAW5a,EAAI0U,EAAKuG,sBAGlB/d,EAAI,EAAGA,EAAIW,KAAKg9B,WAAW19B,SAAUD,EAAG,CACjCW,KAAKg9B,WAAW39B,GACtBqyB,eAAeqO,OAIhB1gC,EAAI,EAAGA,EAAI0gC,EAAQnD,qBAAsBv9B,EAAG,SAC/Cs1B,EAAgB,EACXhmB,EAAI,EAAGA,EAAI3O,KAAKg9B,WAAW19B,SAAUqP,EAAG,KAE3CimB,EADU50B,KAAKg9B,WAAWruB,GACLmlB,2BAA2BiM,EAAShM,EAAMC,GACnEW,EAAgBj1B,EAAKkB,IAAI+zB,EAAeC,MAIvBD,IAAkB,IAAMrwB,EAAS0C,iBAqCtD+sB,EAAKjX,QAAQ1L,GAAGrP,IAAIgyB,EAAK/W,WAAWrN,GACpCokB,EAAKjX,QAAQzL,GAAK0iB,EAAK/W,WAAW/a,EAClC+xB,EAAKlX,QAAQ1L,GAAGrP,IAAIiyB,EAAKhX,WAAWrN,GACpCqkB,EAAKlX,QAAQzL,GAAK2iB,EAAKhX,WAAW/a,MAIzB5C,EAAI,EAAGA,EAAIW,KAAKg9B,WAAW19B,SAAUD,EAAG,CACjCW,KAAKg9B,WAAW39B,GACtB41B,uBAAuB8K,OAIxB1gC,EAAI,EAAGA,EAAI0gC,EAAQpD,qBAAsBt9B,MACvCsP,EAAI,EAAGA,EAAI3O,KAAKg9B,WAAW19B,SAAUqP,EAAG,CACjC3O,KAAKg9B,WAAWruB,GACtB6nB,wBAAwBuJ,OAOhCnwB,EAAImwB,EAAQrD,OAGPr9B,EAAI,EAAGA,EAAIW,KAAK+8B,SAASz9B,SAAUD,EAAG,KACzCwX,EAAO7W,KAAK+8B,SAAS19B,GAErBsQ,EAAI9P,EAAK0B,MAAMsV,EAAKmG,WAAWrN,GAC/B1N,EAAI4U,EAAKmG,WAAW/a,EACpBT,EAAI3B,EAAK0B,MAAMsV,EAAKkG,WAAWvb,GAC/BW,EAAI0U,EAAKkG,WAAW5a,EAGpB47B,EAAcl+B,EAAKiD,IAAI8M,EAAGpO,MAC1B3B,EAAK6D,IAAIq6B,EAAaA,GAAez5B,EAASuD,sBAAuB,KACnEm2B,EAAQ15B,EAASsD,eAAiBm2B,EAAYz+B,SAClDkC,EAAEsB,IAAIk7B,OAGJltB,EAAWlB,EAAIzN,KACf2O,EAAWA,EAAWxM,EAASyD,mBAEjC5F,GADI67B,EAAQ15B,EAASwD,YAAcpI,EAAKqE,IAAI+M,GAK9CnB,EAAElN,OAAOmN,EAAGpO,GACZS,GAAK2N,EAAIzN,EAET0U,EAAKmG,WAAWrN,EAAIA,EACpBkH,EAAKmG,WAAW/a,EAAIA,EACpB4U,EAAKkG,WAAWvb,EAAIA,EACpBqV,EAAKkG,WAAW5a,EAAIA,EAGpB0U,EAAKiG,QAAQnN,EAAIA,EACjBkH,EAAKiG,QAAQ7a,EAAIA,EACjB4U,EAAKsG,iBAAmB3b,EACxBqV,EAAKuG,kBAAoBjb,EACzB0U,EAAKqK,4BAGFmd,mBAaP9B,GAAOv7B,UAAUq9B,gBAAkB,mBAE7Bnb,EAAU,IAAI2b,GACTlvB,EAAI,EAAGA,EAAI3P,KAAKg9B,WAAW19B,SAAUqQ,EAAG,SAC3C2K,EAAUta,KAAKg9B,WAAWrtB,GACrBvF,EAAI,EAAGA,EAAIkQ,EAAQ2R,SAAS3sB,SAAU8K,EAC7C8Y,EAAQ4b,eAAeh5B,KAAKwU,EAAQ2R,SAAS7hB,GAAGuU,eAChDuE,EAAQ6b,gBAAgBj5B,KAAKwU,EAAQ2R,SAAS7hB,GAAGwU,qBAE9C7G,QAAQioB,UAAU1lB,EAAS4I,KCx1BpC,IAAI+c,GAAW,CACbrC,QAAU/9B,EAAKwB,OACf2a,YAAa,EACbkW,cAAe,EACfgO,mBAAoB,EACpBC,aAAc,EACdvK,YAAa,EACb+G,mBAAqB,EACrBC,mBAAqB,GAMvB,SAASwD,GAAMtpB,QACP9W,gBAAgBogC,WACb,IAAIA,GAAMtpB,GAGfA,GAAOjX,EAAK+B,QAAQkV,KACtBA,EAAM,CAAC8mB,QAAU9mB,IAGnBA,EAAMC,EAAQD,EAAKmpB,SAEdI,SAAW,IAAI9D,GAAOv8B,WAEtBgY,aAAe,IAAI7H,OAEnBuN,cAAgB,UAChB4iB,eAAiB,OAEjB9C,WAAa,UACb+C,YAAc,OAEd9iB,YAAc,UACd+iB,aAAe,OAEfvB,gBAAiB,OAEjBnB,aAAehnB,EAAIkF,gBACnB6hB,UAAYh+B,EAAK0B,MAAMuV,EAAI8mB,cAE3B6C,eAAgB,OAChBjd,cAAe,OACfkd,UAAW,OAGXC,eAAiB7pB,EAAIob,kBACrB0O,oBAAsB9pB,EAAIopB,uBAC1BJ,cAAgBhpB,EAAIqpB,iBAEpBU,aAAe/pB,EAAI8e,gBACnBkL,qBAAuBhqB,EAAI6lB,wBAC3BoE,qBAAuBjqB,EAAI8lB,wBAE3BoE,IAAM,OAGNC,QAAUjhC,KAAKkhC,cAAc3wB,KAAKvQ,MAGzCogC,GAAMp/B,UAAUC,WAAa,mBACvBy+B,EAAS,GACTyB,EAAS,GAEJj/B,EAAIlC,KAAKohC,cAAel/B,EAAGA,EAAIA,EAAEwW,UACxCgnB,EAAO55B,KAAK5D,OAGT,IAAIyM,EAAI3O,KAAK2f,eAAgBhR,EAAGA,EAAIA,EAAE+J,UACb,mBAAjB/J,EAAE1N,YACXkgC,EAAOr7B,KAAK6I,SAIT,CACLivB,QAAS59B,KAAK69B,UACd6B,OAAQA,EACRyB,OAAQA,IAIZf,GAAMl/B,aAAe,SAASC,EAAM8T,EAASC,OACtC/T,SACI,IAAIi/B,OAGTxlB,EAAQ,IAAIwlB,GAAMj/B,EAAKy8B,YAEvBz8B,EAAKu+B,WACH,IAAIrgC,EAAI8B,EAAKu+B,OAAOpgC,OAAS,EAAGD,GAAK,EAAGA,GAAK,EAC/Cub,EAAMymB,SAASnsB,EAAQgG,EAAM/Z,EAAKu+B,OAAOrgC,GAAIub,OAI7CzZ,EAAKggC,WACC9hC,EAAI8B,EAAKggC,OAAO7hC,OAAS,EAAGD,GAAK,EAAGA,IAC1Cub,EAAM0mB,YAAYpsB,EAAQqiB,GAAOp2B,EAAKggC,OAAO9hC,GAAIub,WAI9CA,GASTwlB,GAAMp/B,UAAUogC,YAAc,kBACrBphC,KAAKw9B,YASd4C,GAAMp/B,UAAU2e,aAAe,kBACtB3f,KAAKyd,aAYd2iB,GAAMp/B,UAAUqZ,eAAiB,kBACxBra,KAAK0d,eAGd0iB,GAAMp/B,UAAUugC,aAAe,kBACtBvhC,KAAKugC,aAGdH,GAAMp/B,UAAUwgC,cAAgB,kBACvBxhC,KAAKwgC,cAMdJ,GAAMp/B,UAAUygC,gBAAkB,kBACzBzhC,KAAKsgC,gBAMdF,GAAMp/B,UAAU0gC,WAAa,SAAS9D,QAC/BC,UAAYD,GAMnBwC,GAAMp/B,UAAU2gC,WAAa,kBACpB3hC,KAAK69B,WAMduC,GAAMp/B,UAAUye,SAAW,kBAClBzf,KAAK0gC,UAMdN,GAAMp/B,UAAU4gC,iBAAmB,SAASlhB,MACtCA,GAAQ1gB,KAAK89B,oBAIZA,aAAepd,EACK,GAArB1gB,KAAK89B,kBACF,IAAI57B,EAAIlC,KAAKw9B,WAAYt7B,EAAGA,EAAIA,EAAEuV,OACrCvV,EAAEsW,UAAS,IAKjB4nB,GAAMp/B,UAAU6gC,iBAAmB,kBAC1B7hC,KAAK89B,cAMdsC,GAAMp/B,UAAU8gC,gBAAkB,SAASphB,QACpCigB,eAAiBjgB,GAGxB0f,GAAMp/B,UAAU+gC,gBAAkB,kBACzB/hC,KAAK2gC,gBAMdP,GAAMp/B,UAAUghC,qBAAuB,SAASthB,QACzCkgB,oBAAsBlgB,GAG7B0f,GAAMp/B,UAAUihC,qBAAuB,kBAC9BjiC,KAAK4gC,qBAMdR,GAAMp/B,UAAUkhC,eAAiB,SAASxhB,QACnCof,cAAgBpf,GAGvB0f,GAAMp/B,UAAUmhC,eAAiB,kBACxBniC,KAAK8/B,eAMdM,GAAMp/B,UAAUohC,mBAAqB,SAAS1hB,QACvC+f,cAAgB/f,GAMvB0f,GAAMp/B,UAAUqhC,mBAAqB,kBAC5BriC,KAAKygC,eAcdL,GAAMp/B,UAAUshC,YAAc,eACvB,IAAIzrB,EAAO7W,KAAKw9B,WAAY3mB,EAAMA,EAAOA,EAAK6B,UACjD7B,EAAKoG,QAAQnb,UACb+U,EAAKqG,SAAW,GAmBpBkjB,GAAMp/B,UAAUuhC,UAAY,SAASt8B,EAAM+I,OAErC8I,EAAa9X,KAAKgY,kBACjBA,aAAajJ,MAAM9I,GAAM,SAAS0L,OACjCuE,EAAQ4B,EAAW5M,YAAYyG,UAC5B3C,EAAckH,EAAMS,aAkC/BypB,GAAMp/B,UAAUiJ,QAAU,SAASu4B,EAAQC,EAAQC,OAE7C5qB,EAAa9X,KAAKgY,kBAEjBA,aAAa/N,QAAQ,CACxBc,YAAc,EACdV,GAAKm4B,EACLl4B,GAAKm4B,IACJ,SAAS7jC,EAAO+S,OACbuE,EAAQ4B,EAAW5M,YAAYyG,GAC/BgF,EAAUT,EAAMS,QAChB7K,EAAQoK,EAAMN,WACd9W,EAAS,MACH6X,EAAQ1M,QAAQnL,EAAQF,EAAOkN,GAChC,KACHd,EAAWlM,EAAOkM,SAClB4X,EAAQ/iB,EAAKyC,IAAIzC,EAAKiD,IAAK,EAAMkI,EAAWpM,EAAMyL,IAAKxK,EAAKiD,IAAIkI,EAAUpM,EAAM0L,YAC7Eo4B,EAAsB/rB,EAASiM,EAAO9jB,EAAO0L,OAAQQ,UAEvDpM,EAAMmM,gBAOjBq1B,GAAMp/B,UAAUgR,cAAgB,kBACvBhS,KAAKgY,aAAahG,iBAM3BouB,GAAMp/B,UAAUiR,cAAgB,kBACvBjS,KAAKgY,aAAa/F,iBAQ3BmuB,GAAMp/B,UAAUkR,eAAiB,kBACxBlS,KAAKgY,aAAa9F,kBAS3BkuB,GAAMp/B,UAAUmR,eAAiB,kBACxBnS,KAAKgY,aAAa7F,kBAS3BiuB,GAAMp/B,UAAU6N,YAAc,SAASC,OAEjC9O,KAAK0gC,cAIJ,IAAIx+B,EAAIlC,KAAKw9B,WAAYt7B,EAAGA,EAAIA,EAAEuV,OACrCvV,EAAEiW,KAAK/N,EAAEvH,IAAIiM,GACb5M,EAAE4a,QAAQ1L,GAAGvO,IAAIiM,GACjB5M,EAAE4a,QAAQnN,EAAE9M,IAAIiM,OAGb,IAAIH,EAAI3O,KAAKyd,YAAa9O,EAAGA,EAAIA,EAAE8I,OACtC9I,EAAEE,YAAYC,QAGXkJ,aAAanJ,YAAYC,KAMhCsxB,GAAMp/B,UAAUqgC,SAAW,SAASxqB,GAE9B7W,KAAKyf,aAKT5I,EAAK+G,OAAS,KACd/G,EAAKY,OAASzX,KAAKw9B,WACfx9B,KAAKw9B,kBACFA,WAAW5f,OAAS/G,QAEtB2mB,WAAa3mB,IAChB7W,KAAKugC,cAYTH,GAAMp/B,UAAU2hC,WAAa,SAAS7rB,EAAKrG,MAErCzQ,KAAKyf,kBACA,KAGL3I,GAAOjX,EAAK+B,QAAQkV,KACtBA,EAAM,CACJjG,SAAWiG,EACXrG,MAAQA,QAIRoG,EAAO,IAAIqE,EAAKlb,KAAM8W,eAErBuqB,SAASxqB,GAEPA,GAGTupB,GAAMp/B,UAAU4hC,kBAAoB,SAAS9rB,EAAKrG,UAC3CqG,EAEMjX,EAAK+B,QAAQkV,KACtBA,EAAM,CAAEjG,SAAWiG,EAAKrG,MAAQA,IAFhCqG,EAAM,GAIRA,EAAI1B,KAAO,UACJpV,KAAK2iC,WAAW7rB,IAGzBspB,GAAMp/B,UAAU6hC,oBAAsB,SAAS/rB,EAAKrG,UAC7CqG,EAEMjX,EAAK+B,QAAQkV,KACtBA,EAAM,CAAEjG,SAAWiG,EAAKrG,MAAQA,IAFhCqG,EAAM,GAIRA,EAAI1B,KAAO,YACJpV,KAAK2iC,WAAW7rB,IAazBspB,GAAMp/B,UAAU8hC,YAAc,SAAS5gC,OAGjClC,KAAKyf,eAILvd,EAAE2b,mBACG,UAIL6f,EAAKx7B,EAAEub,YACJigB,GAAI,KACLqF,EAAMrF,EACVA,EAAKA,EAAG/vB,UAEHiW,QAAQ,eAAgBmf,EAAIzf,YAC5B0f,aAAaD,EAAIzf,OAEtBphB,EAAEub,YAAcigB,EAElBx7B,EAAEub,YAAc,aAGZ2C,EAAKle,EAAEwb,cACJ0C,GAAI,KACLC,EAAMD,EACVA,EAAKA,EAAGzS,UAEH2S,eAAeD,EAAI/F,SAExBpY,EAAEwb,cAAgB0C,EAEpBle,EAAEwb,cAAgB,aAGdjT,EAAIvI,EAAEyb,cACHlT,GAAG,KACJw4B,EAAKx4B,EACTA,EAAIA,EAAEgN,YAEDmM,QAAQ,iBAAkBqf,GAC/BA,EAAGhrB,eAAejY,KAAKgY,cAEvB9V,EAAEyb,cAAgBlT,SAEpBvI,EAAEyb,cAAgB,KAGdzb,EAAE0b,SACJ1b,EAAE0b,OAAOnG,OAASvV,EAAEuV,QAGlBvV,EAAEuV,SACJvV,EAAEuV,OAAOmG,OAAS1b,EAAE0b,QAGlB1b,GAAKlC,KAAKw9B,kBACPA,WAAat7B,EAAEuV,QAGtBvV,EAAE2b,aAAc,IAEd7d,KAAKugC,iBAEF3c,QAAQ,cAAe1hB,IAErB,IAaTk+B,GAAMp/B,UAAUsgC,YAAc,SAAShe,MAIjCtjB,KAAKyf,kBACA,QAIT6D,EAAM1F,OAAS,KACf0F,EAAM7L,OAASzX,KAAKyd,YAChBzd,KAAKyd,mBACFA,YAAYG,OAAS0F,QAEvB7F,YAAc6F,IACjBtjB,KAAKwgC,aAGPld,EAAMsU,QAAQtU,MAAQA,EACtBA,EAAMsU,QAAQvU,MAAQC,EAAMmU,QAC5BnU,EAAMsU,QAAQjN,KAAO,KACrBrH,EAAMsU,QAAQjqB,KAAO2V,EAAMkU,QAAQ/Z,YAC/B6F,EAAMkU,QAAQ/Z,cAChB6F,EAAMkU,QAAQ/Z,YAAYkN,KAAOrH,EAAMsU,SACzCtU,EAAMkU,QAAQ/Z,YAAc6F,EAAMsU,QAElCtU,EAAMuU,QAAQvU,MAAQA,EACtBA,EAAMuU,QAAQxU,MAAQC,EAAMkU,QAC5BlU,EAAMuU,QAAQlN,KAAO,KACrBrH,EAAMuU,QAAQlqB,KAAO2V,EAAMmU,QAAQha,YAC/B6F,EAAMmU,QAAQha,cAChB6F,EAAMmU,QAAQha,YAAYkN,KAAOrH,EAAMuU,SACzCvU,EAAMmU,QAAQha,YAAc6F,EAAMuU,QAGF,GAA5BvU,EAAMC,uBACH,IAAInJ,EAAOkJ,EAAMmU,QAAQpd,iBAAkBD,EAAMA,EAAOA,EAAKzM,KAC5DyM,EAAKiJ,OAASC,EAAMkU,SAGtBpd,EAAKE,QAAQK,0BAOZ2I,GAST8c,GAAMp/B,UAAUgiC,aAAe,SAAS1f,OAElCtjB,KAAKyf,YAKL6D,EAAM1F,SACR0F,EAAM1F,OAAOnG,OAAS6L,EAAM7L,QAG1B6L,EAAM7L,SACR6L,EAAM7L,OAAOmG,OAAS0F,EAAM1F,QAG1B0F,GAAStjB,KAAKyd,mBACXA,YAAc6F,EAAM7L,YAIvBma,EAAQtO,EAAMkU,QACd3F,EAAQvO,EAAMmU,WAGlB7F,EAAMpZ,UAAS,GACfqZ,EAAMrZ,UAAS,GAGX8K,EAAMsU,QAAQjN,OAChBrH,EAAMsU,QAAQjN,KAAKhd,KAAO2V,EAAMsU,QAAQjqB,MAGtC2V,EAAMsU,QAAQjqB,OAChB2V,EAAMsU,QAAQjqB,KAAKgd,KAAOrH,EAAMsU,QAAQjN,MAGtCrH,EAAMsU,SAAWhG,EAAMnU,cACzBmU,EAAMnU,YAAc6F,EAAMsU,QAAQjqB,MAGpC2V,EAAMsU,QAAQjN,KAAO,KACrBrH,EAAMsU,QAAQjqB,KAAO,KAGjB2V,EAAMuU,QAAQlN,OAChBrH,EAAMuU,QAAQlN,KAAKhd,KAAO2V,EAAMuU,QAAQlqB,MAGtC2V,EAAMuU,QAAQlqB,OAChB2V,EAAMuU,QAAQlqB,KAAKgd,KAAOrH,EAAMuU,QAAQlN,MAGtCrH,EAAMuU,SAAWhG,EAAMpU,cACzBoU,EAAMpU,YAAc6F,EAAMuU,QAAQlqB,MAGpC2V,EAAMuU,QAAQlN,KAAO,KACrBrH,EAAMuU,QAAQlqB,KAAO,OAGnB3N,KAAKwgC,aAGyB,GAA5Bld,EAAMC,2BACJnJ,EAAOyX,EAAMxX,iBACVD,GACDA,EAAKiJ,OAASuO,GAGhBxX,EAAKE,QAAQK,mBAGfP,EAAOA,EAAKzM,UAIXiW,QAAQ,eAAgBN,KAG/B,IAAI4f,GAAS,IAAI3G,GAAOC,SAYxB4D,GAAMp/B,UAAU2wB,KAAO,SAASwR,EAAUxG,EAAoBC,WACvDhZ,QAAQ,WAAYuf,IAEC,EAArBxG,KAA4BA,IAE/BA,EAAqB,GAGvBA,EAAqBA,GAAsB38B,KAAK8gC,qBAChDlE,EAAqBA,GAAsB58B,KAAK+gC,qBAG5C/gC,KAAKwjB,oBACFqc,uBACArc,cAAe,QAGjBkd,UAAW,EAEhBwC,GAAOhG,MAAMiG,GACbD,GAAOvG,mBAAqBA,EAC5BuG,GAAOtG,mBAAqBA,EAC5BsG,GAAOhR,aAAelyB,KAAK2gC,eAC3BuC,GAAOtN,WAAa51B,KAAK6gC,kBAGpBuC,iBAGDpjC,KAAKi/B,gBAAkBkE,EAAW,EAAK,MACpC9C,SAAS9C,WAAW2F,QAGpB,IAAIhhC,EAAIlC,KAAKw9B,WAAYt7B,EAAGA,EAAIA,EAAEwW,UAEf,GAAlBxW,EAAEsa,eAIFta,EAAE0d,YAKN1d,EAAEie,4BAGC0f,kBAIH7/B,KAAK4gC,qBAAuBuC,EAAW,QACpC9C,SAASrB,cAAckE,IAG1BljC,KAAKygC,oBACF6B,mBAGF5B,UAAW,OAEX9c,QAAQ,YAAauf,IAM5B/C,GAAMp/B,UAAU6+B,gBAAkB,gBAC3B7nB,aAAaxF,YAAYxS,KAAKihC,UASrCb,GAAMp/B,UAAUkgC,cAAgB,SAASrZ,EAAQE,OAC3CxN,EAAWsN,EAAOlR,QAClB8D,EAAWsN,EAAOpR,QAElBqI,EAAS6I,EAAOjS,WAChBqJ,EAAS8I,EAAOnS,WAEhBgc,EAAQrX,EAAS1C,UACjBga,EAAQpX,EAAS5C,aAGjB+Z,GAASC,WAOTzX,EAAOyX,EAAMxX,iBACVD,GAAM,IACPA,EAAKiJ,OAASuO,EAAO,KACnB/G,EAAKzQ,EAAKE,QAAQE,cAClBsQ,EAAK1Q,EAAKE,QAAQI,cAClB9N,EAAKwN,EAAKE,QAAQkY,iBAClBgC,EAAKpa,EAAKE,QAAQmY,oBAElB5H,GAAMtQ,GAAYuQ,GAAMrQ,GAAY7N,GAAMoS,GAAUwV,GAAMvV,YAK1D4L,GAAMpQ,GAAYqQ,GAAMvQ,GAAY3N,GAAMqS,GAAUuV,GAAMxV,SAMhE5E,EAAOA,EAAKzM,QAGoB,GAA9BkkB,EAAM/W,cAAc8W,IAGgB,GAApCnX,EAASK,cAAcP,QAKvBD,EAAUsQ,EAAQhrB,OAAO2a,EAAUyE,EAAQvE,EAAUwE,GAC1C,MAAX3E,IAKJA,EAAQsD,OAAS,KACS,MAAtB5d,KAAK0d,gBACPpD,EAAQ7C,OAASzX,KAAK0d,mBACjBA,cAAcE,OAAStD,QAEzBoD,cAAgBpD,IAEnBta,KAAKsgC,mBAMTF,GAAMp/B,UAAUoiC,eAAiB,mBAE3BzzB,EAAG0zB,EAASrjC,KAAK0d,cACd/N,EAAI0zB,GAAQ,CACjBA,EAAS1zB,EAAE+I,cACP6B,EAAW5K,EAAE6K,cACbC,EAAW9K,EAAE+K,cACbsE,EAASrP,EAAE6iB,iBACXvT,EAAStP,EAAE8iB,iBACXb,EAAQrX,EAAS1C,UACjBga,EAAQpX,EAAS5C,aAGjBlI,EAAEoc,aAAc,IACgB,GAA9B8F,EAAM/W,cAAc8W,GAAiB,MAClCtR,eAAe3Q,eAIkB,GAApC8K,EAASK,cAAcP,GAAoB,MACxC+F,eAAe3Q,YAKtBA,EAAEoc,cAAe,MAGfuT,EAAU1N,EAAM/Q,YAAc+Q,EAAMhS,WACpC2f,EAAU1N,EAAMhR,YAAcgR,EAAMjS,cAGzB,GAAX0f,GAA+B,GAAXC,OAIpB3tB,EAAW2I,EAAS7C,UAAUsH,GAAQrN,QACtCE,EAAW4I,EAAS/C,UAAUuH,GAAQtN,QAI3B,GAHD3R,KAAKgY,aAAavO,YAAYmI,EAAUC,GAStDlC,EAAEqjB,OAAOhzB,WALFsgB,eAAe3Q,MAY1BywB,GAAMp/B,UAAUsf,eAAiB,SAAShG,GACxCsQ,EAAQsN,QAAQ5d,EAASta,MAGrBsa,EAAQsD,SACVtD,EAAQsD,OAAOnG,OAAS6C,EAAQ7C,QAE9B6C,EAAQ7C,SACV6C,EAAQ7C,OAAOmG,OAAStD,EAAQsD,QAE9BtD,GAAWta,KAAK0d,qBACbA,cAAgBpD,EAAQ7C,UAG7BzX,KAAKsgC,gBAGTF,GAAMp/B,UAAUsiC,WAAa,KAQ7BlD,GAAMp/B,UAAUuiC,GAAK,SAAShc,EAAM0L,SACd,iBAAT1L,GAAyC,mBAAb0L,IAGlCjzB,KAAKsjC,kBACHA,WAAa,IAEftjC,KAAKsjC,WAAW/b,UACd+b,WAAW/b,GAAQ,SAErB+b,WAAW/b,GAAMzhB,KAAKmtB,IARlBjzB,MAkBXogC,GAAMp/B,UAAUwiC,IAAM,SAASjc,EAAM0L,MACf,iBAAT1L,GAAyC,mBAAb0L,SAC9BjzB,SAELyjC,EAAYzjC,KAAKsjC,YAActjC,KAAKsjC,WAAW/b,OAC9Ckc,IAAcA,EAAUnkC,cACpBU,SAEL8L,EAAQ23B,EAAUC,QAAQzQ,UAC1BnnB,GAAS,GACX23B,EAAUE,OAAO73B,EAAO,GAEnB9L,MAGTogC,GAAMp/B,UAAU4iB,QAAU,SAAS2D,EAAMqc,EAAMC,EAAMC,OAC/CL,EAAYzjC,KAAKsjC,YAActjC,KAAKsjC,WAAW/b,OAC9Ckc,IAAcA,EAAUnkC,cACpB,MAEJ,IAAIykC,EAAI,EAAGA,EAAIN,EAAUnkC,OAAQykC,IACpCN,EAAUM,GAAGC,KAAKhkC,KAAM4jC,EAAMC,EAAMC,UAE/BL,EAAUnkC,QAoBnB8gC,GAAMp/B,UAAUyyB,aAAe,SAASnZ,QACjCsJ,QAAQ,gBAAiBtJ,IAuBhC8lB,GAAMp/B,UAAU0yB,WAAa,SAASpZ,QAC/BsJ,QAAQ,cAAetJ,IAwB9B8lB,GAAMp/B,UAAU2yB,SAAW,SAASrZ,EAASgZ,QACtC1P,QAAQ,YAAatJ,EAASgZ,IAuBrC8M,GAAMp/B,UAAUg/B,UAAY,SAAS1lB,EAAS4I,QACvCU,QAAQ,aAActJ,EAAS4I,IC9kCtC,IAAI+gB,GAAM,EAEV,SAASC,GAAWv/B,OAGdw/B,GAFJx/B,EAAOA,GAAQ,IAEMw/B,WAAa/D,GAE9BgE,EAAez/B,EAAKy/B,cAAgB,SAAUhjC,UAAcA,GAC5DijC,EAAgB1/B,EAAK0/B,eAAiB,SAAUljC,EAAMC,UAAcD,GAEpEmjC,EAAiB3/B,EAAK2/B,gBAAkB,SAAUnjC,UAAeA,GACjEojC,EAAkB5/B,EAAK4/B,iBAAmB,SAAUnjC,EAAKD,UAAeC,GAGxEojC,EAAW,OACJpE,QACDllB,QACCqc,WACE3gB,QACFpF,GAIPizB,EAAe1lC,OAAOC,OAAO,MACvBa,OACA2nB,GACPgd,QAEEE,OAAS,SAAUx0B,OAClBy0B,EAAO,GAEPC,EAAQ,CAAC10B,GACT20B,EAAS,YAEJC,EAASt7B,EAAOu7B,MACvBv7B,EAAMw7B,MAAQx7B,EAAMw7B,SAAWf,IAC1BY,EAAOr7B,EAAMw7B,OAAQ,CACxBJ,EAAM9+B,KAAK0D,OAEPy7B,EAAM,CACRC,SAFUP,EAAKrlC,OAASslC,EAAMtlC,OAG9B6lC,QAASJ,GAEXF,EAAOr7B,EAAMw7B,OAASC,SAEjBJ,EAAOr7B,EAAMw7B,gBAUbN,EAAOl7B,EAAO47B,MACA,WAAjBnlC,EAAOuJ,IAAgC,OAAVA,SACxBA,KAEuB,mBAArBA,EAAMvI,WAA2B,IACtCuI,IAAU47B,MACP,IAAIL,KAAYP,KACfh7B,aAAiBg7B,EAASO,UACrBD,EAASt7B,EAAOu7B,GAI7Bv7B,WAnBepI,OAEbD,GADJC,EAAMgjC,EAAahjC,IACJH,oBACRojC,EAAcljC,EAAMC,GAgBjBikC,CAAU77B,MAEhBsK,MAAMC,QAAQvK,GAAQ,SACpB87B,EAAW,GACNrmC,EAAM,EAAGA,EAAMuK,EAAMlK,OAAQL,IACpCqmC,EAASrmC,GAAOylC,EAAOl7B,EAAMvK,IAE/BuK,EAAQ87B,MAEH,CACDA,EAAW,OACV,IAAIrmC,KAAOuK,EACVA,EAAMtK,eAAeD,KACvBqmC,EAASrmC,GAAOylC,EAAOl7B,EAAMvK,KAGjCuK,EAAQ87B,SAEH97B,OAGFo7B,EAAMtlC,QAAQ,KACf8B,EAAMwjC,EAAM/+B,QACZ0/B,EAAMb,EAAOtjC,EAAKA,GACtBujC,EAAK7+B,KAAKy/B,UAGLZ,QAGJa,SAAW,SAAUb,OACpBE,EAAS,YAEJY,EAAYC,EAAKvkC,EAAMwkC,GAC9BxkC,EAAOmjC,EAAenjC,OAClBC,EAAMskC,EAAIxkC,aAAaC,EAAMwkC,EAAKC,UACtCxkC,EAAMmjC,EAAgBnjC,EAAKD,YAIpBykC,EAAWF,EAAKT,EAAKU,OACvBV,EAAIC,gBACAQ,GAAOA,EAAIxkC,cAAgBukC,EAAYC,EAAKT,EAAKU,GAE1DD,EAAMjB,EAAaQ,EAAIE,UAAYO,MAC/B55B,EAAQm5B,EAAIC,aACXL,EAAO/4B,GAAQ,KAEd1K,EAAMqkC,EAAYC,EADXf,EAAK74B,GACiB65B,GACjCd,EAAO/4B,GAAS1K,SAEXyjC,EAAO/4B,UAGLq4B,EAAUjjC,aAAayjC,EAAK,GAAI,KAAMiB,IAMrD,IAAIC,GAAa,IAAI3B,GC1FrB,SAAS4B,GAAY7jC,EAAGC,QAChBlC,gBAAgB8lC,WACb,IAAIA,GAAY7jC,EAAGC,GAG5B4jC,GAAYC,OAAO/B,KAAKhkC,WAEnByR,OAASq0B,GAAYE,UACrBC,IAAMpmC,EAAKwB,YACXqQ,SAAW,EAEC,WAAbzR,EAAOgC,IAAkBpC,EAAK+B,QAAQK,SACnCgkC,IAAIlkC,IAAIE,GAEI,iBAANC,SACJwP,SAAWxP,IAGI,iBAAND,SACXyP,SAAWzP,GCfpB,SAASikC,GAAUC,EAAIC,QACfpmC,gBAAgBkmC,WACb,IAAIA,GAAUC,EAAIC,GAG3BF,GAAUH,OAAO/B,KAAKhkC,WAEjByR,OAASy0B,GAAUF,UACnBt0B,SAAWpN,EAAS8C,mBAGpBi/B,UAAYF,EAAKtmC,EAAK0B,MAAM4kC,GAAMtmC,EAAKwB,YACvCilC,UAAYF,EAAKvmC,EAAK0B,MAAM6kC,GAAMvmC,EAAKwB,YAIvCklC,UAAY1mC,EAAKwB,YACjBmlC,UAAY3mC,EAAKwB,YACjBolC,cAAe,OACfC,cAAe,ECjBtB,SAASC,GAAa7d,QACd9oB,gBAAgB2mC,WACb,IAAIA,GAAa7d,GAG1B6d,GAAaZ,OAAO/B,KAAKhkC,WAEpByR,OAASk1B,GAAaX,UACtBt0B,SAAWpN,EAAS8C,mBACpBw/B,WAAa/mC,EAAKwB,YAClBgpB,WAAa,QACbwc,UAAY,QACZxd,QAAU,EAEXP,GAAYA,EAASxpB,aAClBwnC,KAAKhe,GCZd,SAASie,GAAWje,EAAUke,QACtBhnC,gBAAgB+mC,WACb,IAAIA,GAAWje,EAAUke,GAGlCD,GAAWhB,OAAO/B,KAAKhkC,WAElByR,OAASs1B,GAAWf,UACpBt0B,SAAWpN,EAAS8C,mBACpBijB,WAAa,QACbhB,QAAU,OACV4d,aAAe,UACfC,aAAe,UACfC,iBAAkB,OAClBC,iBAAkB,OAElBC,SAAWL,EAEZle,GAAYA,EAASxpB,SACnB0nC,OACGM,YAAYxe,QAEZye,aAAaze,ICpCxB,SAAS0e,GAASC,EAAIC,EAAI1pB,EAAQvN,QAC1BzQ,gBAAgBwnC,WACb,IAAIA,GAASC,EAAIC,EAAI1pB,EAAQvN,GAGtC+2B,GAASzB,OAAO/B,KAAKhkC,WAEhB2nC,UAAUF,EAAIC,EAAI1pB,EAAQvN,GCFjC,SAASm3B,GAAe9V,EAAU+V,EAASphB,EAAKqhB,EAASnhB,GACvDmL,EAASpT,WAAa,MAElBoR,EAAKlf,EAAU4C,QAAQiT,EAAKohB,EAAQ5B,KACpClW,EAAKnf,EAAU4C,QAAQmT,EAAKmhB,EAAQ7B,KAEpC8B,EAAUloC,EAAK0D,gBAAgBwsB,EAAID,GAGnCkY,EAFKH,EAAQn2B,SACRo2B,EAAQp2B,SAEbq2B,EAAUC,EAASA,IAIvBlW,EAAS1c,KAAOiJ,EAAS2H,UACzB8L,EAASvT,WAAWxc,IAAI8lC,EAAQ5B,KAChCnU,EAASxT,YAAYxc,UACrBgwB,EAASpT,WAAa,EACtBoT,EAAStT,OAAO,GAAGD,WAAWxc,IAAI+lC,EAAQ7B,KAG1CnU,EAAStT,OAAO,GAAGxY,GAAG8Y,GAAGE,OAAS,EAClC8S,EAAStT,OAAO,GAAGxY,GAAG8Y,GAAGI,MAAQb,EAAS+G,SAC1C0M,EAAStT,OAAO,GAAGxY,GAAG8Y,GAAGG,OAAS,EAClC6S,EAAStT,OAAO,GAAGxY,GAAG8Y,GAAGK,MAAQd,EAAS+G,UCE5C,SAAS6iB,GAAkBnW,EAAUoW,EAAOzhB,EAAKqhB,EAASnhB,GACxDmL,EAASpT,WAAa,MAGlBypB,EAAIv3B,EAAUgD,SAAS6S,EAAK7V,EAAU4C,QAAQmT,EAAKmhB,EAAQ7B,MAE3Dp5B,EAAIq7B,EAAM7B,UACVv5B,EAAIo7B,EAAM5B,UACV8B,EAAIvoC,EAAKgD,IAAIiK,EAAGD,GAGhBw7B,EAAIxoC,EAAK6D,IAAI0kC,EAAGvoC,EAAKgD,IAAIiK,EAAGq7B,IAC5B3mC,EAAI3B,EAAK6D,IAAI0kC,EAAGvoC,EAAKgD,IAAIslC,EAAGt7B,IAE5Bm7B,EAASE,EAAMx2B,SAAWo2B,EAAQp2B,YAGlClQ,GAAK,EAAK,KACRwzB,EAAIn1B,EAAK0B,MAAMsL,GACfrE,EAAI3I,EAAKgD,IAAIslC,EAAGnT,MACXn1B,EAAK6D,IAAI8E,EAAGA,GACZw/B,EAASA,YAKdE,EAAMzB,aAAc,KAClB6B,EAAKJ,EAAM3B,UACXgC,EAAK17B,EACL27B,EAAK3oC,EAAKgD,IAAI0lC,EAAID,MACbzoC,EAAK6D,IAAI8kC,EAAI3oC,EAAKgD,IAAI0lC,EAAIJ,IAG1B,gBAKXrW,EAAS1c,KAAOiJ,EAAS2H,UACzB8L,EAASxT,YAAYxc,UACrBgwB,EAASvT,WAAWxc,IAAIizB,GACxBlD,EAASpT,WAAa,EACtBoT,EAAStT,OAAO,GAAGD,WAAWxc,IAAI+lC,EAAQ7B,KAG1CnU,EAAStT,OAAO,GAAGxY,GAAG8Y,GAAGE,OAAS,EAClC8S,EAAStT,OAAO,GAAGxY,GAAG8Y,GAAGI,MAAQb,EAAS+G,SAC1C0M,EAAStT,OAAO,GAAGxY,GAAG8Y,GAAGG,OAAS,OAClC6S,EAAStT,OAAO,GAAGxY,GAAG8Y,GAAGK,MAAQd,EAAS+G,aAKxCijB,GAAK,EAAK,CACRrT,EAAIn1B,EAAK0B,MAAMuL,GACftE,EAAI3I,EAAKgD,IAAIslC,EAAGnT,MACXn1B,EAAK6D,IAAI8E,EAAGA,GACZw/B,EAASA,YAKdE,EAAMxB,aAAc,KAClB+B,EAAKP,EAAM1B,UACXkC,EAAK57B,EACL67B,EAAK9oC,EAAKgD,IAAI4lC,EAAIC,MACb7oC,EAAK6D,IAAIilC,EAAI9oC,EAAKgD,IAAIslC,EAAGO,IAGzB,gBAKX5W,EAAS1c,KAAOiJ,EAAS2H,UACzB8L,EAASxT,YAAYxc,UACrBgwB,EAASvT,WAAWxc,IAAIizB,GACxBlD,EAASpT,WAAa,EACtBoT,EAAStT,OAAO,GAAGD,WAAWxc,IAAI+lC,EAAQ7B,KAG1CnU,EAAStT,OAAO,GAAGxY,GAAG8Y,GAAGE,OAAS,EAClC8S,EAAStT,OAAO,GAAGxY,GAAG8Y,GAAGI,MAAQb,EAAS+G,SAC1C0M,EAAStT,OAAO,GAAGxY,GAAG8Y,GAAGG,OAAS,OAClC6S,EAAStT,OAAO,GAAGxY,GAAG8Y,GAAGK,MAAQd,EAAS+G,cAKxCwjB,EAAM/oC,EAAK6D,IAAI0kC,EAAGA,GAElBpT,EAAIn1B,EAAKgE,QAAQwkC,EAAIO,EAAK/7B,EAAGrL,EAAIonC,EAAK97B,GACtCtE,EAAI3I,EAAKgD,IAAIslC,EAAGnT,QACXn1B,EAAK6D,IAAI8E,EAAGA,GACZw/B,EAASA,QAIdtiC,EAAI7F,EAAKyB,KAAK8mC,EAAEroC,EAAGqoC,EAAEtoC,GACrBD,EAAK6D,IAAIgC,EAAG7F,EAAKgD,IAAIslC,EAAGt7B,IAAM,GAChCnH,EAAE3D,KAAK2D,EAAE5F,GAAI4F,EAAE3F,GAEjB2F,EAAExC,YAEF4uB,EAAS1c,KAAOiJ,EAAS4H,QACzB6L,EAASxT,YAAc5Y,EACvBosB,EAASvT,WAAWxc,IAAI8K,GACxBilB,EAASpT,WAAa,EACtBoT,EAAStT,OAAO,GAAGD,WAAWxc,IAAI+lC,EAAQ7B,KAG1CnU,EAAStT,OAAO,GAAGxY,GAAG8Y,GAAGE,OAAS,EAClC8S,EAAStT,OAAO,GAAGxY,GAAG8Y,GAAGI,MAAQb,EAASgH,OAC1CyM,EAAStT,OAAO,GAAGxY,GAAG8Y,GAAGG,OAAS,EAClC6S,EAAStT,OAAO,GAAGxY,GAAG8Y,GAAGK,MAAQd,EAAS+G,UCpI5C,SAASyjB,GAAkBC,EAAO1vB,EAAK2vB,EAAO1vB,WACxC2vB,EAASF,EAAMzf,QACf4f,EAASF,EAAM1f,QACf6f,EAAMJ,EAAMjC,UACZsC,EAAML,EAAMze,WACZ+e,EAAML,EAAM1e,WACZxW,EAAKjD,EAAU0D,OAAO+E,EAAKD,GAE3BgW,EAAY,EACZia,GAAiBvkC,EAAAA,EACZzF,EAAI,EAAGA,EAAI2pC,IAAU3pC,EAAG,SAE3BqG,EAAI8K,EAAIgD,QAAQK,EAAG9C,EAAGm4B,EAAI7pC,IAC1B8mC,EAAKv1B,EAAU4C,QAAQK,EAAIs1B,EAAI9pC,IAG/BiqC,EAAKxkC,EAAAA,EACA6J,EAAI,EAAGA,EAAIs6B,IAAUt6B,EAAG,KAC3B46B,EAAM1pC,EAAK6D,IAAIgC,EAAG0jC,EAAIz6B,IAAM9O,EAAK6D,IAAIgC,EAAGygC,GACxCoD,EAAMD,IACRA,EAAKC,GAILD,EAAKD,IACPA,EAAgBC,EAChBla,EAAY/vB,GAKhBwpC,GAAkBW,eAAiBH,EACnCR,GAAkBY,WAAara,EAyDjC,SAASsa,GAAgB5X,EAAU6X,EAAOljB,EAAKmjB,EAAOjjB,GACpDmL,EAASpT,WAAa,MAClBkb,EAAc+P,EAAMj4B,SAAWk4B,EAAMl4B,SAEzCm3B,GAAkBc,EAAOljB,EAAKmjB,EAAOjjB,OACjCuhB,EAAQW,GAAkBY,WAC1BI,EAAchB,GAAkBW,oBAChCK,EAAcjQ,IAGlBiP,GAAkBe,EAAOjjB,EAAKgjB,EAAOljB,OACjCqjB,EAAQjB,GAAkBY,WAC1BM,EAAclB,GAAkBW,oBAChCO,EAAcnQ,QAGdkP,EACAC,EACA3vB,EACAC,EACA2wB,EACAC,EAGAF,EAAcF,EAFN,GAAMvlC,EAAS0C,YAGzB8hC,EAAQc,EACRb,EAAQY,EACRvwB,EAAMuN,EACNtN,EAAMoN,EACNujB,EAAQF,EACRhY,EAAS1c,KAAOiJ,EAAS6H,QACzB+jB,EAAO,IAEPnB,EAAQa,EACRZ,EAAQa,EACRxwB,EAAMqN,EACNpN,EAAMsN,EACNqjB,EAAQ9B,EACRpW,EAAS1c,KAAOiJ,EAAS4H,QACzBgkB,EAAO,OAGLC,EAAe,CAAE,IAAI7rB,EAASiH,WAAc,IAAIjH,EAASiH,aA5F/D,SAA0B3V,EAAGm5B,EAAO1vB,EAAK4wB,EAAOjB,EAAO1vB,WACjD8wB,EAAWrB,EAAMjC,UAEjBoC,EAASF,EAAM1f,QACf+gB,EAAYrB,EAAM1e,WAClBggB,EAAWtB,EAAMlC,UAKjByD,EAAU95B,EAAIkD,KAAK2F,EAAItI,EAAGP,EAAIgD,QAAQ4F,EAAIrI,EAAGo5B,EAASH,KAGtDl+B,EAAQ,EACRy+B,EAASzlC,EAAAA,EACJzF,EAAI,EAAGA,EAAI4pC,IAAU5pC,EAAG,KAC3BqE,EAAM7D,EAAK6D,IAAI4mC,EAASD,EAAShrC,IACjCqE,EAAM6mC,IACRA,EAAS7mC,EACToI,EAAQzM,OAKRmrC,EAAK1+B,EACL2+B,EAAKD,EAAK,EAAIvB,EAASuB,EAAK,EAAI,EAEpC76B,EAAE,GAAGnO,EAAIoP,EAAU4C,QAAQ6F,EAAK+wB,EAAUI,IAC1C76B,EAAE,GAAG3J,GAAG8Y,GAAGE,OAASgrB,EACpBr6B,EAAE,GAAG3J,GAAG8Y,GAAGG,OAASurB,EACpB76B,EAAE,GAAG3J,GAAG8Y,GAAGI,MAAQb,EAASgH,OAC5B1V,EAAE,GAAG3J,GAAG8Y,GAAGK,MAAQd,EAAS+G,SAE5BzV,EAAE,GAAGnO,EAAIoP,EAAU4C,QAAQ6F,EAAK+wB,EAAUK,IAC1C96B,EAAE,GAAG3J,GAAG8Y,GAAGE,OAASgrB,EACpBr6B,EAAE,GAAG3J,GAAG8Y,GAAGG,OAASwrB,EACpB96B,EAAE,GAAG3J,GAAG8Y,GAAGI,MAAQb,EAASgH,OAC5B1V,EAAE,GAAG3J,GAAG8Y,GAAGK,MAAQd,EAAS+G,SAwD5BslB,CAAiBR,EAAcpB,EAAO1vB,EAAK4wB,EAAOjB,EAAO1vB,OAErD2vB,EAASF,EAAMzf,QACfshB,EAAY7B,EAAMze,WAElBugB,EAAMZ,EACNa,EAAMb,EAAQ,EAAIhB,EAASgB,EAAQ,EAAI,EAEvCc,EAAMH,EAAUC,GAChBG,EAAMJ,EAAUE,GAEhBG,EAAenrC,EAAKgD,IAAIkoC,EAAKD,GACjCE,EAAa9nC,gBAETob,EAAcze,EAAK8D,MAAMqnC,EAAc,GACvC9jB,EAAarnB,EAAKgE,QAAQ,GAAKinC,EAAK,GAAKC,GAEzCxV,EAAU/kB,EAAIgD,QAAQ4F,EAAIrI,EAAGi6B,GAC7BxgC,EAAS3K,EAAK8D,MAAM4xB,EAAS,GAEjCuV,EAAMl6B,EAAU4C,QAAQ4F,EAAK0xB,GAC7BC,EAAMn6B,EAAU4C,QAAQ4F,EAAK2xB,OAGzBE,EAAcprC,EAAK6D,IAAI8G,EAAQsgC,GAG/BI,GAAerrC,EAAK6D,IAAI6xB,EAASuV,GAAOlR,EACxCuR,EAActrC,EAAK6D,IAAI6xB,EAASwV,GAAOnR,EAGvCwR,EAAc,CAAE,IAAI/sB,EAASiH,WAAc,IAAIjH,EAASiH,YACxD+lB,EAAc,CAAE,IAAIhtB,EAASiH,WAAc,IAAIjH,EAASiH,iBAIvDjH,EAASsG,kBAAkBymB,EAAalB,EAAcrqC,EAAKiE,IAAIyxB,GAChE2V,EAAaN,GAER,GAKJvsB,EAASsG,kBAAkB0mB,EAAaD,EAAa7V,EACtD4V,EAAaN,GAER,IAKT/Y,EAASxT,YAAcA,EACvBwT,EAASvT,WAAa2I,UAElBxI,EAAa,EACRrf,EAAI,EAAGA,EAAIgsC,EAAY/rC,SAAiCD,EAAG,IACjDQ,EAAK6D,IAAI8G,EAAQ6gC,EAAYhsC,GAAGmC,GAAKypC,GAEpCrR,EAAa,KACzB5H,EAAKF,EAAStT,OAAOE,MACzBsT,EAAGzT,WAAWxc,IAAI6O,EAAUgD,SAASyF,EAAKgyB,EAAYhsC,GAAGmC,IACzDwwB,EAAGhsB,GAAKqlC,EAAYhsC,GAAG2G,GACnBikC,EAAM,KAEJnrB,EAAKkT,EAAGhsB,GAAG8Y,GACXE,EAASF,EAAGE,OACZC,EAASH,EAAGG,OACZC,EAAQJ,EAAGI,MACXC,EAAQL,EAAGK,MACfL,EAAGE,OAASC,EACZH,EAAGG,OAASD,EACZF,EAAGI,MAAQC,EACXL,EAAGK,MAAQD,IAEXR,GAINoT,EAASpT,WAAaA,KCvNxB,SAAS4sB,GAAqBxZ,EAAUyZ,EAAU9kB,EAAKqhB,EAASnhB,GAC9DmL,EAASpT,WAAa,UAGlB/O,EAAIiB,EAAU4C,QAAQmT,EAAKmhB,EAAQ7B,KACnCuF,EAAS56B,EAAUgD,SAAS6S,EAAK9W,GAGjC87B,EAAc,EACd7W,GAAc9vB,EAAAA,EACdkjC,EAASuD,EAAS75B,SAAWo2B,EAAQp2B,SACrCg6B,EAAcH,EAASliB,QACvBP,EAAWyiB,EAASlhB,WACpBshB,EAAUJ,EAAS1E,UAEdxnC,EAAI,EAAGA,EAAIqsC,IAAersC,EAAG,KAChCwL,EAAIhL,EAAK6D,IAAIioC,EAAQtsC,GAAIQ,EAAKgD,IAAI2oC,EAAQ1iB,EAASzpB,QAEnDwL,EAAIm9B,SAKJn9B,EAAI+pB,IACNA,EAAa/pB,EACb4gC,EAAcpsC,OAKdusC,EAAaH,EACbI,EAAaD,EAAa,EAAIF,EAAcE,EAAa,EAAI,EAC7DzF,EAAKrd,EAAS8iB,GACdxF,EAAKtd,EAAS+iB,MAGdjX,EAAal1B,EAAKQ,eACpB4xB,EAASpT,WAAa,EACtBoT,EAAS1c,KAAOiJ,EAAS4H,QACzB6L,EAASxT,YAAYvc,IAAI4pC,EAAQF,IACjC3Z,EAASvT,WAAWnc,WAAW,GAAK+jC,EAAI,GAAKC,GAC7CtU,EAAStT,OAAO,GAAGD,WAAaupB,EAAQ7B,IAGxCnU,EAAStT,OAAO,GAAGxY,GAAG8Y,GAAGE,OAAS,EAClC8S,EAAStT,OAAO,GAAGxY,GAAG8Y,GAAGI,MAAQb,EAAS+G,SAC1C0M,EAAStT,OAAO,GAAGxY,GAAG8Y,GAAGG,OAAS,OAClC6S,EAAStT,OAAO,GAAGxY,GAAG8Y,GAAGK,MAAQd,EAAS+G,cAKxC0mB,EAAKjsC,EAAK6D,IAAI7D,EAAKgD,IAAI2oC,EAAQrF,GAAKtmC,EAAKgD,IAAIujC,EAAID,IACjD4F,EAAKlsC,EAAK6D,IAAI7D,EAAKgD,IAAI2oC,EAAQpF,GAAKvmC,EAAKgD,IAAIsjC,EAAIC,OACjD0F,GAAM,EAAK,IACTjsC,EAAK0D,gBAAgBioC,EAAQrF,GAAM6B,EAASA,SAIhDlW,EAASpT,WAAa,EACtBoT,EAAS1c,KAAOiJ,EAAS4H,QACzB6L,EAASxT,YAAYlc,WAAW,EAAGopC,GAAS,EAAGrF,GAC/CrU,EAASxT,YAAYpb,YACrB4uB,EAASvT,WAAa4nB,EACtBrU,EAAStT,OAAO,GAAGD,WAAWxc,IAAI+lC,EAAQ7B,KAG1CnU,EAAStT,OAAO,GAAGxY,GAAG8Y,GAAGE,OAAS,EAClC8S,EAAStT,OAAO,GAAGxY,GAAG8Y,GAAGI,MAAQb,EAAS+G,SAC1C0M,EAAStT,OAAO,GAAGxY,GAAG8Y,GAAGG,OAAS,EAClC6S,EAAStT,OAAO,GAAGxY,GAAG8Y,GAAGK,MAAQd,EAAS+G,cACrC,GAAI2mB,GAAM,EAAK,IAChBlsC,EAAK0D,gBAAgBioC,EAAQpF,GAAM4B,EAASA,SAIhDlW,EAASpT,WAAa,EACtBoT,EAAS1c,KAAOiJ,EAAS4H,QACzB6L,EAASxT,YAAYlc,WAAW,EAAGopC,GAAS,EAAGpF,GAC/CtU,EAASxT,YAAYpb,YACrB4uB,EAASvT,WAAWxc,IAAIqkC,GACxBtU,EAAStT,OAAO,GAAGD,WAAWxc,IAAI+lC,EAAQ7B,KAG1CnU,EAAStT,OAAO,GAAGxY,GAAG8Y,GAAGE,OAAS,EAClC8S,EAAStT,OAAO,GAAGxY,GAAG8Y,GAAGI,MAAQb,EAAS+G,SAC1C0M,EAAStT,OAAO,GAAGxY,GAAG8Y,GAAGG,OAAS,EAClC6S,EAAStT,OAAO,GAAGxY,GAAG8Y,GAAGK,MAAQd,EAAS+G,aACrC,KACD4mB,EAAansC,EAAKmE,IAAImiC,EAAIC,OAC1BxR,EAAa/0B,EAAK6D,IAAI8nC,EAAQG,EAAQC,IACpC/rC,EAAK6D,IAAIsoC,EAAYL,EAAQC,KAClB5D,SAIjBlW,EAASpT,WAAa,EACtBoT,EAAS1c,KAAOiJ,EAAS4H,QACzB6L,EAASxT,YAAYvc,IAAI4pC,EAAQC,IACjC9Z,EAASvT,WAAWxc,IAAIiqC,GACxBla,EAAStT,OAAO,GAAGD,WAAWxc,IAAI+lC,EAAQ7B,KAG1CnU,EAAStT,OAAO,GAAGxY,GAAG8Y,GAAGE,OAAS,EAClC8S,EAAStT,OAAO,GAAGxY,GAAG8Y,GAAGI,MAAQb,EAAS+G,SAC1C0M,EAAStT,OAAO,GAAGxY,GAAG8Y,GAAGG,OAAS,EAClC6S,EAAStT,OAAO,GAAGxY,GAAG8Y,GAAGK,MAAQd,EAAS+G,UTlB9C8e,GAAWQ,OAASmB,GAAWnB,OAC/BR,GAAWsB,SAAWK,GAAWL,SCnGjCM,GAAYC,OAASv0B,EACrBs0B,GAAY9kC,UAAYjC,OAAOa,OAAOkmC,GAAYC,OAAO/kC,WAEzD8kC,GAAYE,KAAO,SACnBx0B,EAAMwD,MAAM8wB,GAAYE,MAAQF,GAyBhCA,GAAY9kC,UAAUC,WAAa,iBAC1B,CACLmU,KAAMpV,KAAKyR,OAEXrH,EAAGpK,KAAKimC,IACR+B,OAAQhoC,KAAK0R,WAIjBo0B,GAAY5kC,aAAe,SAASC,UAC3B,IAAI2kC,GAAY3kC,EAAKiJ,EAAGjJ,EAAK6mC,SAGtClC,GAAY9kC,UAAUsU,UAAY,kBACzBtV,KAAK0R,UAGdo0B,GAAY9kC,UAAUyH,UAAY,kBACzBzI,KAAKimC,KAGdH,GAAY9kC,UAAU2oB,UAAY,SAAS7d,UAElC9L,KAAKimC,KAGdH,GAAY9kC,UAAUmuB,eAAiB,SAASrjB,UACvC,GAMTg6B,GAAY9kC,UAAUwU,OAAS,eACzBjU,EAAQ,IAAIukC,UAChBvkC,EAAMkQ,OAASzR,KAAKyR,OACpBlQ,EAAMmQ,SAAW1R,KAAK0R,SACtBnQ,EAAM0kC,IAAMjmC,KAAKimC,IAAI1kC,QACdA,GAGTukC,GAAY9kC,UAAUyU,cAAgB,kBAC7B,GAGTqwB,GAAY9kC,UAAU0U,UAAY,SAAS7B,EAAIzJ,OACzC4T,EAASne,EAAKyC,IAAIuR,EAAGzJ,EAAGoG,EAAIgD,QAAQK,EAAG9C,EAAG/Q,KAAKimC,MAC/Cz9B,EAAI3I,EAAKgD,IAAIuH,EAAG4T,UACbne,EAAK6D,IAAI8E,EAAGA,IAAMxI,KAAK0R,SAAW1R,KAAK0R,UAOhDo0B,GAAY9kC,UAAUiJ,QAAU,SAASnL,EAAQF,EAAOiV,EAAI+B,OAEtD/E,EAAWhR,EAAKyC,IAAIuR,EAAGzJ,EAAGoG,EAAIgD,QAAQK,EAAG9C,EAAG/Q,KAAKimC,MACjDp7B,EAAIhL,EAAKgD,IAAIjE,EAAMyL,GAAIwG,GACvB3O,EAAIrC,EAAK6D,IAAImH,EAAGA,GAAK7K,KAAK0R,SAAW1R,KAAK0R,SAG1CrC,EAAIxP,EAAKgD,IAAIjE,EAAM0L,GAAI1L,EAAMyL,IAC7BsF,EAAI9P,EAAK6D,IAAImH,EAAGwE,GAChB48B,EAAKpsC,EAAK6D,IAAI2L,EAAGA,GACjB68B,EAAQv8B,EAAIA,EAAIs8B,EAAK/pC,KAGrBgqC,EAAQ,GAAOD,EAAKvsC,EAAKQ,eACpB,MAIL+B,IAAM0N,EAAIjQ,EAAKa,KAAK2rC,WAGpB,GAAOjqC,GAAKA,GAAKrD,EAAMmM,YAAckhC,IACvChqC,GAAKgqC,EACLntC,EAAOkM,SAAW/I,EAClBnD,EAAO0L,OAAS3K,EAAKyC,IAAIuI,EAAGhL,EAAKiD,IAAIb,EAAGoN,IACxCvQ,EAAO0L,OAAOtH,aACP,IAMX4iC,GAAY9kC,UAAU6U,YAAc,SAAS5P,EAAM4N,EAAI+B,OACjDxL,EAAIvK,EAAKyC,IAAIuR,EAAGzJ,EAAGoG,EAAIgD,QAAQK,EAAG9C,EAAG/Q,KAAKimC,MAC9ChgC,EAAKzB,WAAWzC,IAAIqI,EAAEtK,EAAIE,KAAK0R,SAAUtH,EAAErK,EAAIC,KAAK0R,UACpDzL,EAAKxB,WAAW1C,IAAIqI,EAAEtK,EAAIE,KAAK0R,SAAUtH,EAAErK,EAAIC,KAAK0R,WAGtDo0B,GAAY9kC,UAAU8U,YAAc,SAASC,EAAUC,GACrDD,EAASgI,KAAO/H,EAAUtW,EAAKyH,GAAKnH,KAAK0R,SAAW1R,KAAK0R,SACzDqE,EAASiI,OAAShe,KAAKimC,IAEvBlwB,EAASkI,EAAIlI,EAASgI,MACf,GAAM/d,KAAK0R,SAAW1R,KAAK0R,SAAW7R,EAAK6D,IAAI1D,KAAKimC,IAAKjmC,KAAKimC,OAGvEH,GAAY9kC,UAAUiV,qBAAuB,SAASC,GACpDA,EAAMmU,WAAWvkB,KAAK9F,KAAKimC,KAC3B/vB,EAAMmT,QAAU,EAChBnT,EAAMxE,SAAW1R,KAAK0R,UCtIxBw0B,GAAUH,OAASv0B,EACnB00B,GAAUllC,UAAYjC,OAAOa,OAAOsmC,GAAUH,OAAO/kC,WAErDklC,GAAUF,KAAO,OACjBx0B,EAAMwD,MAAMkxB,GAAUF,MAAQE,GA6B9BA,GAAUllC,UAAUC,WAAa,iBACxB,CACLmU,KAAMpV,KAAKyR,OAEX06B,QAASnsC,KAAKqmC,UACd+F,QAASpsC,KAAKsmC,UAEd+F,QAASrsC,KAAKumC,UACd+F,QAAStsC,KAAKwmC,UACd+F,WAAYvsC,KAAKymC,aACjB+F,WAAYxsC,KAAK0mC,eAIrBR,GAAUhlC,aAAe,SAASC,OAC5BkU,EAAQ,IAAI6wB,GAAU/kC,EAAKgrC,QAAShrC,EAAKirC,gBACzC/2B,EAAMk3B,YACRl3B,EAAMo3B,QAAQtrC,EAAKkrC,SAEjBh3B,EAAMm3B,YACRn3B,EAAMq3B,QAAQvrC,EAAKmrC,SAEdj3B,GAGT6wB,GAAUllC,UAAU0rC,QAAU,SAASC,UACjCA,QACGnG,UAAUzkC,IAAI4qC,QACdjG,cAAe,SAEfF,UAAU1kC,eACV4kC,cAAe,GAEf1mC,MAGTkmC,GAAUllC,UAAUyrC,QAAU,SAASG,UACjCA,QACGrG,UAAUxkC,IAAI6qC,QACdnG,cAAe,SAEfF,UAAUzkC,eACV2kC,cAAe,GAEfzmC,MAMTkmC,GAAUllC,UAAU8lC,KAAO,SAASX,EAAIC,eACjCC,UAAUtkC,IAAIokC,QACdG,UAAUvkC,IAAIqkC,QACdK,cAAe,OACfC,cAAe,EACb1mC,MAMTkmC,GAAUllC,UAAUwU,OAAS,eACvBjU,EAAQ,IAAI2kC,UAChB3kC,EAAMkQ,OAASzR,KAAKyR,OACpBlQ,EAAMmQ,SAAW1R,KAAK0R,SACtBnQ,EAAM8kC,UAAUtkC,IAAI/B,KAAKqmC,WACzB9kC,EAAM+kC,UAAUvkC,IAAI/B,KAAKsmC,WACzB/kC,EAAMglC,UAAUxkC,IAAI/B,KAAKumC,WACzBhlC,EAAMilC,UAAUzkC,IAAI/B,KAAKwmC,WACzBjlC,EAAMklC,aAAezmC,KAAKymC,aAC1BllC,EAAMmlC,aAAe1mC,KAAK0mC,aACnBnlC,GAGT2kC,GAAUllC,UAAUyU,cAAgB,kBAC3B,GAGTywB,GAAUllC,UAAU0U,UAAY,SAAS7B,EAAIzJ,UACpC,GAOT87B,GAAUllC,UAAUiJ,QAAU,SAASnL,EAAQF,EAAOiV,EAAI+B,OAIpDvL,EAAKmG,EAAIoD,SAASC,EAAG9C,EAAGlR,EAAKgD,IAAIjE,EAAMyL,GAAIwJ,EAAGzJ,IAC9CE,EAAKkG,EAAIoD,SAASC,EAAG9C,EAAGlR,EAAKgD,IAAIjE,EAAM0L,GAAIuJ,EAAGzJ,IAC9C5B,EAAI3I,EAAKgD,IAAIyH,EAAID,GAEjB87B,EAAKnmC,KAAKqmC,UACVD,EAAKpmC,KAAKsmC,UACV8B,EAAIvoC,EAAKgD,IAAIujC,EAAID,GACjB37B,EAAS3K,EAAKyB,IAAI8mC,EAAEroC,GAAIqoC,EAAEtoC,GAC9B0K,EAAOtH,gBAKH2pC,EAAYhtC,EAAK6D,IAAI8G,EAAQ3K,EAAKgD,IAAIsjC,EAAI97B,IAC1CyiC,EAAcjtC,EAAK6D,IAAI8G,EAAQhC,MAEhB,GAAfskC,SACK,MAGLt9B,EAAIq9B,EAAYC,KAChBt9B,EAAI,GAAO5Q,EAAMmM,YAAcyE,SAC1B,MAGLuB,EAAIlR,EAAKyC,IAAI+H,EAAIxK,EAAKiD,IAAI0M,EAAGhH,IAI7B6G,EAAIxP,EAAKgD,IAAIujC,EAAID,GACjB8F,EAAKpsC,EAAK6D,IAAI2L,EAAGA,MACX,GAAN48B,SACK,MAGLphC,EAAIhL,EAAK6D,IAAI7D,EAAKgD,IAAIkO,EAAGo1B,GAAK92B,GAAK48B,UACnCphC,EAAI,GAAO,EAAMA,KAIrB/L,EAAOkM,SAAWwE,EAEhB1Q,EAAO0L,OADLqiC,EAAY,EACEr8B,EAAIgD,QAAQK,EAAG9C,EAAGvG,GAAQ1G,MAE1B0M,EAAIgD,QAAQK,EAAG9C,EAAGvG,IAE7B,IAGT07B,GAAUllC,UAAU6U,YAAc,SAAS5P,EAAM4N,EAAI+B,OAC/CuwB,EAAKv1B,EAAU4C,QAAQK,EAAI7T,KAAKqmC,WAChCD,EAAKx1B,EAAU4C,QAAQK,EAAI7T,KAAKsmC,WAEpCrgC,EAAKmD,cAAc+8B,EAAIC,GACvBngC,EAAKsD,OAAOvJ,KAAK0R,WAGnBw0B,GAAUllC,UAAU8U,YAAc,SAASC,EAAUC,GACnDD,EAASgI,KAAO,EAChBhI,EAASiI,OAAO5b,WAAW,GAAKpC,KAAKqmC,UAAW,GAAKrmC,KAAKsmC,WAC1DvwB,EAASkI,EAAI,GAGfioB,GAAUllC,UAAUiV,qBAAuB,SAASC,GAClDA,EAAMmU,WAAWvkB,KAAK9F,KAAKqmC,WAC3BnwB,EAAMmU,WAAWvkB,KAAK9F,KAAKsmC,WAC3BpwB,EAAMmT,QAAU,EAChBnT,EAAMxE,SAAW1R,KAAK0R,UC7LxBi1B,GAAaZ,OAASv0B,EACtBm1B,GAAa3lC,UAAYjC,OAAOa,OAAO+mC,GAAaZ,OAAO/kC,WAE3D2lC,GAAaX,KAAO,UACpBx0B,EAAMwD,MAAM2xB,GAAaX,MAAQW,GA2BjCA,GAAa3lC,UAAUC,WAAa,iBAC3B,CACLmU,KAAMpV,KAAKyR,OAEXqX,SAAU9oB,KAAKqqB,aAInBsc,GAAazlC,aAAe,SAASC,EAAMwV,EAASzB,OAC9C4T,EAAW,MACX3nB,EAAK2nB,aACF,IAAIzpB,EAAI,EAAGA,EAAI8B,EAAK2nB,SAASxpB,OAAQD,IACxCypB,EAAShjB,KAAKoP,EAAQrV,EAAMsB,EAAK2nB,SAASzpB,YAIlC,IAAIsnC,GAAa7d,IAI/B6d,GAAa3lC,UAAU2oB,UAAY,SAAS7d,UAEnC9L,KAAKqqB,WAAWve,IAMzB66B,GAAa3lC,UAAUwU,OAAS,eAC1BjU,EAAQ,IAAIolC,GAChBplC,EAAMkQ,OAASzR,KAAKyR,OACpBlQ,EAAMmQ,SAAW1R,KAAK0R,SACtBnQ,EAAM8nB,QAAUrpB,KAAKqpB,QACrB9nB,EAAMqlC,WAAW7kC,IAAI/B,KAAK4mC,gBACrB,IAAIvnC,EAAI,EAAGA,EAAIW,KAAKqpB,QAAShqB,IAChCkC,EAAM8oB,WAAWvkB,KAAK9F,KAAKqqB,WAAWhrB,GAAGkC,aAElClC,EAAI,EAAGA,EAAIW,KAAK6mC,UAAUvnC,OAAQD,IACzCkC,EAAMslC,UAAU/gC,KAAK9F,KAAK6mC,UAAUxnC,GAAGkC,gBAElCA,GAGTolC,GAAa3lC,UAAUyU,cAAgB,kBAC9B,GAgDTkxB,GAAa3lC,UAAU+T,OAAS,gBACzB+xB,KAAK9mC,KAAKqqB,aAajBsc,GAAa3lC,UAAU8lC,KAAO,SAAShe,MAEjCA,EAASxpB,OAAS,OACfqoC,UAAU,EAAK,gBAIlBjiC,EAAIhG,EAAKkB,IAAIkoB,EAASxpB,OAAQgF,EAASuC,oBAGvCkmC,EAAK,GACA1tC,EAAI,EAAGA,EAAIqG,IAAKrG,EAAG,SACtBmC,EAAIsnB,EAASzpB,GAEb2tC,GAAS,EACJr+B,EAAI,EAAGA,EAAIo+B,EAAGztC,SAAUqP,KAC3B9O,EAAK0D,gBAAgB/B,EAAGurC,EAAGp+B,IAAM,IAAOrK,EAAS2C,kBAAmB,CACtE+lC,GAAS,QAKTA,GACFD,EAAGjnC,KAAKtE,OAIZkE,EAAIqnC,EAAGztC,QACC,OAGDqoC,UAAU,EAAK,YAQlBsF,EAAK,EACLC,EAAKH,EAAG,GAAGjtC,MACNT,EAAI,EAAGA,EAAIqG,IAAKrG,EAAG,KACtBS,EAAIitC,EAAG1tC,GAAGS,GACVA,EAAIotC,GAAOptC,IAAMotC,GAAMH,EAAG1tC,GAAGU,EAAIgtC,EAAGE,GAAIltC,KAC1CktC,EAAK5tC,EACL6tC,EAAKptC,WAILqtC,EAAO,GACPpqC,EAAI,EACJqqC,EAAKH,IAEA,CACPE,EAAKpqC,GAAKqqC,MAENC,EAAK,MACA1+B,EAAI,EAAGA,EAAIjJ,IAAKiJ,KACnB0+B,IAAOD,OAKP/9B,EAAIxP,EAAKgD,IAAIkqC,EAAGM,GAAKN,EAAGI,EAAKpqC,KAE7B4M,GADAnO,EAAI3B,EAAKgD,IAAIkqC,EAAGp+B,GAAIo+B,EAAGI,EAAKpqC,KACxBlD,EAAK8D,MAAM0L,EAAG7N,IAElBmO,EAAI,IACN09B,EAAK1+B,GAIG,IAANgB,GAAanO,EAAEyB,gBAAkBoM,EAAEpM,kBACrCoqC,EAAK1+B,QAdL0+B,EAAK1+B,OAkBP5L,EACFqqC,EAAKC,EAEDA,IAAOJ,WAKTlqC,EAAI,OAGD4kC,UAAU,EAAK,aAIjBte,QAAUtmB,OAGVsnB,WAAa,OACThrB,EAAI,EAAGA,EAAI0D,IAAK1D,OAClBgrB,WAAWhrB,GAAK0tC,EAAGI,EAAK9tC,QAItBA,EAAI,EAAGA,EAAI0D,IAAK1D,EAAG,KACtBmrC,EAAKnrC,EACLorC,EAAKprC,EAAI,EAAI0D,EAAI1D,EAAI,EAAI,EACzB+a,EAAOva,EAAKgD,IAAI7C,KAAKqqB,WAAWogB,GAAKzqC,KAAKqqB,WAAWmgB,SAEpD3D,UAAUxnC,GAAKQ,EAAK8D,MAAMyW,EAAM,QAChCysB,UAAUxnC,GAAG6D,iBAIf0jC,WA1KP,SAAyB0G,EAAIh/B,WAGvBqB,EAAI9P,EAAKwB,OACT0K,EAAO,EAIPwhC,EAAO1tC,EAAKwB,OASZmsC,EAAO,EAAM,EAERnuC,EAAI,EAAGA,EAAIiP,IAASjP,EAAG,KAE1BgL,EAAKkjC,EACLjjC,EAAKgjC,EAAGjuC,GACRouC,EAAKpuC,EAAI,EAAIiP,EAAQg/B,EAAGjuC,EAAI,GAAKiuC,EAAG,GAEpC9E,EAAK3oC,EAAKgD,IAAIyH,EAAID,GAClBs+B,EAAK9oC,EAAKgD,IAAI4qC,EAAIpjC,GAIlBqjC,EAAe,GAFX7tC,EAAK8D,MAAM6kC,EAAIG,GAGvB58B,GAAQ2hC,EAGR/9B,EAAElN,OAAOirC,EAAeF,EAAMnjC,GAC9BsF,EAAElN,OAAOirC,EAAeF,EAAMljC,GAC9BqF,EAAElN,OAAOirC,EAAeF,EAAMC,UAKhC99B,EAAE7M,IAAI,EAAMiJ,GACL4D,EAgIWg+B,CAAgB3tC,KAAKqqB,WAAYtnB,OAMrD4jC,GAAa3lC,UAAU2mC,UAAY,SAASF,EAAIC,EAAI1pB,EAAQvN,WAErD4Z,WAAW,GAAKxqB,EAAKyB,IAAImmC,GAAKC,QAC9Brd,WAAW,GAAKxqB,EAAKyB,IAAImmC,EAAIC,QAC7Brd,WAAW,GAAKxqB,EAAKyB,KAAKmmC,EAAIC,QAC9Brd,WAAW,GAAKxqB,EAAKyB,KAAKmmC,GAAKC,QAE/Bb,UAAU,GAAKhnC,EAAKyB,IAAI,EAAK,QAC7BulC,UAAU,GAAKhnC,EAAKyB,IAAI,EAAK,QAC7BulC,UAAU,GAAKhnC,EAAKyB,KAAK,EAAK,QAC9BulC,UAAU,GAAKhnC,EAAKyB,IAAI,GAAM,QAE9B+nB,QAAU,EAEXxpB,EAAK+B,QAAQoc,GAAS,CACxBvN,EAAQA,GAAS,OAEZm2B,WAAW7kC,IAAIic,OAEhBnK,EAAKjD,EAAUI,WACnB6C,EAAGzJ,EAAErI,IAAIic,GACTnK,EAAG9C,EAAEhP,IAAI0O,OAGJ,IAAIpR,EAAI,EAAGA,EAAIW,KAAKqpB,UAAWhqB,OAC7BgrB,WAAWhrB,GAAKuR,EAAU4C,QAAQK,EAAI7T,KAAKqqB,WAAWhrB,SACtDwnC,UAAUxnC,GAAKmR,EAAIgD,QAAQK,EAAG9C,EAAG/Q,KAAK6mC,UAAUxnC,MAK3DsnC,GAAa3lC,UAAU0U,UAAY,SAAS7B,EAAIzJ,WAC1CwjC,EAASp9B,EAAIoD,SAASC,EAAG9C,EAAGlR,EAAKgD,IAAIuH,EAAGyJ,EAAGzJ,IAEtC/K,EAAI,EAAGA,EAAIW,KAAKqpB,UAAWhqB,EAAG,IAC3BQ,EAAK6D,IAAI1D,KAAK6mC,UAAUxnC,GAAIQ,EAAKgD,IAAI+qC,EAAQ5tC,KAAKqqB,WAAWhrB,KAC7D,SACD,SAIJ,GAGTsnC,GAAa3lC,UAAUiJ,QAAU,SAASnL,EAAQF,EAAOiV,EAAI+B,WAGvDvL,EAAKmG,EAAIoD,SAASC,EAAG9C,EAAGlR,EAAKgD,IAAIjE,EAAMyL,GAAIwJ,EAAGzJ,IAC9CE,EAAKkG,EAAIoD,SAASC,EAAG9C,EAAGlR,EAAKgD,IAAIjE,EAAM0L,GAAIuJ,EAAGzJ,IAC9C5B,EAAI3I,EAAKgD,IAAIyH,EAAID,GAEjBnG,EAAQ,EACRD,EAAQrF,EAAMmM,YAEde,GAAS,EAEJzM,EAAI,EAAGA,EAAIW,KAAKqpB,UAAWhqB,EAAG,KAIjCwtC,EAAYhtC,EAAK6D,IAAI1D,KAAK6mC,UAAUxnC,GAAIQ,EAAKgD,IAAI7C,KAAKqqB,WAAWhrB,GAAIgL,IACrEyiC,EAAcjtC,EAAK6D,IAAI1D,KAAK6mC,UAAUxnC,GAAImJ,MAE3B,GAAfskC,MACED,EAAY,SACP,OAOLC,EAAc,GAAOD,EAAY3oC,EAAQ4oC,GAG3C5oC,EAAQ2oC,EAAYC,EACpBhhC,EAAQzM,GACCytC,EAAc,GAAOD,EAAY5oC,EAAQ6oC,IAGlD7oC,EAAQ4oC,EAAYC,MAQpB7oC,EAAQC,SACH,SAMP4H,GAAS,IACXhN,EAAOkM,SAAW9G,EAClBpF,EAAO0L,OAASgG,EAAIgD,QAAQK,EAAG9C,EAAG/Q,KAAK6mC,UAAU/6B,KAC1C,IAMX66B,GAAa3lC,UAAU6U,YAAc,SAAS5P,EAAM4N,EAAI+B,WAClDi4B,EAAO/oC,EAAAA,EAAUgpC,EAAOhpC,EAAAA,EACxBipC,GAAQjpC,EAAAA,EAAUkpC,GAAQlpC,EAAAA,EACrBzF,EAAI,EAAGA,EAAIW,KAAKqpB,UAAWhqB,EAAG,KACjCmC,EAAIoP,EAAU4C,QAAQK,EAAI7T,KAAKqqB,WAAWhrB,IAC9CwuC,EAAOnuC,EAAKkB,IAAIitC,EAAMrsC,EAAE1B,GACxBiuC,EAAOruC,EAAKmB,IAAIktC,EAAMvsC,EAAE1B,GACxBguC,EAAOpuC,EAAKkB,IAAIktC,EAAMtsC,EAAEzB,GACxBiuC,EAAOtuC,EAAKmB,IAAImtC,EAAMxsC,EAAEzB,GAG1BkG,EAAKzB,WAAWzC,IAAI8rC,EAAMC,GAC1B7nC,EAAKxB,WAAW1C,IAAIgsC,EAAMC,GAC1B/nC,EAAKsD,OAAOvJ,KAAK0R,WAGnBi1B,GAAa3lC,UAAU8U,YAAc,SAASC,EAAUC,WA2BlDgI,EAASne,EAAKwB,OACd0K,EAAO,EACPkS,EAAI,EAIJpT,EAAIhL,EAAKwB,OAGJhC,EAAI,EAAGA,EAAIW,KAAKqpB,UAAWhqB,EAClCwL,EAAEvI,IAAItC,KAAKqqB,WAAWhrB,IAExBwL,EAAE/H,IAAI,EAAM9C,KAAKqpB,aAEb4kB,EAAS,EAAM,MAEV5uC,EAAI,EAAGA,EAAIW,KAAKqpB,UAAWhqB,EAAG,KAEjCmpC,EAAK3oC,EAAKgD,IAAI7C,KAAKqqB,WAAWhrB,GAAIwL,GAClC89B,EAAKtpC,EAAI,EAAIW,KAAKqpB,QAAUxpB,EAAKgD,IAAI7C,KAAKqqB,WAAWhrB,EAAI,GAAIwL,GAAKhL,EACjEgD,IAAI7C,KAAKqqB,WAAW,GAAIxf,GAEzBqC,EAAIrN,EAAK8D,MAAM6kC,EAAIG,GAEnB+E,EAAe,GAAMxgC,EACzBnB,GAAQ2hC,EAGR1vB,EAAOxb,WAAWkrC,EAAeO,EAAQzF,EAAIkF,EAAeO,EAAQtF,OAEhEuF,EAAM1F,EAAG1oC,EACTquC,EAAM3F,EAAGzoC,EACTquC,EAAMzF,EAAG7oC,EACTuuC,EAAM1F,EAAG5oC,EAKbke,GAAM,IAAOgwB,EAAS/gC,GAHVghC,EAAMA,EAAME,EAAMF,EAAME,EAAMA,GAC9BD,EAAMA,EAAME,EAAMF,EAAME,EAAMA,IAM5Ct4B,EAASgI,KAAO/H,EAAUjK,EAI1BiS,EAAOlb,IAAI,EAAMiJ,GACjBgK,EAASiI,OAAO5b,WAAW,EAAG4b,EAAQ,EAAGnT,GAGzCkL,EAASkI,EAAIjI,EAAUiI,EAGvBlI,EAASkI,GAAKlI,EAASgI,MAChBle,EAAK6D,IAAIqS,EAASiI,OAAQjI,EAASiI,QAAUne,EAAK6D,IAAIsa,EAAQA,KAKvE2oB,GAAa3lC,UAAUiN,SAAW,eAC3B,IAAI5O,EAAI,EAAGA,EAAIW,KAAKqpB,UAAWhqB,UAC9BmrC,EAAKnrC,EACLorC,EAAKprC,EAAIW,KAAKqpB,QAAU,EAAImhB,EAAK,EAAI,EACrCpgC,EAAIpK,KAAKqqB,WAAWmgB,GACpBpC,EAAIvoC,EAAKgD,IAAI7C,KAAKqqB,WAAWogB,GAAKrgC,GAE7BuE,EAAI,EAAGA,EAAI3O,KAAKqpB,UAAW1a,KAC9BA,GAAK67B,GAAM77B,GAAK87B,OAIhBjpC,EAAI3B,EAAKgD,IAAI7C,KAAKqqB,WAAW1b,GAAIvE,MAC7BvK,EAAK8D,MAAMykC,EAAG5mC,GACd,SACC,SAKN,GAGTmlC,GAAa3lC,UAAUiV,qBAAuB,SAASC,GACrDA,EAAMmU,WAAarqB,KAAKqqB,WACxBnU,EAAMmT,QAAUrpB,KAAKqpB,QACrBnT,EAAMxE,SAAW1R,KAAK0R,UCrexBq1B,GAAWhB,OAASv0B,EACpBu1B,GAAW/lC,UAAYjC,OAAOa,OAAOmnC,GAAWhB,OAAO/kC,WAEvD+lC,GAAWf,KAAO,QAClBx0B,EAAMwD,MAAM+xB,GAAWf,MAAQe,GAqC/BA,GAAW/lC,UAAUC,WAAa,eAC1BE,EAAO,CACXiU,KAAMpV,KAAKyR,OACXqX,SAAU9oB,KAAKqqB,WACfikB,OAAQtuC,KAAKqnC,SACbkH,cAAevuC,KAAKmnC,gBACpBqH,cAAexuC,KAAKonC,wBAElBpnC,KAAKinC,eACP9lC,EAAKstC,WAAazuC,KAAKinC,cAErBjnC,KAAKknC,eACP/lC,EAAKutC,WAAa1uC,KAAKknC,cAElB/lC,GAGT4lC,GAAW7lC,aAAe,SAASC,EAAMwV,EAASzB,OAC5C4T,EAAW,MACX3nB,EAAK2nB,aACF,IAAIzpB,EAAI,EAAGA,EAAI8B,EAAK2nB,SAASxpB,OAAQD,IACxCypB,EAAShjB,KAAKoP,EAAQrV,EAAMsB,EAAK2nB,SAASzpB,SAG1CgW,EAAQ,IAAI0xB,GAAWje,EAAU3nB,EAAKmtC,eACtCntC,EAAKstC,YACPp5B,EAAMs5B,cAAcxtC,EAAKstC,YAEvBttC,EAAKutC,YACPr5B,EAAMu5B,cAAcztC,EAAKutC,YAEpBr5B,GAcT0xB,GAAW/lC,UAAUsmC,YAAc,SAASxe,OAGrC,IAAIzpB,EAAI,EAAGA,EAAIypB,EAASxpB,SAAUD,EAC5BypB,EAASzpB,EAAI,GACbypB,EAASzpB,QAKfgrB,WAAa,QACbhB,QAAUP,EAASxpB,OAAS,MACxBD,EAAI,EAAGA,EAAIypB,EAASxpB,SAAUD,OAChCgrB,WAAWhrB,GAAKQ,EAAK0B,MAAMunB,EAASzpB,gBAEtCgrB,WAAWvB,EAASxpB,QAAUO,EAAK0B,MAAMunB,EAAS,SAElDme,aAAejnC,KAAKqqB,WAAWrqB,KAAKqpB,QAAU,QAC9C6d,aAAelnC,KAAKqqB,WAAW,QAC/B8c,iBAAkB,OAClBC,iBAAkB,EAChBpnC,MAST+mC,GAAW/lC,UAAUumC,aAAe,SAASze,OAGtC,IAAIzpB,EAAI,EAAGA,EAAIypB,EAASxpB,SAAUD,EAE5BypB,EAASzpB,EAAI,GACbypB,EAASzpB,QAIfgqB,QAAUP,EAASxpB,WACfD,EAAI,EAAGA,EAAIypB,EAASxpB,SAAUD,OAChCgrB,WAAWhrB,GAAKQ,EAAK0B,MAAMunB,EAASzpB,gBAGtC8nC,iBAAkB,OAClBC,iBAAkB,OAClBH,aAAe,UACfC,aAAe,KACblnC,MAGT+mC,GAAW/lC,UAAU+T,OAAS,WACxB/U,KAAKqnC,cACFC,YAAYtnC,KAAKqqB,iBAEjBkd,aAAavnC,KAAKqqB,aAQ3B0c,GAAW/lC,UAAU2tC,cAAgB,SAASF,QACvCxH,aAAewH,OACftH,iBAAkB,GAOzBJ,GAAW/lC,UAAU4tC,cAAgB,SAASF,QACvCxH,aAAewH,OACftH,iBAAkB,GAMzBL,GAAW/lC,UAAUwU,OAAS,eACxBjU,EAAQ,IAAIwlC,UAChBxlC,EAAMstC,YAAY7uC,KAAKqqB,YACvB9oB,EAAMkQ,OAASzR,KAAKyR,OACpBlQ,EAAMmQ,SAAW1R,KAAK0R,SACtBnQ,EAAM0lC,aAAejnC,KAAKinC,aAC1B1lC,EAAM2lC,aAAelnC,KAAKknC,aAC1B3lC,EAAM4lC,gBAAkBnnC,KAAKmnC,gBAC7B5lC,EAAM6lC,gBAAkBpnC,KAAKonC,gBACtB7lC,GAGTwlC,GAAW/lC,UAAUyU,cAAgB,kBAE5BzV,KAAKqpB,QAAU,GAIxB0d,GAAW/lC,UAAU8tC,aAAe,SAAS10B,EAAMxE,GAEjDwE,EAAK3I,OAASy0B,GAAUF,KACxB5rB,EAAK1I,SAAW1R,KAAK0R,SAErB0I,EAAKisB,UAAYrmC,KAAKqqB,WAAWzU,GACjCwE,EAAKksB,UAAYtmC,KAAKqqB,WAAWzU,EAAa,GAE1CA,EAAa,GACfwE,EAAKmsB,UAAYvmC,KAAKqqB,WAAWzU,EAAa,GAC9CwE,EAAKqsB,cAAe,IAEpBrsB,EAAKmsB,UAAYvmC,KAAKinC,aACtB7sB,EAAKqsB,aAAezmC,KAAKmnC,iBAGvBvxB,EAAa5V,KAAKqpB,QAAU,GAC9BjP,EAAKosB,UAAYxmC,KAAKqqB,WAAWzU,EAAa,GAC9CwE,EAAKssB,cAAe,IAEpBtsB,EAAKosB,UAAYxmC,KAAKknC,aACtB9sB,EAAKssB,aAAe1mC,KAAKonC,kBAI7BL,GAAW/lC,UAAU2oB,UAAY,SAAS7d,UAEpCA,EAAQ9L,KAAKqpB,QACRrpB,KAAKqqB,WAAWve,GAEhB9L,KAAKqqB,WAAW,IAO3B0c,GAAW/lC,UAAU0U,UAAY,SAAS7B,EAAIzJ,UACrC,GAGT28B,GAAW/lC,UAAUiJ,QAAU,SAASnL,EAAQF,EAAOiV,EAAI+B,UAGzC,IAAIswB,GAAUlmC,KAAK2pB,UAAU/T,GAAa5V,KAAK2pB,UAAU/T,EAAa,IACrE3L,QAAQnL,EAAQF,EAAOiV,EAAI,IAG9CkzB,GAAW/lC,UAAU6U,YAAc,SAAS5P,EAAM4N,EAAI+B,OAGhDuwB,EAAKv1B,EAAU4C,QAAQK,EAAI7T,KAAK2pB,UAAU/T,IAC1CwwB,EAAKx1B,EAAU4C,QAAQK,EAAI7T,KAAK2pB,UAAU/T,EAAa,IAE3D3P,EAAKmD,cAAc+8B,EAAIC,IAMzBW,GAAW/lC,UAAU8U,YAAc,SAASC,EAAUC,GACpDD,EAASgI,KAAO,EAChBhI,EAASiI,OAASne,EAAKyB,MACvByU,EAASkI,EAAI,GAGf8oB,GAAW/lC,UAAUiV,qBAAuB,SAASC,EAAON,GAE1DM,EAAMkU,SAAS,GAAKpqB,KAAK2pB,UAAU/T,GACnCM,EAAMkU,SAAS,GAAKpqB,KAAK2pB,UAAU/T,EAAa,GAChDM,EAAMmU,WAAanU,EAAMkU,SACzBlU,EAAMmT,QAAU,EAChBnT,EAAMxE,SAAW1R,KAAK0R,UCzQxB81B,GAASzB,OAASY,GAClBa,GAASxmC,UAAYjC,OAAOa,OAAO4nC,GAASzB,OAAO/kC,WAEnDwmC,GAASxB,KAAO,UCEhBpb,EAAQkN,QAAQgO,GAAYE,KAAMF,GAAYE,MAE9C,SAA6BlU,EAAUrL,EAAKlM,EAAUyE,EAAQ2H,EAAKlM,EAAUwE,GAG3E2oB,GAAe9V,EAAUvX,EAASlC,WAAYoO,EAAKhM,EAASpC,WAAYsO,MCF1EiE,EAAQkN,QAAQoO,GAAUF,KAAMF,GAAYE,MAG5C,SAA2BlU,EAAUrL,EAAKlM,EAAUyE,EAAQ2H,EAAKlM,EAC7DwE,OAIEuS,EAASjX,EAASlC,WAClBoZ,EAAShX,EAASpC,WAEtB4vB,GAAkBnW,EAAUN,EAAQ/K,EAAKgL,EAAQ9K,MAVnDiE,EAAQkN,QAAQiP,GAAWf,KAAMF,GAAYE,MAa7C,SAA4BlU,EAAUrL,EAAKlM,EAAUyE,EAAQ2H,EAAKlM,EAC9DwE,OAIE8vB,EAAQx0B,EAASlC,WACjB+B,EAAO,IAAI8rB,GACf6I,EAAMD,aAAa10B,EAAM4E,OAErBwS,EAASpX,EACTqX,EAAShX,EAASpC,WAEtB4vB,GAAkBnW,EAAUN,EAAQ/K,EAAKgL,EAAQ9K,MCzBnDiE,EAAQkN,QAAQ6O,GAAaX,KAAMW,GAAaX,MAEhD,SAAwBlU,EAAUrL,EAAKlM,EAAUyE,EAAQ2H,EAAKlM,EAAUwE,GAGtEyqB,GAAgB5X,EAAUvX,EAASlC,WAAYoO,EAAKhM,EAASpC,WAAYsO,MCN3EiE,EAAQkN,QAAQ6O,GAAaX,KAAMF,GAAYE,MAE/C,SAA8BlU,EAAUrL,EAAKlM,EAAUyE,EAAQ2H,EAAKlM,EAAUwE,GAG5EqsB,GAAqBxZ,EAAUvX,EAASlC,WAAYoO,EAAKhM,EAASpC,WAC9DsO,MCNNiE,EAAQkN,QAAQoO,GAAUF,KAAMW,GAAaX,MAG7C,SAA4BlU,EAAUrL,EAAKoE,EAAI7L,EAAQ2H,EAAKmE,EAAI7L,GAI9D+vB,GAAmBld,EAAUjH,EAAGxS,WAAYoO,EAAKqE,EAAGzS,WAAYsO,MANlEiE,EAAQkN,QAAQiP,GAAWf,KAAMW,GAAaX,MAS9C,SAA6BlU,EAAUrL,EAAKoE,EAAI7L,EAAQ2H,EAAKmE,EAAI7L,OAI3D8vB,EAAQlkB,EAAGxS,WACX+B,EAAO,IAAI8rB,GACf6I,EAAMD,aAAa10B,EAAM4E,GAEzBgwB,GAAmBld,EAAU1X,EAAMqM,EAAKqE,EAAGzS,WAAYsO,MAczD,SAASsoB,UACF75B,UACAtJ,WACA8oB,WAsBP,IAAIsa,GAAW,IAAID,GACfE,GAAc,IAAIF,GAClBG,GAAY,IApBhB,gBACOtmB,SAAW,QACX6iB,QAAU,QACVr9B,MAAQ,GAkBX+gC,GAAK,IAdT,gBACO7E,GAAIxqC,KAAKyqC,QACTtE,GAAInmC,KAAKomC,QACT57B,OAAS3K,EAAKwB,YACdiuC,YAAczvC,EAAKwB,YACnB6pC,iBACAqE,YAAc1vC,EAAKwB,YACnB8pC,aAaP,SAAS6D,GAAmBld,EAAUoW,EAAOzhB,EAAK+oB,EAAU7oB,OAatD9S,EAAKjD,EAAU0D,OAAOmS,EAAKE,GAE3B8oB,EAAY7+B,EAAU4C,QAAQK,EAAI27B,EAAS5I,YAE3CgG,EAAK1E,EAAM3B,UACXJ,EAAK+B,EAAM7B,UACXD,EAAK8B,EAAM5B,UACXqG,EAAKzE,EAAM1B,UAEX+F,EAAarE,EAAMzB,aACnB+F,EAAatE,EAAMxB,aAEnBsD,EAAQnqC,EAAKgD,IAAIujC,EAAID,GACzB6D,EAAM9mC,gBA0BFwsC,EAzBApF,EAAUzqC,EAAKyB,IAAI0oC,EAAMjqC,GAAIiqC,EAAMlqC,GACnC6vC,EAAU9vC,EAAK6D,IAAI4mC,EAASzqC,EAAKgD,IAAI4sC,EAAWtJ,IAChDyJ,EAAU,EACVC,EAAU,EACVC,GAAU,EACVC,GAAU,KAGVxD,EAAY,KACVyD,EAAQnwC,EAAKgD,IAAIsjC,EAAIyG,GACzBoD,EAAM9sC,gBACF+sC,EAAUpwC,EAAKyB,IAAI0uC,EAAMjwC,GAAIiwC,EAAMlwC,GACvCgwC,EAAUjwC,EAAK8D,MAAMqsC,EAAOhG,IAAU,EACtC4F,EAAU/vC,EAAK6D,IAAIusC,EAASR,GAAa5vC,EAAK6D,IAAIusC,EAASrD,MAIzDJ,EAAY,KACV0D,EAAQrwC,EAAKgD,IAAI8pC,EAAIvG,GACzB8J,EAAMhtC,gBACFitC,EAAUtwC,EAAKyB,IAAI4uC,EAAMnwC,GAAImwC,EAAMpwC,GACvCiwC,EAAUlwC,EAAK8D,MAAMqmC,EAAOkG,GAAS,EACrCL,EAAUhwC,EAAK6D,IAAIysC,EAASV,GAAa5vC,EAAK6D,IAAIysC,EAAS/J,OAIzD57B,EAAS3K,EAAKwB,OACd+uC,EAAavwC,EAAKwB,OAClBgvC,EAAaxwC,EAAKwB,OAGlBkrC,GAAcC,EACZsD,GAAWC,GACbL,EAAQE,GAAW,GAAOD,GAAW,GAAOE,GAAW,IAErDrlC,EAAOzI,IAAIuoC,GACX8F,EAAWruC,IAAIkuC,GACfI,EAAWtuC,IAAIouC,KAEf3lC,EAAOnI,QAAQ,EAAGioC,GAClB8F,EAAW/tC,QAAQ,EAAGioC,GACtB+F,EAAWhuC,QAAQ,EAAGioC,IAEfwF,GACTJ,EAAQE,GAAW,GAAQD,GAAW,GAAOE,GAAW,IAEtDrlC,EAAOzI,IAAIuoC,GACX8F,EAAWruC,IAAIkuC,GACfI,EAAWtuC,IAAIuoC,KAEf9/B,EAAOnI,QAAQ,EAAGioC,GAClB8F,EAAW/tC,QAAQ,EAAG8tC,GACtBE,EAAWhuC,QAAQ,EAAGioC,IAEfyF,GACTL,EAAQG,GAAW,GAAQD,GAAW,GAAOD,GAAW,IAEtDnlC,EAAOzI,IAAIuoC,GACX8F,EAAWruC,IAAIuoC,GACf+F,EAAWtuC,IAAIouC,KAEf3lC,EAAOnI,QAAQ,EAAGioC,GAClB8F,EAAW/tC,QAAQ,EAAGioC,GACtB+F,EAAWhuC,QAAQ,EAAG4tC,KAGxBP,EAAQE,GAAW,GAAOD,GAAW,GAAOE,GAAW,IAErDrlC,EAAOzI,IAAIuoC,GACX8F,EAAWruC,IAAIuoC,GACf+F,EAAWtuC,IAAIuoC,KAEf9/B,EAAOnI,QAAQ,EAAGioC,GAClB8F,EAAW/tC,QAAQ,EAAG8tC,GACtBE,EAAWhuC,QAAQ,EAAG4tC,IAGjB1D,EACLuD,GACFJ,EAAQE,GAAW,GAAOD,GAAW,IAEnCnlC,EAAOzI,IAAIuoC,GACX8F,EAAWruC,IAAIkuC,GACfI,EAAWhuC,QAAQ,EAAGioC,KAEtB9/B,EAAOnI,QAAQ,EAAGioC,GAClB8F,EAAWruC,IAAIuoC,GACf+F,EAAWhuC,QAAQ,EAAGioC,KAGxBoF,EAAQE,GAAW,GAAOD,GAAW,IAEnCnlC,EAAOzI,IAAIuoC,GACX8F,EAAWruC,IAAIuoC,GACf+F,EAAWhuC,QAAQ,EAAGioC,KAEtB9/B,EAAOnI,QAAQ,EAAGioC,GAClB8F,EAAWruC,IAAIuoC,GACf+F,EAAWhuC,QAAQ,EAAG4tC,IAGjBzD,EACLuD,GACFL,EAAQC,GAAW,GAAOE,GAAW,IAEnCrlC,EAAOzI,IAAIuoC,GACX8F,EAAW/tC,QAAQ,EAAGioC,GACtB+F,EAAWtuC,IAAIouC,KAEf3lC,EAAOnI,QAAQ,EAAGioC,GAClB8F,EAAW/tC,QAAQ,EAAGioC,GACtB+F,EAAWtuC,IAAIuoC,KAGjBoF,EAAQC,GAAW,GAAOE,GAAW,IAEnCrlC,EAAOzI,IAAIuoC,GACX8F,EAAW/tC,QAAQ,EAAGioC,GACtB+F,EAAWtuC,IAAIuoC,KAEf9/B,EAAOnI,QAAQ,EAAGioC,GAClB8F,EAAW/tC,QAAQ,EAAG8tC,GACtBE,EAAWtuC,IAAIuoC,KAInBoF,EAAQC,GAAW,IAEjBnlC,EAAOzI,IAAIuoC,GACX8F,EAAW/tC,QAAQ,EAAGioC,GACtB+F,EAAWhuC,QAAQ,EAAGioC,KAEtB9/B,EAAOnI,QAAQ,EAAGioC,GAClB8F,EAAWruC,IAAIuoC,GACf+F,EAAWtuC,IAAIuoC,IAKnB8E,GAAU9gC,MAAQkhC,EAASnmB,YACtB,IAAIhqB,EAAI,EAAGA,EAAImwC,EAASnmB,UAAWhqB,EACtC+vC,GAAUtmB,SAASzpB,GAAKuR,EAAU4C,QAAQK,EAAI27B,EAASnlB,WAAWhrB,IAClE+vC,GAAUzD,QAAQtsC,GAAKmR,EAAIgD,QAAQK,EAAG9C,EAAGy+B,EAAS3I,UAAUxnC,QAG1D2oC,EAAS,EAAM1jC,EAAS8C,cAE5B0qB,EAASpT,WAAa,EAGpBwwB,GAAS95B,KA5NC,EA6NV85B,GAASpjC,MAAQ4jC,EAAQ,EAAI,EAC7BR,GAASta,WAAa9vB,EAAAA,MAEbzF,EAAI,EAAGA,EAAI+vC,GAAU9gC,QAASjP,EAAG,EACpCwL,EAAIhL,EAAK6D,IAAI8G,EAAQ3K,EAAKgD,IAAIusC,GAAUtmB,SAASzpB,GAAI8mC,KACjD+I,GAASta,aACfsa,GAASta,WAAa/pB,OApOd,GA0OVqkC,GAAS95B,QAIT85B,GAASta,WAAaoT,IAKxBmH,GAAY/5B,MAnPA,EAoPZ+5B,GAAYrjC,OAAS,EACrBqjC,GAAYva,YAAc9vB,EAAAA,MAEtBwrC,EAAOzwC,EAAKyB,KAAKkJ,EAAOzK,EAAGyK,EAAO1K,OAE7BT,EAAI,EAAGA,EAAI+vC,GAAU9gC,QAASjP,EAAG,KAKpCwL,EAJAnF,EAAI7F,EAAKiE,IAAIsrC,GAAUzD,QAAQtsC,IAE/Bu7B,EAAK/6B,EAAK6D,IAAIgC,EAAG7F,EAAKgD,IAAIusC,GAAUtmB,SAASzpB,GAAI8mC,IACjD1L,EAAK56B,EAAK6D,IAAIgC,EAAG7F,EAAKgD,IAAIusC,GAAUtmB,SAASzpB,GAAI+mC,QACjDv7B,EAAInL,EAAKkB,IAAIg6B,EAAIH,IAEbuN,EAAQ,CAEdmH,GAAY/5B,KAhQN,EAiQN+5B,GAAYrjC,MAAQzM,EACpB8vC,GAAYva,WAAa/pB,WAKvBhL,EAAK6D,IAAIgC,EAAG4qC,IAAS,MACnBzwC,EAAK6D,IAAI7D,EAAKgD,IAAI6C,EAAG2qC,GAAa7lC,IAAWlG,EAAS4C,6BAItDrH,EAAK6D,IAAI7D,EAAKgD,IAAI6C,EAAG0qC,GAAa5lC,IAAWlG,EAAS4C,qBAKxD2D,EAAIskC,GAAYva,aAClBua,GAAY/5B,KAlRN,EAmRN+5B,GAAYrjC,MAAQzM,EACpB8vC,GAAYva,WAAa/pB,SAtRjB,GA2RVskC,GAAY/5B,MAAqB+5B,GAAYva,WAAaoT,QAQ1DuI,EAEFA,GArSY,GAoSVpB,GAAY/5B,KACA85B,GACLC,GAAYva,WANH,IAMgCsa,GAASta,WALzC,KAMJua,GAEAD,OAGZ7B,EAAK,CAAE,IAAIhvB,EAASiH,WAAc,IAAIjH,EAASiH,eA3SvC,GA6SRirB,EAAYn7B,KAAiB,CAC/B0c,EAAS1c,KAAOiJ,EAAS4H,YAIrBmJ,EAAY,EACZC,EAAYxvB,EAAK6D,IAAI8G,EAAQ4kC,GAAUzD,QAAQ,QAC1CtsC,EAAI,EAAGA,EAAI+vC,GAAU9gC,QAASjP,EAAG,KACpCmK,EAAQ3J,EAAK6D,IAAI8G,EAAQ4kC,GAAUzD,QAAQtsC,IAC3CmK,EAAQ6lB,IACVA,EAAY7lB,EACZ4lB,EAAY/vB,OAIZmrC,EAAKpb,EACLqb,EAAKD,EAAK,EAAI4E,GAAU9gC,MAAQk8B,EAAK,EAAI,EAE7C6C,EAAG,GAAG7rC,EAAI4tC,GAAUtmB,SAAS0hB,GAC7B6C,EAAG,GAAGrnC,GAAG8Y,GAAGE,OAAS,EACrBquB,EAAG,GAAGrnC,GAAG8Y,GAAGG,OAASurB,EACrB6C,EAAG,GAAGrnC,GAAG8Y,GAAGI,MAAQb,EAASgH,OAC7BgoB,EAAG,GAAGrnC,GAAG8Y,GAAGK,MAAQd,EAAS+G,SAE7BioB,EAAG,GAAG7rC,EAAI4tC,GAAUtmB,SAAS2hB,GAC7B4C,EAAG,GAAGrnC,GAAG8Y,GAAGE,OAAS,EACrBquB,EAAG,GAAGrnC,GAAG8Y,GAAGG,OAASwrB,EACrB4C,EAAG,GAAGrnC,GAAG8Y,GAAGI,MAAQb,EAASgH,OAC7BgoB,EAAG,GAAGrnC,GAAG8Y,GAAGK,MAAQd,EAAS+G,SAEzBsqB,GACFL,GAAG7E,GAAK,EACR6E,GAAG5E,GAAK,EACR4E,GAAGlJ,GAAKA,EACRkJ,GAAGjJ,GAAKA,EACRiJ,GAAG7kC,OAAOzI,IAAIuoC,KAEd+E,GAAG7E,GAAK,EACR6E,GAAG5E,GAAK,EACR4E,GAAGlJ,GAAKC,EACRiJ,GAAGjJ,GAAKD,EACRkJ,GAAG7kC,OAAOnI,QAAQ,EAAGioC,SAGvBxY,EAAS1c,KAAOiJ,EAAS6H,QAEzBmnB,EAAG,GAAG7rC,EAAI2kC,EACVkH,EAAG,GAAGrnC,GAAG8Y,GAAGE,OAAS,EACrBquB,EAAG,GAAGrnC,GAAG8Y,GAAGG,OAASsxB,EAAYzkC,MACjCuhC,EAAG,GAAGrnC,GAAG8Y,GAAGI,MAAQb,EAAS+G,SAC7BioB,EAAG,GAAGrnC,GAAG8Y,GAAGK,MAAQd,EAASgH,OAE7BgoB,EAAG,GAAG7rC,EAAI4kC,EACViH,EAAG,GAAGrnC,GAAG8Y,GAAGE,OAAS,EACrBquB,EAAG,GAAGrnC,GAAG8Y,GAAGG,OAASsxB,EAAYzkC,MACjCuhC,EAAG,GAAGrnC,GAAG8Y,GAAGI,MAAQb,EAAS+G,SAC7BioB,EAAG,GAAGrnC,GAAG8Y,GAAGK,MAAQd,EAASgH,OAE7BgqB,GAAG7E,GAAK+F,EAAYzkC,MACpBujC,GAAG5E,GAAK4E,GAAG7E,GAAK,EAAI4E,GAAU9gC,MAAQ+gC,GAAG7E,GAAK,EAAI,EAClD6E,GAAGlJ,GAAKiJ,GAAUtmB,SAASumB,GAAG7E,IAC9B6E,GAAGjJ,GAAKgJ,GAAUtmB,SAASumB,GAAG5E,IAC9B4E,GAAG7kC,OAAOzI,IAAIqtC,GAAUzD,QAAQ0D,GAAG7E,KAGrC6E,GAAGC,YAAYvtC,IAAIstC,GAAG7kC,OAAOzK,GAAIsvC,GAAG7kC,OAAO1K,GAC3CuvC,GAAGE,YAAYltC,QAAQ,EAAGgtC,GAAGC,aAC7BD,GAAGnE,YAAcrrC,EAAK6D,IAAI2rC,GAAGC,YAAaD,GAAGlJ,IAC7CkJ,GAAGlE,YAActrC,EAAK6D,IAAI2rC,GAAGE,YAAaF,GAAGjJ,QAGzCgF,EAAc,CAAE,IAAI/sB,EAASiH,WAAc,IAAIjH,EAASiH,YACxD+lB,EAAc,CAAE,IAAIhtB,EAASiH,WAAc,IAAIjH,EAASiH,iBAKvDjH,EAASsG,kBAAkBymB,EAAaiC,EAAIgC,GAAGC,YAAaD,GAAGnE,YAAamE,GAAG7E,IAE3ElmC,EAASsC,mBAKbyX,EAASsG,kBAAkB0mB,EAAaD,EAAaiE,GAAGE,YAAaF,GAAGlE,YAAakE,GAAG5E,IAEpFnmC,EAASsC,oBAnYN,GAwYR2pC,EAAYn7B,MACd0c,EAASxT,YAAcze,EAAK0B,MAAM8tC,GAAG7kC,QACrCsnB,EAASvT,WAAa1e,EAAK0B,MAAM8tC,GAAGlJ,MAEpCrU,EAASxT,YAAcze,EAAK0B,MAAMiuC,EAAS3I,UAAUwI,GAAG7E,KACxD1Y,EAASvT,WAAa1e,EAAK0B,MAAMiuC,EAASnlB,WAAWglB,GAAG7E,UAGtD9rB,EAAa,MACRrf,EAAI,EAAGA,EAAIiF,EAASsC,oBAAqBvH,EAAG,IAClCQ,EAAK6D,IAAI2rC,GAAG7kC,OAAQ3K,EAAKgD,IAAIwoC,EAAYhsC,GAAGmC,EAAG6tC,GAAGlJ,MAEjD6B,EAAQ,KACpBhW,EAAKF,EAAStT,OAAOE,GArZjB,GAuZJ6xB,EAAYn7B,MACd4c,EAAGzT,WAAa3N,EAAU8C,KAAKG,EAAIw3B,EAAYhsC,GAAGmC,GAClDwwB,EAAGhsB,GAAKqlC,EAAYhsC,GAAG2G,KAEvBgsB,EAAGzT,WAAa8sB,EAAYhsC,GAAGmC,EAC/BwwB,EAAGhsB,GAAG8Y,GAAGI,MAAQmsB,EAAYhsC,GAAG2G,GAAG8Y,GAAGK,MACtC6S,EAAGhsB,GAAG8Y,GAAGK,MAAQksB,EAAYhsC,GAAG2G,GAAG8Y,GAAGI,MACtC8S,EAAGhsB,GAAG8Y,GAAGE,OAASqsB,EAAYhsC,GAAG2G,GAAG8Y,GAAGG,OACvC+S,EAAGhsB,GAAG8Y,GAAGG,OAASosB,EAAYhsC,GAAG2G,GAAG8Y,GAAGE,UAGvCN,GAINoT,EAASpT,WAAaA,KCvbxB8xB,GAAcxK,KAAO,iBACrBzO,GAAMviB,MAAMw7B,GAAcxK,MAAQwK,GAElCA,GAAczK,OAASxO,GACvBiZ,GAAcxvC,UAAYjC,OAAOa,OAAO4wC,GAAczK,OAAO/kC,WAqB7D,IAAIyvC,GAAW,CACbC,YAAc,EACdC,aAAe,GAajB,SAASH,GAAc15B,EAAK8a,EAAOC,EAAO+e,EAASC,QAC3C7wC,gBAAgBwwC,WACb,IAAIA,GAAc15B,EAAK8a,EAAOC,EAAO+e,EAASC,MAInDhf,GAAS+e,GAAY,WAAYA,GAAa,MAAO/e,GAAW,MAAOA,EAAQ,KAC7E/mB,EAAO+mB,EACXA,EAAQ+e,EACRA,EAAU9lC,EAGZgM,EAAMC,EAAQD,EAAK25B,IACnBlZ,GAAMyM,KAAKhkC,KAAM8W,EAAK8a,EAAOC,GAC7BD,EAAQ5xB,KAAKw3B,QACb3F,EAAQ7xB,KAAKy3B,aAERhmB,OAAS++B,GAAcxK,UAGvB8K,eAAiBjxC,EAAK0B,MAAMqvC,EAAUhf,EAAM7N,cAAc6sB,GAAW95B,EAAIi6B,cAAgBlxC,EAAKwB,aAC9F2vC,eAAiBnxC,EAAK0B,MAAMsvC,EAAUhf,EAAM9N,cAAc8sB,GAAW/5B,EAAIm6B,cAAgBpxC,EAAKwB,aAC9F6vC,SAAWxxC,EAAKS,SAAS2W,EAAIxX,QAAUwX,EAAIxX,OAC9CO,EAAKuD,SAASwuB,EAAMjQ,cAAc3hB,KAAK8wC,gBAAiBjf,EAAMlQ,cAAc3hB,KAAKgxC,sBAC9EG,cAAgBr6B,EAAI45B,iBACpBU,eAAiBt6B,EAAI65B,kBACrBU,UAAY,OACZC,QAAU,OACVC,OAAS,OAGTC,SACAC,UACAC,UACAC,oBACAC,oBACAC,gBACAC,gBACAC,aACAC,aACAt1B,OAkBP8zB,GAAcxvC,UAAUC,WAAa,iBAC5B,CACLmU,KAAMpV,KAAKyR,OACXmgB,MAAO5xB,KAAKw3B,QACZ3F,MAAO7xB,KAAKy3B,QACZE,iBAAkB33B,KAAKujB,mBAEvBmtB,YAAa1wC,KAAKmxC,cAClBR,aAAc3wC,KAAKoxC,eAEnBL,aAAc/wC,KAAK8wC,eACnBG,aAAcjxC,KAAKgxC,eACnB1xC,OAAQU,KAAKkxC,SAEbhuB,QAASljB,KAAKqxC,UACdY,MAAOjyC,KAAKsxC,QACZY,KAAMlyC,KAAKuxC,SAIff,GAActvC,aAAe,SAASC,EAAMyZ,EAAO1F,UACjD/T,EAAOpC,OAAOC,OAAO,GAAImC,IACpBywB,MAAQ1c,EAAQgG,EAAM/Z,EAAKywB,MAAOhX,GACvCzZ,EAAK0wB,MAAQ3c,EAAQgG,EAAM/Z,EAAK0wB,MAAOjX,GAC3B,IAAI41B,GAAcrvC,IAOhCqvC,GAAcxvC,UAAUmxC,YAAc,SAASr7B,GACzCA,EAAI85B,aACDE,eAAe/uC,IAAI/B,KAAKw3B,QAAQzT,cAAcjN,EAAI85B,UAC9C95B,EAAIi6B,mBACRD,eAAe/uC,IAAI+U,EAAIi6B,cAG1Bj6B,EAAI+5B,aACDG,eAAejvC,IAAI/B,KAAKy3B,QAAQ1T,cAAcjN,EAAI+5B,UAC9C/5B,EAAIm6B,mBACRD,eAAejvC,IAAI+U,EAAIm6B,cAG1Bn6B,EAAIxX,OAAS,OACV4xC,UAAYp6B,EAAIxX,OACZwX,EAAIxX,OAAS,IACbwX,EAAI85B,SAAW95B,EAAI85B,SAAW95B,EAAI85B,SAAW95B,EAAI85B,gBACrDM,SAAWrxC,EAAKuD,SACjBpD,KAAKw3B,QAAQ7V,cAAc3hB,KAAK8wC,gBAChC9wC,KAAKy3B,QAAQ9V,cAAc3hB,KAAKgxC,mBAQxCR,GAAcxvC,UAAUoxC,gBAAkB,kBACjCpyC,KAAK8wC,gBAMdN,GAAcxvC,UAAUqxC,gBAAkB,kBACjCryC,KAAKgxC,gBAOdR,GAAcxvC,UAAUsxC,UAAY,SAAShzC,QACtC4xC,SAAW5xC,GAGlBkxC,GAAcxvC,UAAUuxC,UAAY,kBAC3BvyC,KAAKkxC,UAGdV,GAAcxvC,UAAUwxC,aAAe,SAASC,QACzCtB,cAAgBsB,GAGvBjC,GAAcxvC,UAAU0xC,aAAe,kBAC9B1yC,KAAKmxC,eAGdX,GAAcxvC,UAAU2xC,gBAAkB,SAAS3U,QAC5CoT,eAAiBpT,GAGxBwS,GAAcxvC,UAAU4xC,gBAAkB,kBACjC5yC,KAAKoxC,gBAGdZ,GAAcxvC,UAAUu3B,WAAa,kBAC5Bv4B,KAAKw3B,QAAQ7V,cAAc3hB,KAAK8wC,iBAGzCN,GAAcxvC,UAAUw3B,WAAa,kBAC5Bx4B,KAAKy3B,QAAQ9V,cAAc3hB,KAAKgxC,iBAGzCR,GAAcxvC,UAAUy3B,iBAAmB,SAASC,UAC3C74B,EAAKiD,IAAI9C,KAAKqxC,UAAWrxC,KAAKwxC,KAAK1uC,IAAI41B,IAGhD8X,GAAcxvC,UAAU23B,kBAAoB,SAASD,UAC5C,GAGT8X,GAAcxvC,UAAU43B,wBAA0B,SAASjH,QACpDggB,eAAiB3xC,KAAKw3B,QAAQ1a,QAAQ5L,iBACtC0gC,eAAiB5xC,KAAKy3B,QAAQ3a,QAAQ5L,iBACtC2gC,WAAa7xC,KAAKw3B,QAAQ7a,eAC1Bm1B,WAAa9xC,KAAKy3B,QAAQ9a,eAC1Bo1B,QAAU/xC,KAAKw3B,QAAQ3a,YACvBm1B,QAAUhyC,KAAKy3B,QAAQ5a,WAExBmK,EAAKhnB,KAAKw3B,QAAQxa,WAAWrN,EAC7B8kB,EAAKz0B,KAAKw3B,QAAQxa,WAAW/a,EAC7BmzB,EAAKp1B,KAAKw3B,QAAQza,WAAWvb,EAC7BkoB,EAAK1pB,KAAKw3B,QAAQza,WAAW5a,EAE7B8kB,EAAKjnB,KAAKy3B,QAAQza,WAAWrN,EAC7B+kB,EAAK10B,KAAKy3B,QAAQza,WAAW/a,EAC7BozB,EAAKr1B,KAAKy3B,QAAQ1a,WAAWvb,EAC7BooB,EAAK5pB,KAAKy3B,QAAQ1a,WAAW5a,EAE7B0wC,EAAKriC,EAAIlP,IAAImzB,GACbqe,EAAKtiC,EAAIlP,IAAIozB,QAEZ+c,KAAOjhC,EAAIgD,QAAQq/B,EAAIhzC,EAAKgD,IAAI7C,KAAK8wC,eAAgB9wC,KAAK2xC,sBAC1DD,KAAOlhC,EAAIgD,QAAQs/B,EAAIjzC,EAAKgD,IAAI7C,KAAKgxC,eAAgBhxC,KAAK4xC,sBAC1DJ,IAAM3xC,EAAKgD,IAAIhD,EAAKyC,IAAI2kB,EAAIjnB,KAAK0xC,MAAO7xC,EAAKyC,IAAI0kB,EAAIhnB,KAAKyxC,WAG3DnyC,EAASU,KAAKwxC,IAAIlyC,SAClBA,EAASgF,EAAS0C,gBACfwqC,IAAI1uC,IAAI,EAAMxD,QAEdkyC,IAAIzvC,IAAI,EAAK,OAGhBgxC,EAAOlzC,EAAK8D,MAAM3D,KAAKyxC,KAAMzxC,KAAKwxC,KAClCwB,EAAOnzC,EAAK8D,MAAM3D,KAAK0xC,KAAM1xC,KAAKwxC,KAClCyB,EAAUjzC,KAAK6xC,WAAa7xC,KAAK+xC,QAAUgB,EAAOA,EAAO/yC,KAAK8xC,WAC5D9xC,KAAKgyC,QAAUgB,EAAOA,UAGvBt2B,OAAoB,GAAXu2B,EAAiB,EAAMA,EAAU,EAE3CjzC,KAAKmxC,cAAgB,EAAK,KACxBpkC,EAAIzN,EAASU,KAAKkxC,SAGlBgC,EAAQ,EAAMxzC,EAAKyH,GAAKnH,KAAKmxC,cAG7B3oC,EAAI,EAAMxI,KAAK0c,OAAS1c,KAAKoxC,eAAiB8B,EAG9CC,EAAInzC,KAAK0c,OAASw2B,EAAQA,EAG1BtjC,EAAI+hB,EAAK+K,QACR4U,QAAU1hC,GAAKpH,EAAIoH,EAAIujC,QACvB7B,QAA0B,GAAhBtxC,KAAKsxC,QAAiB,EAAMtxC,KAAKsxC,QAAU,OACrDC,OAASxkC,EAAI6C,EAAIujC,EAAInzC,KAAKsxC,QAE/B2B,GAAWjzC,KAAKsxC,aACX50B,OAAoB,GAAXu2B,EAAiB,EAAMA,EAAU,YAE1C3B,QAAU,OACVC,OAAS,KAGZ5f,EAAKO,aAAc,MAEhBmf,WAAa1f,EAAKQ,YAEnB6C,EAAIn1B,EAAKiD,IAAI9C,KAAKqxC,UAAWrxC,KAAKwxC,KAEtCpc,EAAGxyB,OAAO5C,KAAK6xC,WAAY7c,GAC3BtL,GAAM1pB,KAAK+xC,QAAUlyC,EAAK8D,MAAM3D,KAAKyxC,KAAMzc,GAE3CK,EAAG5yB,OAAOzC,KAAK8xC,WAAY9c,GAC3BpL,GAAM5pB,KAAKgyC,QAAUnyC,EAAK8D,MAAM3D,KAAK0xC,KAAM1c,aAGtCqc,UAAY,OAGd7Z,QAAQza,WAAWvb,EAAEO,IAAIqzB,QACzBoC,QAAQza,WAAW5a,EAAIunB,OACvB+N,QAAQ1a,WAAWvb,EAAEO,IAAIszB,QACzBoC,QAAQ1a,WAAW5a,EAAIynB,GAG9B4mB,GAAcxvC,UAAU63B,yBAA2B,SAASlH,OACtDyD,EAAKp1B,KAAKw3B,QAAQza,WAAWvb,EAC7BkoB,EAAK1pB,KAAKw3B,QAAQza,WAAW5a,EAC7BkzB,EAAKr1B,KAAKy3B,QAAQ1a,WAAWvb,EAC7BooB,EAAK5pB,KAAKy3B,QAAQ1a,WAAW5a,EAG7BixC,EAAMvzC,EAAKyC,IAAI8yB,EAAIv1B,EAAK8D,MAAM+lB,EAAI1pB,KAAKyxC,OACvC4B,EAAMxzC,EAAKyC,IAAI+yB,EAAIx1B,EAAK8D,MAAMimB,EAAI5pB,KAAK0xC,OACvC4B,EAAOzzC,EAAK6D,IAAI1D,KAAKwxC,IAAK6B,GAAOxzC,EAAK6D,IAAI1D,KAAKwxC,IAAK4B,GAEpDlwB,GAAWljB,KAAK0c,QACb42B,EAAOtzC,KAAKuxC,OAASvxC,KAAKsxC,QAAUtxC,KAAKqxC,gBAC3CA,WAAanuB,MAEd8R,EAAIn1B,EAAKiD,IAAIogB,EAASljB,KAAKwxC,KAC/Bpc,EAAGxyB,OAAO5C,KAAK6xC,WAAY7c,GAC3BtL,GAAM1pB,KAAK+xC,QAAUlyC,EAAK8D,MAAM3D,KAAKyxC,KAAMzc,GAC3CK,EAAG5yB,OAAOzC,KAAK8xC,WAAY9c,GAC3BpL,GAAM5pB,KAAKgyC,QAAUnyC,EAAK8D,MAAM3D,KAAK0xC,KAAM1c,QAEtCwC,QAAQza,WAAWvb,EAAEO,IAAIqzB,QACzBoC,QAAQza,WAAW5a,EAAIunB,OACvB+N,QAAQ1a,WAAWvb,EAAEO,IAAIszB,QACzBoC,QAAQ1a,WAAW5a,EAAIynB,GAG9B4mB,GAAcxvC,UAAU83B,yBAA2B,SAASnH,MACtD3xB,KAAKmxC,cAAgB,SAEhB,MAGLnqB,EAAKhnB,KAAKw3B,QAAQxa,WAAWrN,EAC7B8kB,EAAKz0B,KAAKw3B,QAAQxa,WAAW/a,EAC7BglB,EAAKjnB,KAAKy3B,QAAQza,WAAWrN,EAC7B+kB,EAAK10B,KAAKy3B,QAAQza,WAAW/a,EAE7B4wC,EAAKriC,EAAIlP,IAAImzB,GACbqe,EAAKtiC,EAAIlP,IAAIozB,GAEbxK,EAAK1Z,EAAIiD,OAAOo/B,EAAI7yC,KAAK8wC,eAAgB9wC,KAAK2xC,gBAC9CxnB,EAAK3Z,EAAIiD,OAAOq/B,EAAI9yC,KAAKgxC,eAAgBhxC,KAAK4xC,gBAC9CvJ,EAAIxoC,EAAKgD,IAAIhD,EAAKyC,IAAI2kB,EAAIkD,GAAKtqB,EAAKyC,IAAI0kB,EAAIkD,IAG5Cnd,EADSs7B,EAAEnlC,YACElD,KAAKkxC,SACtBnkC,EAAIrN,EACCoB,MAAMiM,GAAIzI,EAASoD,oBAAqBpD,EAASoD,yBAElDwb,GAAWljB,KAAK0c,OAAS3P,EACzBioB,EAAIn1B,EAAKiD,IAAIogB,EAASmlB,UAE1BrhB,EAAGpkB,OAAO5C,KAAK6xC,WAAY7c,GAC3BP,GAAMz0B,KAAK+xC,QAAUlyC,EAAK8D,MAAMumB,EAAI8K,GACpC/N,EAAGxkB,OAAOzC,KAAK8xC,WAAY9c,GAC3BN,GAAM10B,KAAKgyC,QAAUnyC,EAAK8D,MAAMwmB,EAAI6K,QAE/BwC,QAAQxa,WAAWrN,EAAE5N,IAAIilB,QACzBwQ,QAAQxa,WAAW/a,EAAIwyB,OACvBgD,QAAQza,WAAWrN,EAAE5N,IAAIklB,QACzBwQ,QAAQza,WAAW/a,EAAIyyB,EAErBh1B,EAAKqE,IAAIgJ,GAAKzI,EAAS0C,YCzWhCusC,GAAcvN,KAAO,iBACrBzO,GAAMviB,MAAMu+B,GAAcvN,MAAQuN,GAElCA,GAAcxN,OAASxO,GACvBgc,GAAcvyC,UAAYjC,OAAOa,OAAO2zC,GAAcxN,OAAO/kC,WAc7D,IAAIyvC,GAAW,CACb+C,SAAW,EACXC,UAAY,GAYd,SAASF,GAAcz8B,EAAK8a,EAAOC,EAAO6hB,QAClC1zC,gBAAgBuzC,WACb,IAAIA,GAAcz8B,EAAK8a,EAAOC,EAAO6hB,GAG9C58B,EAAMC,EAAQD,EAAK25B,IACnBlZ,GAAMyM,KAAKhkC,KAAM8W,EAAK8a,EAAOC,GAC7BD,EAAQ5xB,KAAKw3B,QACb3F,EAAQ7xB,KAAKy3B,aAERhmB,OAAS8hC,GAAcvN,UAEvB8K,eAAiBjxC,EAAK0B,MAAMmyC,EAAS9hB,EAAM7N,cAAc2vB,GAAU58B,EAAIi6B,cAAgBlxC,EAAKwB,aAC5F2vC,eAAiBnxC,EAAK0B,MAAMmyC,EAAS7hB,EAAM9N,cAAc2vB,GAAU58B,EAAIm6B,cAAgBpxC,EAAKwB,aAG5FsyC,gBAAkB9zC,EAAKwB,YACvBuyC,iBAAmB,OACnBC,WAAa/8B,EAAI08B,cACjBM,YAAch9B,EAAI28B,eAGlBhC,UACAC,UACAC,oBACAC,oBACAC,gBACAC,gBACAC,aACAC,aACA+B,kBACAC,cAePT,GAAcvyC,UAAUC,WAAa,iBAC5B,CACLmU,KAAMpV,KAAKyR,OACXmgB,MAAO5xB,KAAKw3B,QACZ3F,MAAO7xB,KAAKy3B,QACZE,iBAAkB33B,KAAKujB,mBAEvBiwB,SAAUxzC,KAAK6zC,WACfJ,UAAWzzC,KAAK8zC,YAEhB/C,aAAc/wC,KAAK8wC,eACnBG,aAAcjxC,KAAKgxC,iBAIvBuC,GAAcryC,aAAe,SAASC,EAAMyZ,EAAO1F,UACjD/T,EAAOpC,OAAOC,OAAO,GAAImC,IACpBywB,MAAQ1c,EAAQgG,EAAM/Z,EAAKywB,MAAOhX,GACvCzZ,EAAK0wB,MAAQ3c,EAAQgG,EAAM/Z,EAAK0wB,MAAOjX,GAC3B,IAAI24B,GAAcpyC,IAOhCoyC,GAAcvyC,UAAUmxC,YAAc,SAASr7B,GACzCA,EAAI85B,aACDE,eAAe/uC,IAAI/B,KAAKw3B,QAAQzT,cAAcjN,EAAI85B,UAC9C95B,EAAIi6B,mBACRD,eAAe/uC,IAAI+U,EAAIi6B,cAG1Bj6B,EAAI+5B,aACDG,eAAejvC,IAAI/B,KAAKy3B,QAAQ1T,cAAcjN,EAAI+5B,UAC9C/5B,EAAIm6B,mBACRD,eAAejvC,IAAI+U,EAAIm6B,eAQhCsC,GAAcvyC,UAAUoxC,gBAAkB,kBACjCpyC,KAAK8wC,gBAMdyC,GAAcvyC,UAAUqxC,gBAAkB,kBACjCryC,KAAKgxC,gBAMduC,GAAcvyC,UAAUizC,YAAc,SAAStxB,QAExCkxB,WAAalxB,GAMpB4wB,GAAcvyC,UAAUkzC,YAAc,kBAC7Bl0C,KAAK6zC,YAMdN,GAAcvyC,UAAUmzC,aAAe,SAASnxB,QAEzC8wB,YAAc9wB,GAMrBuwB,GAAcvyC,UAAUozC,aAAe,kBAC9Bp0C,KAAK8zC,aAGdP,GAAcvyC,UAAUu3B,WAAa,kBAC5Bv4B,KAAKw3B,QAAQ7V,cAAc3hB,KAAK8wC,iBAGzCyC,GAAcvyC,UAAUw3B,WAAa,kBAC5Bx4B,KAAKy3B,QAAQ9V,cAAc3hB,KAAKgxC,iBAGzCuC,GAAcvyC,UAAUy3B,iBAAmB,SAASC,UAC3C74B,EAAKiD,IAAI41B,EAAQ14B,KAAK2zC,kBAG/BJ,GAAcvyC,UAAU23B,kBAAoB,SAASD,UAC5CA,EAAS14B,KAAK4zC,kBAGvBL,GAAcvyC,UAAU43B,wBAA0B,SAASjH,QACpDggB,eAAiB3xC,KAAKw3B,QAAQ1a,QAAQ5L,iBACtC0gC,eAAiB5xC,KAAKy3B,QAAQ3a,QAAQ5L,iBACtC2gC,WAAa7xC,KAAKw3B,QAAQ7a,eAC1Bm1B,WAAa9xC,KAAKy3B,QAAQ9a,eAC1Bo1B,QAAU/xC,KAAKw3B,QAAQ3a,YACvBm1B,QAAUhyC,KAAKy3B,QAAQ5a,WAExB4X,EAAKz0B,KAAKw3B,QAAQxa,WAAW/a,EAC7BmzB,EAAKp1B,KAAKw3B,QAAQza,WAAWvb,EAC7BkoB,EAAK1pB,KAAKw3B,QAAQza,WAAW5a,EAE7BuyB,EAAK10B,KAAKy3B,QAAQza,WAAW/a,EAC7BozB,EAAKr1B,KAAKy3B,QAAQ1a,WAAWvb,EAC7BooB,EAAK5pB,KAAKy3B,QAAQ1a,WAAW5a,EAE7B0wC,EAAKriC,EAAIlP,IAAImzB,GAAKqe,EAAKtiC,EAAIlP,IAAIozB,QAG9B+c,KAAOjhC,EAAIgD,QAAQq/B,EAAIhzC,EAAKgD,IAAI7C,KAAK8wC,eAAgB9wC,KAAK2xC,sBAC1DD,KAAOlhC,EAAIgD,QAAQs/B,EAAIjzC,EAAKgD,IAAI7C,KAAKgxC,eAAgBhxC,KAAK4xC,qBAW3Dtd,EAAKt0B,KAAK6xC,WAAYtd,EAAKv0B,KAAK8xC,WAChCllC,EAAK5M,KAAK+xC,QAASvd,EAAKx0B,KAAKgyC,QAE7Bjd,EAAI,IAAI7W,KACZ6W,EAAE5W,GAAGre,EAAIw0B,EAAKC,EAAK3nB,EAAK5M,KAAKyxC,KAAK1xC,EAAIC,KAAKyxC,KAAK1xC,EAAIy0B,EAAKx0B,KAAK0xC,KAAK3xC,EAC7DC,KAAK0xC,KAAK3xC,EAChBg1B,EAAE5W,GAAGpe,GAAK6M,EAAK5M,KAAKyxC,KAAK3xC,EAAIE,KAAKyxC,KAAK1xC,EAAIy0B,EAAKx0B,KAAK0xC,KAAK5xC,EAAIE,KAAK0xC,KAAK3xC,EACxEg1B,EAAE3W,GAAGte,EAAIi1B,EAAE5W,GAAGpe,EACdg1B,EAAE3W,GAAGre,EAAIu0B,EAAKC,EAAK3nB,EAAK5M,KAAKyxC,KAAK3xC,EAAIE,KAAKyxC,KAAK3xC,EAAI00B,EAAKx0B,KAAK0xC,KAAK5xC,EAC7DE,KAAK0xC,KAAK5xC,OAEXi0C,aAAehf,EAAE7Q,kBAEjB8vB,cAAgBpnC,EAAK4nB,EACtBx0B,KAAKg0C,cAAgB,SAClBA,cAAgB,EAAMh0C,KAAKg0C,eAG9BriB,EAAKO,aAAc,MAEhByhB,gBAAgB7wC,IAAI6uB,EAAKQ,cACzByhB,kBAAoBjiB,EAAKQ,YAE1B6C,EAAIn1B,EAAKyB,IAAItB,KAAK2zC,gBAAgB7zC,EAAGE,KAAK2zC,gBAAgB5zC,GAE9Dq1B,EAAGxyB,OAAO0xB,EAAIU,GACdtL,GAAM9c,GAAM/M,EAAK8D,MAAM3D,KAAKyxC,KAAMzc,GAAKh1B,KAAK4zC,kBAE5Cve,EAAG5yB,OAAO8xB,EAAIS,GACdpL,GAAM4K,GAAM30B,EAAK8D,MAAM3D,KAAK0xC,KAAM1c,GAAKh1B,KAAK4zC,4BAGvCD,gBAAgB7xC,eAChB8xC,iBAAmB,OAGrBpc,QAAQza,WAAWvb,EAAI4zB,OACvBoC,QAAQza,WAAW5a,EAAIunB,OACvB+N,QAAQ1a,WAAWvb,EAAI6zB,OACvBoC,QAAQ1a,WAAW5a,EAAIynB,GAG9B2pB,GAAcvyC,UAAU63B,yBAA2B,SAASlH,OACtDyD,EAAKp1B,KAAKw3B,QAAQza,WAAWvb,EAC7BkoB,EAAK1pB,KAAKw3B,QAAQza,WAAW5a,EAC7BkzB,EAAKr1B,KAAKy3B,QAAQ1a,WAAWvb,EAC7BooB,EAAK5pB,KAAKy3B,QAAQ1a,WAAW5a,EAE7BmyB,EAAKt0B,KAAK6xC,WAAYtd,EAAKv0B,KAAK8xC,WAChCllC,EAAK5M,KAAK+xC,QAASvd,EAAKx0B,KAAKgyC,QAE7BpiC,EAAI+hB,EAAK+K,GAIP4W,EAAO1pB,EAAKF,EACZxG,GAAWljB,KAAKg0C,cAAgBV,EAEhCe,EAAar0C,KAAK4zC,iBAClBU,EAAa1kC,EAAI5P,KAAK8zC,iBACrBF,iBAAmBl0C,EAAKoB,MAAMd,KAAK4zC,iBAAmB1wB,GACtDoxB,EAAYA,GAGjB5qB,GAAM9c,GAFNsW,EAAUljB,KAAK4zC,iBAAmBS,GAGlCzqB,GAAM4K,EAAKtR,EAKPowB,EAAOzzC,EAAKgD,IAAIhD,EAAKyC,IAAI+yB,EAAIx1B,EAAK8D,MAAMimB,EAAI5pB,KAAK0xC,OAAQ7xC,EAAKyC,IAAI8yB,EAClEv1B,EAAK8D,MAAM+lB,EAAI1pB,KAAKyxC,QAEpBvuB,EAAUrjB,EAAKiE,IAAIoa,EAAM1K,QAAQxT,KAAK+zC,aAAcT,IACpDe,EAAar0C,KAAK2zC,qBACjBA,gBAAgBrxC,IAAI4gB,GAErBoxB,EAAa1kC,EAAI5P,KAAK6zC,WAEtB7zC,KAAK2zC,gBAAgB1wC,gBAAkBqxC,EAAaA,SACjDX,gBAAgBzwC,iBAChBywC,gBAAgB7wC,IAAIwxC,IAG3BpxB,EAAUrjB,EAAKgD,IAAI7C,KAAK2zC,gBAAiBU,GAEzCjf,EAAGxyB,OAAO0xB,EAAIpR,GACdwG,GAAM9c,EAAK/M,EAAK8D,MAAM3D,KAAKyxC,KAAMvuB,GAEjCmS,EAAG5yB,OAAO8xB,EAAIrR,GACd0G,GAAM4K,EAAK30B,EAAK8D,MAAM3D,KAAK0xC,KAAMxuB,QAG9BsU,QAAQza,WAAWvb,EAAI4zB,OACvBoC,QAAQza,WAAW5a,EAAIunB,OACvB+N,QAAQ1a,WAAWvb,EAAI6zB,OACvBoC,QAAQ1a,WAAW5a,EAAIynB,GAG9B2pB,GAAcvyC,UAAU83B,yBAA2B,SAASnH,UACnD,GCjTT4iB,GAAcvO,KAAO,iBACrBzO,GAAMviB,MAAMu/B,GAAcvO,MAAQuO,GAElCA,GAAcxO,OAASxO,GACvBgd,GAAcvzC,UAAYjC,OAAOa,OAAO20C,GAAcxO,OAAO/kC,WA+B7D,IAAIyvC,GAAW,CACb+D,WAAa,EACbC,WAAa,EACbC,eAAiB,EACjBC,WAAa,EACbC,aAAc,EACdC,aAAc,GAehB,SAASN,GAAcz9B,EAAK8a,EAAOC,EAAO6hB,QAClC1zC,gBAAgBu0C,WACb,IAAIA,GAAcz9B,EAAK8a,EAAOC,EAAO6hB,GAG9C58B,EAAMC,EAAQD,EAAK25B,IACnBlZ,GAAMyM,KAAKhkC,KAAM8W,EAAK8a,EAAOC,GAC7BD,EAAQ5xB,KAAKw3B,QACb3F,EAAQ7xB,KAAKy3B,aAERhmB,OAAS8iC,GAAcvO,UAEvB8K,eAAkBjxC,EAAK0B,MAAMmyC,EAAS9hB,EAAM7N,cAAc2vB,GAAU58B,EAAIi6B,cAAgBlxC,EAAKwB,aAC7F2vC,eAAkBnxC,EAAK0B,MAAMmyC,EAAS7hB,EAAM9N,cAAc2vB,GAAU58B,EAAIm6B,cAAgBpxC,EAAKwB,aAC7FyzC,iBAAmBp1C,EAAKS,SAAS2W,EAAIi+B,gBAAkBj+B,EAAIi+B,eAAiBljB,EAAM3e,WAAa0e,EAAM1e,gBAErGm+B,UAAY7pB,SACZwtB,eAAiB,OAEjBC,aAAen+B,EAAI09B,gBACnBU,aAAep+B,EAAI29B,gBACnBU,iBAAmBr+B,EAAI49B,oBACvBU,aAAet+B,EAAI69B,gBACnBU,cAAgBv+B,EAAI89B,iBACpBU,cAAgBx+B,EAAI+9B,iBAGpBpD,UACAC,UACAC,oBACAC,oBACAC,gBACAC,gBACAC,aACAC,aAEAt1B,OAAS,IAAIgL,OAEb6tB,iBACAC,aApGa,EAoHpBjB,GAAcvzC,UAAUC,WAAa,iBAC5B,CACLmU,KAAMpV,KAAKyR,OACXmgB,MAAO5xB,KAAKw3B,QACZ3F,MAAO7xB,KAAKy3B,QACZE,iBAAkB33B,KAAKujB,mBAEvBixB,WAAYx0C,KAAKi1C,aACjBR,WAAYz0C,KAAKk1C,aACjBR,eAAgB10C,KAAKm1C,iBACrBR,WAAY30C,KAAKo1C,aACjBR,YAAa50C,KAAKq1C,cAClBR,YAAa70C,KAAKs1C,cAElBvE,aAAc/wC,KAAK8wC,eACnBG,aAAcjxC,KAAKgxC,eACnB+D,eAAgB/0C,KAAK80C,mBAIzBP,GAAcrzC,aAAe,SAASC,EAAMyZ,EAAO1F,UACjD/T,EAAOpC,OAAOC,OAAO,GAAImC,IACpBywB,MAAQ1c,EAAQgG,EAAM/Z,EAAKywB,MAAOhX,GACvCzZ,EAAK0wB,MAAQ3c,EAAQgG,EAAM/Z,EAAK0wB,MAAOjX,GAC3B,IAAI25B,GAAcpzC,IAOhCozC,GAAcvzC,UAAUmxC,YAAc,SAASr7B,GACzCA,EAAI85B,aACDE,eAAe/uC,IAAI/B,KAAKw3B,QAAQzT,cAAcjN,EAAI85B,UAC9C95B,EAAIi6B,mBACRD,eAAe/uC,IAAI+U,EAAIi6B,cAG1Bj6B,EAAI+5B,aACDG,eAAejvC,IAAI/B,KAAKy3B,QAAQ1T,cAAcjN,EAAI+5B,UAC9C/5B,EAAIm6B,mBACRD,eAAejvC,IAAI+U,EAAIm6B,eAOhCsD,GAAcvzC,UAAUoxC,gBAAkB,kBACjCpyC,KAAK8wC,gBAMdyD,GAAcvzC,UAAUqxC,gBAAkB,kBACjCryC,KAAKgxC,gBAMduD,GAAcvzC,UAAUy0C,kBAAoB,kBACnCz1C,KAAK80C,kBAMdP,GAAcvzC,UAAU00C,cAAgB,eAClCtW,EAAKp/B,KAAKw3B,eACLx3B,KAAKy3B,QACJ3a,QAAQ7a,EAAIm9B,EAAGtiB,QAAQ7a,EAAIjC,KAAK80C,kBAM5CP,GAAcvzC,UAAU20C,cAAgB,eAClCvW,EAAKp/B,KAAKw3B,eACLx3B,KAAKy3B,QACJra,kBAAoBgiB,EAAGhiB,mBAMnCm3B,GAAcvzC,UAAU40C,eAAiB,kBAChC51C,KAAKs1C,eAMdf,GAAcvzC,UAAU6zC,YAAc,SAASn0B,QACxC8W,QAAQhf,UAAS,QACjBif,QAAQjf,UAAS,QACjB88B,cAAgB50B,GAMvB6zB,GAAcvzC,UAAU60C,eAAiB,SAASnd,UACzCA,EAAS14B,KAAKg1C,gBAMvBT,GAAcvzC,UAAU80C,cAAgB,SAASjjB,QAC1C2E,QAAQhf,UAAS,QACjBif,QAAQjf,UAAS,QACjB48B,aAAeviB,GAMtB0hB,GAAcvzC,UAAU+0C,cAAgB,kBAC/B/1C,KAAKo1C,cAMdb,GAAcvzC,UAAUg1C,kBAAoB,SAAShzB,QAC9CwU,QAAQhf,UAAS,QACjBif,QAAQjf,UAAS,QACjB28B,iBAAmBnyB,GAG1BuxB,GAAcvzC,UAAUi1C,kBAAoB,kBACnCj2C,KAAKm1C,kBAMdZ,GAAcvzC,UAAUk1C,eAAiB,kBAChCl2C,KAAKq1C,eAMdd,GAAcvzC,UAAU4zC,YAAc,SAASl0B,GACzCA,GAAQ1gB,KAAKq1C,qBACV7d,QAAQhf,UAAS,QACjBif,QAAQjf,UAAS,QACjB68B,cAAgB30B,OAChB2wB,UAAU5pB,EAAI,IAOvB8sB,GAAcvzC,UAAUm1C,cAAgB,kBAC/Bn2C,KAAKi1C,cAMdV,GAAcvzC,UAAUo1C,cAAgB,kBAC/Bp2C,KAAKk1C,cAMdX,GAAcvzC,UAAUq1C,UAAY,SAASnyC,EAAOD,GAG9CC,GAASlE,KAAKi1C,cAAgBhxC,GAASjE,KAAKk1C,oBACzC1d,QAAQhf,UAAS,QACjBif,QAAQjf,UAAS,QACjB64B,UAAU5pB,EAAI,OACdwtB,aAAe/wC,OACfgxC,aAAejxC,IAIxBswC,GAAcvzC,UAAUu3B,WAAa,kBAC5Bv4B,KAAKw3B,QAAQ7V,cAAc3hB,KAAK8wC,iBAGzCyD,GAAcvzC,UAAUw3B,WAAa,kBAC5Bx4B,KAAKy3B,QAAQ9V,cAAc3hB,KAAKgxC,iBAMzCuD,GAAcvzC,UAAUy3B,iBAAmB,SAASC,UAC3C74B,EAAKyB,IAAItB,KAAKqxC,UAAUvxC,EAAGE,KAAKqxC,UAAUtxC,GAAG+C,IAAI41B,IAO1D6b,GAAcvzC,UAAU23B,kBAAoB,SAASD,UAC5CA,EAAS14B,KAAKqxC,UAAU5pB,GAGjC8sB,GAAcvzC,UAAU43B,wBAA0B,SAASjH,QACpDggB,eAAiB3xC,KAAKw3B,QAAQ1a,QAAQ5L,iBACtC0gC,eAAiB5xC,KAAKy3B,QAAQ3a,QAAQ5L,iBACtC2gC,WAAa7xC,KAAKw3B,QAAQ7a,eAC1Bm1B,WAAa9xC,KAAKy3B,QAAQ9a,eAC1Bo1B,QAAU/xC,KAAKw3B,QAAQ3a,YACvBm1B,QAAUhyC,KAAKy3B,QAAQ5a,WAExB4X,EAAKz0B,KAAKw3B,QAAQxa,WAAW/a,EAC7BmzB,EAAKp1B,KAAKw3B,QAAQza,WAAWvb,EAC7BkoB,EAAK1pB,KAAKw3B,QAAQza,WAAW5a,EAE7BuyB,EAAK10B,KAAKy3B,QAAQza,WAAW/a,EAC7BozB,EAAKr1B,KAAKy3B,QAAQ1a,WAAWvb,EAC7BooB,EAAK5pB,KAAKy3B,QAAQ1a,WAAW5a,EAE7B0wC,EAAKriC,EAAIlP,IAAImzB,GACbqe,EAAKtiC,EAAIlP,IAAIozB,QAEZ+c,KAAOjhC,EAAIgD,QAAQq/B,EAAIhzC,EAAKgD,IAAI7C,KAAK8wC,eAAgB9wC,KAAK2xC,sBAC1DD,KAAOlhC,EAAIgD,QAAQs/B,EAAIjzC,EAAKgD,IAAI7C,KAAKgxC,eAAgBhxC,KAAK4xC,qBAW3Dtd,EAAKt0B,KAAK6xC,WACVtd,EAAKv0B,KAAK8xC,WACVllC,EAAK5M,KAAK+xC,QACVvd,EAAKx0B,KAAKgyC,QAEVn2B,EAAiBjP,EAAK4nB,IAAO,UAE5B9X,OAAOyB,GAAGre,EAAIw0B,EAAKC,EAAKv0B,KAAKyxC,KAAK1xC,EAAIC,KAAKyxC,KAAK1xC,EAAI6M,EAAK5M,KAAK0xC,KAAK3xC,EAClEC,KAAK0xC,KAAK3xC,EAAIy0B,OACf9X,OAAO0B,GAAGte,GAAKE,KAAKyxC,KAAK1xC,EAAIC,KAAKyxC,KAAK3xC,EAAI8M,EAAK5M,KAAK0xC,KAAK3xC,EACzDC,KAAK0xC,KAAK5xC,EAAI00B,OACf9X,OAAOiL,GAAG7nB,GAAKE,KAAKyxC,KAAK1xC,EAAI6M,EAAK5M,KAAK0xC,KAAK3xC,EAAIy0B,OAChD9X,OAAOyB,GAAGpe,EAAIC,KAAK0c,OAAO0B,GAAGte,OAC7B4c,OAAO0B,GAAGre,EAAIu0B,EAAKC,EAAKv0B,KAAKyxC,KAAK3xC,EAAIE,KAAKyxC,KAAK3xC,EAAI8M,EAAK5M,KAAK0xC,KAAK5xC,EAClEE,KAAK0xC,KAAK5xC,EAAI00B,OACf9X,OAAOiL,GAAG5nB,EAAIC,KAAKyxC,KAAK3xC,EAAI8M,EAAK5M,KAAK0xC,KAAK5xC,EAAI00B,OAC/C9X,OAAOyB,GAAGsJ,EAAIznB,KAAK0c,OAAOiL,GAAG7nB,OAC7B4c,OAAO0B,GAAGqJ,EAAIznB,KAAK0c,OAAOiL,GAAG5nB,OAC7B2c,OAAOiL,GAAGF,EAAI7a,EAAK4nB,OAEnB+gB,YAAc3oC,EAAK4nB,EACpBx0B,KAAKu1C,YAAc,SAChBA,YAAc,EAAMv1C,KAAKu1C,cAGN,GAAtBv1C,KAAKs1C,eAA0Bz5B,UAC5Bm5B,eAAiB,GAGpBh1C,KAAKq1C,eAAkC,GAAjBx5B,EAAwB,KAC5Cy6B,EAAa5hB,EAAKD,EAAKz0B,KAAK80C,iBAE5Bp1C,EAAKqE,IAAI/D,KAAKk1C,aAAel1C,KAAKi1C,cAAgB,EAAM3wC,EAAS4C,iBAC9DsuC,aAhYO,EAkYHc,GAAct2C,KAAKi1C,cApYf,GAqYTj1C,KAAKw1C,oBACFnE,UAAU5pB,EAAI,QAEhB+tB,aAxYQ,GA0YJc,GAAct2C,KAAKk1C,cAzYf,GA0YTl1C,KAAKw1C,oBACFnE,UAAU5pB,EAAI,QAEhB+tB,aA7YQ,SAgZRA,aAlZS,OAmZTnE,UAAU5pB,EAAI,aAIhB+tB,aAvZW,KA0Zd7jB,EAAKO,aAAc,MAEhBmf,UAAUvuC,IAAI6uB,EAAKQ,cACnB6iB,gBAAkBrjB,EAAKQ,YAExB6C,EAAIn1B,EAAKyB,IAAItB,KAAKqxC,UAAUvxC,EAAGE,KAAKqxC,UAAUtxC,GAElDq1B,EAAGxyB,OAAO0xB,EAAIU,GACdtL,GAAM9c,GAAM/M,EAAK8D,MAAM3D,KAAKyxC,KAAMzc,GAAKh1B,KAAKg1C,eAAiBh1C,KAAKqxC,UAAU5pB,GAE5E4N,EAAG5yB,OAAO8xB,EAAIS,GACdpL,GAAM4K,GAAM30B,EAAK8D,MAAM3D,KAAK0xC,KAAM1c,GAAKh1B,KAAKg1C,eAAiBh1C,KAAKqxC,UAAU5pB,aAGvE4pB,UAAUvvC,eACVkzC,eAAiB,OAGnBxd,QAAQza,WAAWvb,EAAI4zB,OACvBoC,QAAQza,WAAW5a,EAAIunB,OACvB+N,QAAQ1a,WAAWvb,EAAI6zB,OACvBoC,QAAQ1a,WAAW5a,EAAIynB,GAG9B2qB,GAAcvzC,UAAU63B,yBAA2B,SAASlH,OACtDyD,EAAKp1B,KAAKw3B,QAAQza,WAAWvb,EAC7BkoB,EAAK1pB,KAAKw3B,QAAQza,WAAW5a,EAC7BkzB,EAAKr1B,KAAKy3B,QAAQ1a,WAAWvb,EAC7BooB,EAAK5pB,KAAKy3B,QAAQ1a,WAAW5a,EAE7BmyB,EAAKt0B,KAAK6xC,WACVtd,EAAKv0B,KAAK8xC,WACVllC,EAAK5M,KAAK+xC,QACVvd,EAAKx0B,KAAKgyC,QAEVn2B,EAAiBjP,EAAK4nB,IAAO,KAG7Bx0B,KAAKs1C,eA7bO,GA6bUt1C,KAAKw1C,cACP,GAAjB35B,EAAwB,KACzBy3B,EAAO1pB,EAAKF,EAAK1pB,KAAKo1C,aACtBlyB,GAAWljB,KAAKu1C,YAAcjC,EAC9Be,EAAar0C,KAAKg1C,eAClBV,EAAa3iB,EAAK+K,GAAK18B,KAAKm1C,sBAC3BH,eAAiBt1C,EAAKoB,MAAMd,KAAKg1C,eAAiB9xB,GAClDoxB,EAAYA,GAGjB5qB,GAAM9c,GAFNsW,EAAUljB,KAAKg1C,eAAiBX,GAGhCzqB,GAAM4K,EAAKtR,KAITljB,KAAKq1C,eA/cS,GA+cQr1C,KAAKw1C,cACP,GAAjB35B,EAAwB,KACzB06B,EAAQ12C,EAAKwB,OACjBk1C,EAAM/zC,WAAW,EAAG6yB,EAAI,EAAGx1B,EAAK8D,MAAMimB,EAAI5pB,KAAK0xC,OAC/C6E,EAAM5zC,WAAW,EAAGyyB,EAAI,EAAGv1B,EAAK8D,MAAM+lB,EAAI1pB,KAAKyxC,WAC3C+E,EAAQ5sB,EAAKF,EACb4pB,EAAO9rB,EAAK+uB,EAAMz2C,EAAGy2C,EAAMx2C,EAAGy2C,GAE9BtzB,EAAUsE,EAAK1jB,IAAI9D,KAAK0c,OAAOwR,QAAQolB,OApd7B,GAsdVtzC,KAAKw1C,kBACFnE,UAAU/uC,IAAI4gB,QAEd,GA3dQ,GA2dJljB,KAAKw1C,aAA8B,IAC3Bx1C,KAAKqxC,UAAU5pB,EAAIvE,EAAQuE,EAE3B,EAAK,KAChBgvB,EAAM52C,EAAKgE,SAAS,EAAG0yC,EAAOv2C,KAAKqxC,UAAU5pB,EAAG5nB,EAAKyB,IAAItB,KAAK0c,OAAOiL,GAAG7nB,EAAGE,KAAK0c,OAAOiL,GAAG5nB,IAC1F22C,EAAU12C,KAAK0c,OAAOyR,QAAQsoB,GAClCvzB,EAAQpjB,EAAI42C,EAAQ52C,EACpBojB,EAAQnjB,EAAI22C,EAAQ32C,EACpBmjB,EAAQuE,GAAKznB,KAAKqxC,UAAU5pB,OACvB4pB,UAAUvxC,GAAK42C,EAAQ52C,OACvBuxC,UAAUtxC,GAAK22C,EAAQ32C,OACvBsxC,UAAU5pB,EAAI,YAGd4pB,UAAU/uC,IAAI4gB,QAGhB,GA3eQ,GA2eJljB,KAAKw1C,aAA8B,IAC3Bx1C,KAAKqxC,UAAU5pB,EAAIvE,EAAQuE,EAE3B,EAAK,CAChBgvB,EAAM52C,EAAKgE,SAAS,EAAG0yC,EAAOv2C,KAAKqxC,UAAU5pB,EAAG5nB,EAAKyB,IAAItB,KAAK0c,OAAOiL,GAAG7nB,EAAGE,KAAK0c,OAAOiL,GAAG5nB,IAC1F22C,EAAU12C,KAAK0c,OAAOyR,QAAQsoB,GAClCvzB,EAAQpjB,EAAI42C,EAAQ52C,EACpBojB,EAAQnjB,EAAI22C,EAAQ32C,EACpBmjB,EAAQuE,GAAKznB,KAAKqxC,UAAU5pB,OACvB4pB,UAAUvxC,GAAK42C,EAAQ52C,OACvBuxC,UAAUtxC,GAAK22C,EAAQ32C,OACvBsxC,UAAU5pB,EAAI,YAGd4pB,UAAU/uC,IAAI4gB,OAInB8R,EAAIn1B,EAAKyB,IAAI4hB,EAAQpjB,EAAGojB,EAAQnjB,GAEpCq1B,EAAGxyB,OAAO0xB,EAAIU,GACdtL,GAAM9c,GAAM/M,EAAK8D,MAAM3D,KAAKyxC,KAAMzc,GAAK9R,EAAQuE,GAE/C4N,EAAG5yB,OAAO8xB,EAAIS,GACdpL,GAAM4K,GAAM30B,EAAK8D,MAAM3D,KAAK0xC,KAAM1c,GAAK9R,EAAQuE,OAE1C,EAED6rB,EAAOzzC,EAAKwB,QACXmB,WAAW,EAAG6yB,EAAI,EAAGx1B,EAAK8D,MAAMimB,EAAI5pB,KAAK0xC,OAC9C4B,EAAK3wC,WAAW,EAAGyyB,EAAI,EAAGv1B,EAAK8D,MAAM+lB,EAAI1pB,KAAKyxC,OAC1CvuB,EAAUljB,KAAK0c,OAAOyR,QAAQtuB,EAAKiE,IAAIwvC,SAEtCjC,UAAUvxC,GAAKojB,EAAQpjB,OACvBuxC,UAAUtxC,GAAKmjB,EAAQnjB,EAE5Bq1B,EAAGxyB,OAAO0xB,EAAIpR,GACdwG,GAAM9c,EAAK/M,EAAK8D,MAAM3D,KAAKyxC,KAAMvuB,GAEjCmS,EAAG5yB,OAAO8xB,EAAIrR,GACd0G,GAAM4K,EAAK30B,EAAK8D,MAAM3D,KAAK0xC,KAAMxuB,QAG9BsU,QAAQza,WAAWvb,EAAI4zB,OACvBoC,QAAQza,WAAW5a,EAAIunB,OACvB+N,QAAQ1a,WAAWvb,EAAI6zB,OACvBoC,QAAQ1a,WAAW5a,EAAIynB,GAG9B2qB,GAAcvzC,UAAU83B,yBAA2B,SAASnH,OAUtDglB,EATA3vB,EAAKhnB,KAAKw3B,QAAQxa,WAAWrN,EAC7B8kB,EAAKz0B,KAAKw3B,QAAQxa,WAAW/a,EAC7BglB,EAAKjnB,KAAKy3B,QAAQza,WAAWrN,EAC7B+kB,EAAK10B,KAAKy3B,QAAQza,WAAW/a,EAE7B4wC,EAAKriC,EAAIlP,IAAImzB,GACbqe,EAAKtiC,EAAIlP,IAAIozB,GAEbkiB,EAAe,EAGf/6B,EAAiB7b,KAAK+xC,QAAU/xC,KAAKgyC,SAAW,KAGhDhyC,KAAKq1C,eA7iBS,GA6iBQr1C,KAAKw1C,cACP,GAAjB35B,EAAwB,KACzBpL,EAAQikB,EAAKD,EAAKz0B,KAAK80C,iBACvB+B,EAAe,KA7iBL,GA+iBV72C,KAAKw1C,aAA6B,KAEhCzoC,EAAIrN,EAAKoB,MAAM2P,EAAQzQ,KAAKi1C,cAC3B3wC,EAASqD,qBAAsBrD,EAASqD,sBAC7CkvC,GAAgB72C,KAAKu1C,YAAcxoC,EACnC6pC,EAAel3C,EAAKqE,IAAIgJ,QAEnB,GAxjBQ,GAwjBJ/M,KAAKw1C,aAA8B,CAE5CoB,IADI7pC,EAAI0D,EAAQzQ,KAAKi1C,cAIrBloC,EAAIrN,EAAKoB,MAAMiM,EAAIzI,EAAS4C,aAAc5C,EAASqD,qBAC/C,GACJkvC,GAAgB72C,KAAKu1C,YAAcxoC,OAE9B,GAhkBQ,GAgkBJ/M,KAAKw1C,aAA8B,CAE5CoB,EADI7pC,EAAI0D,EAAQzQ,KAAKk1C,aAIrBnoC,EAAIrN,EAAKoB,MAAMiM,EAAIzI,EAAS4C,YAAa,EACrC5C,EAASqD,sBACbkvC,GAAgB72C,KAAKu1C,YAAcxoC,EAGrC0nB,GAAMz0B,KAAK+xC,QAAU8E,EACrBniB,GAAM10B,KAAKgyC,QAAU6E,EAKrBhE,EAAG9wC,IAAI0yB,GACPqe,EAAG/wC,IAAI2yB,OACHxK,EAAK1Z,EAAIgD,QAAQq/B,EAAIhzC,EAAKgD,IAAI7C,KAAK8wC,eAAgB9wC,KAAK2xC,iBACxDxnB,EAAK3Z,EAAIgD,QAAQs/B,EAAIjzC,EAAKgD,IAAI7C,KAAKgxC,eAAgBhxC,KAAK4xC,kBAExD7kC,EAAIlN,EAAKwB,QACXmB,WAAW,EAAGykB,EAAI,EAAGkD,GACvBpd,EAAEpK,WAAW,EAAGqkB,EAAI,EAAGkD,GACvBysB,EAAgB5pC,EAAEzN,aAEdg1B,EAAKt0B,KAAK6xC,WACVtd,EAAKv0B,KAAK8xC,WACVllC,EAAK5M,KAAK+xC,QACVvd,EAAKx0B,KAAKgyC,QAEVjd,EAAI,IAAI7W,EACZ6W,EAAE5W,GAAGre,EAAIw0B,EAAKC,EAAK3nB,EAAKsd,EAAGnqB,EAAImqB,EAAGnqB,EAAIy0B,EAAKrK,EAAGpqB,EAAIoqB,EAAGpqB,EACrDg1B,EAAE5W,GAAGpe,GAAK6M,EAAKsd,EAAGpqB,EAAIoqB,EAAGnqB,EAAIy0B,EAAKrK,EAAGrqB,EAAIqqB,EAAGpqB,EAC5Cg1B,EAAE3W,GAAGte,EAAIi1B,EAAE5W,GAAGpe,EACdg1B,EAAE3W,GAAGre,EAAIu0B,EAAKC,EAAK3nB,EAAKsd,EAAGpqB,EAAIoqB,EAAGpqB,EAAI00B,EAAKrK,EAAGrqB,EAAIqqB,EAAGrqB,MAEjDojB,EAAUrjB,EAAKiE,IAAIixB,EAAE1Q,MAAMtX,WAE/Bia,EAAGpkB,OAAO0xB,EAAIpR,GACduR,GAAM7nB,EAAK/M,EAAK8D,MAAMumB,EAAIhH,GAE1B+D,EAAGxkB,OAAO8xB,EAAIrR,GACdwR,GAAMF,EAAK30B,EAAK8D,MAAMwmB,EAAIjH,QAGvBsU,QAAQxa,WAAWrN,EAAE5N,IAAIilB,QACzBwQ,QAAQxa,WAAW/a,EAAIwyB,OACvBgD,QAAQza,WAAWrN,EAAE5N,IAAIklB,QACzBwQ,QAAQza,WAAW/a,EAAIyyB,EAErBiiB,GAAiBryC,EAAS0C,YAC1B4vC,GAAgBtyC,EAAS4C,aCjnBlC4vC,GAAe9Q,KAAO,kBACtBzO,GAAMviB,MAAM8hC,GAAe9Q,MAAQ8Q,GAEnCA,GAAe/Q,OAASxO,GACxBuf,GAAe91C,UAAYjC,OAAOa,OAAOk3C,GAAe/Q,OAAO/kC,WA4B/D,IAAIyvC,GAAW,CACbmE,aAAc,EACdmC,iBAAmB,EACnBC,iBAAmB,EACnBnC,aAAc,EACdoC,cAAgB,EAChBtC,WAAa,GAaf,SAASmC,GAAehgC,EAAK8a,EAAOC,EAAO6hB,EAAQwD,QAC3Cl3C,gBAAgB82C,WACb,IAAIA,GAAehgC,EAAK8a,EAAOC,EAAO6hB,EAAQwD,GAGvDpgC,EAAMC,EAAQD,EAAK25B,IACnBlZ,GAAMyM,KAAKhkC,KAAM8W,EAAK8a,EAAOC,GAC7BD,EAAQ5xB,KAAKw3B,QACb3F,EAAQ7xB,KAAKy3B,aAERhmB,OAASqlC,GAAe9Q,UAExB8K,eAAiBjxC,EAAK0B,MAAMmyC,EAAS9hB,EAAM7N,cAAc2vB,GAAU58B,EAAIi6B,cAAgBlxC,EAAKwB,aAC5F2vC,eAAiBnxC,EAAK0B,MAAMmyC,EAAS7hB,EAAM9N,cAAc2vB,GAAU58B,EAAIm6B,cAAgBpxC,EAAKwB,aAC5F81C,cAAgBt3C,EAAK0B,MAAM21C,EAAOtlB,EAAM5N,eAAekzB,GAAQpgC,EAAIsgC,YAAcv3C,EAAKyB,IAAI,EAAK,SAC/F61C,cAAcj0C,iBACdm0C,cAAgBx3C,EAAK8D,MAAM,EAAK3D,KAAKm3C,oBACrCrC,iBAAmBp1C,EAAKS,SAAS2W,EAAIi+B,gBAAkBj+B,EAAIi+B,eAAiBljB,EAAM3e,WAAa0e,EAAM1e,gBAErGm+B,UAAY7pB,SACZ+tB,YAAc,OACdP,eAAiB,OAEjBsC,mBAAqBxgC,EAAIigC,sBACzBQ,mBAAqBzgC,EAAIkgC,sBACzBQ,gBAAkB1gC,EAAImgC,mBACtB7B,aAAet+B,EAAI69B,gBACnBU,cAAgBv+B,EAAI89B,iBACpBU,cAAgBx+B,EAAI+9B,iBACpBW,aArFa,OAuFb5Z,OAAS/7B,EAAKwB,YACdo2C,OAAS53C,EAAKwB,YAGdswC,oBACAC,oBACAC,gBACAC,gBACAC,aACAC,aACApW,OAAQ57B,KAAKy3C,YACbC,KAAM13C,KAAK23C,UACXC,KAAM53C,KAAK63C,UACXC,IAAM,IAAIpwB,OACV6tB,YA4EPuB,GAAe91C,UAAUC,WAAa,iBAC7B,CACLmU,KAAMpV,KAAKyR,OACXmgB,MAAO5xB,KAAKw3B,QACZ3F,MAAO7xB,KAAKy3B,QACZE,iBAAkB33B,KAAKujB,mBAEvBwzB,iBAAkB/2C,KAAKs3C,mBACvBN,iBAAkBh3C,KAAKu3C,mBACvBN,cAAej3C,KAAKw3C,gBACpB7C,WAAY30C,KAAKo1C,aACjBR,YAAa50C,KAAKq1C,cAClBR,YAAa70C,KAAKs1C,cAElBvE,aAAc/wC,KAAK8wC,eACnBG,aAAcjxC,KAAKgxC,eACnBoG,WAAYp3C,KAAKm3C,cACjBpC,eAAgB/0C,KAAK80C,mBAIzBgC,GAAe51C,aAAe,SAASC,EAAMyZ,EAAO1F,UAClD/T,EAAOpC,OAAOC,OAAO,GAAImC,IACpBywB,MAAQ1c,EAAQgG,EAAM/Z,EAAKywB,MAAOhX,GACvCzZ,EAAK0wB,MAAQ3c,EAAQgG,EAAM/Z,EAAK0wB,MAAOjX,GACvCzZ,EAAKi2C,WAAav3C,EAAKsB,EAAKi2C,YAChB,IAAIN,GAAe31C,IAOjC21C,GAAe91C,UAAUmxC,YAAc,SAASr7B,GAC1CA,EAAI85B,aACDE,eAAe/uC,IAAI/B,KAAKw3B,QAAQzT,cAAcjN,EAAI85B,UAC9C95B,EAAIi6B,mBACRD,eAAe/uC,IAAI+U,EAAIi6B,cAG1Bj6B,EAAI+5B,aACDG,eAAejvC,IAAI/B,KAAKy3B,QAAQ1T,cAAcjN,EAAI+5B,UAC9C/5B,EAAIm6B,mBACRD,eAAejvC,IAAI+U,EAAIm6B,cAG1Bn6B,EAAIsgC,kBACDD,cAAcp1C,IAAI+U,EAAIsgC,iBACtBC,cAAct1C,IAAIlC,EAAK8D,MAAM,EAAKmT,EAAIsgC,eAO/CN,GAAe91C,UAAUoxC,gBAAkB,kBAClCpyC,KAAK8wC,gBAMdgG,GAAe91C,UAAUqxC,gBAAkB,kBAClCryC,KAAKgxC,gBAMd8F,GAAe91C,UAAU+2C,cAAgB,kBAChC/3C,KAAKm3C,eAMdL,GAAe91C,UAAUy0C,kBAAoB,kBACpCz1C,KAAK80C,kBAMdgC,GAAe91C,UAAUg3C,oBAAsB,eACzCloB,EAAK9vB,KAAKw3B,QAAQ7V,cAAc3hB,KAAK8wC,gBACrC/gB,EAAK/vB,KAAKy3B,QAAQ9V,cAAc3hB,KAAKgxC,gBACrCxoC,EAAI3I,EAAKgD,IAAIktB,EAAID,GACjBonB,EAAOl3C,KAAKw3B,QAAQ3T,eAAe7jB,KAAKm3C,sBAE1Bt3C,EAAK6D,IAAI8E,EAAG0uC,IAOhCJ,GAAe91C,UAAU20C,cAAgB,eACnCvW,EAAKp/B,KAAKw3B,QACV6H,EAAKr/B,KAAKy3B,QAEVvN,EAAK1Z,EAAIgD,QAAQ4rB,EAAGjnB,KAAKpH,EAAGlR,EAAKgD,IAAI7C,KAAK8wC,eAAgB1R,EAAGtiB,QAAQ5L,cACrEiZ,EAAK3Z,EAAIgD,QAAQ6rB,EAAGlnB,KAAKpH,EAAGlR,EAAKgD,IAAI7C,KAAKgxC,eAAgB3R,EAAGviB,QAAQ5L,cACrE7G,EAAKxK,EAAKyC,IAAI88B,EAAGtiB,QAAQnN,EAAGua,GAC5B5f,EAAKzK,EAAKyC,IAAI+8B,EAAGviB,QAAQnN,EAAGwa,GAC5B3hB,EAAI3I,EAAKgD,IAAIyH,EAAID,GACjB6sC,EAAO1mC,EAAIgD,QAAQ4rB,EAAGjnB,KAAKpH,EAAG/Q,KAAKm3C,eAEnC/hB,EAAKgK,EAAGjiB,iBACRkY,EAAKgK,EAAGliB,iBACRuM,EAAK0V,EAAGhiB,kBACRwM,EAAKyV,EAAGjiB,yBAEAvd,EAAK6D,IAAI8E,EAAG3I,EAAK8D,MAAM+lB,EAAIwtB,IACjCr3C,EAAK6D,IAAIwzC,EAAMr3C,EAAKgD,IAAIhD,EAAK+D,SAASyxB,EAAIzL,EAAIO,GAAKtqB,EAAK+D,SAASwxB,EAAI1L,EAAIQ,MAOjF4sB,GAAe91C,UAAUk1C,eAAiB,kBACjCl2C,KAAKq1C,eAMdyB,GAAe91C,UAAU4zC,YAAc,SAASl0B,GAC1CA,GAAQ1gB,KAAKq1C,qBACV7d,QAAQhf,UAAS,QACjBif,QAAQjf,UAAS,QACjB68B,cAAgB30B,OAChB2wB,UAAU5pB,EAAI,IAOvBqvB,GAAe91C,UAAUm1C,cAAgB,kBAChCn2C,KAAKs3C,oBAMdR,GAAe91C,UAAUo1C,cAAgB,kBAChCp2C,KAAKu3C,oBAMdT,GAAe91C,UAAUq1C,UAAY,SAASnyC,EAAOD,GAE/CC,GAASlE,KAAKs3C,oBAAsBrzC,GAASjE,KAAKu3C,0BAC/C/f,QAAQhf,UAAS,QACjBif,QAAQjf,UAAS,QACjB8+B,mBAAqBpzC,OACrBqzC,mBAAqBtzC,OACrBotC,UAAU5pB,EAAI,IAOvBqvB,GAAe91C,UAAU40C,eAAiB,kBACjC51C,KAAKs1C,eAMdwB,GAAe91C,UAAU6zC,YAAc,SAASn0B,QACzC8W,QAAQhf,UAAS,QACjBif,QAAQjf,UAAS,QACjB88B,cAAgB50B,GAMvBo2B,GAAe91C,UAAU80C,cAAgB,SAASjjB,QAC3C2E,QAAQhf,UAAS,QACjBif,QAAQjf,UAAS,QACjB48B,aAAeviB,GAMtBikB,GAAe91C,UAAUi3C,iBAAmB,SAASt1B,QAC9C6U,QAAQhf,UAAS,QACjBif,QAAQjf,UAAS,QACjBg/B,gBAAkB70B,GAGzBm0B,GAAe91C,UAAUk3C,iBAAmB,kBACnCl4C,KAAKw3C,iBAMdV,GAAe91C,UAAU+0C,cAAgB,kBAChC/1C,KAAKo1C,cAMd0B,GAAe91C,UAAUm3C,cAAgB,SAASzf,UACzCA,EAAS14B,KAAKg1C,gBAGvB8B,GAAe91C,UAAUu3B,WAAa,kBAC7Bv4B,KAAKw3B,QAAQ7V,cAAc3hB,KAAK8wC,iBAGzCgG,GAAe91C,UAAUw3B,WAAa,kBAC7Bx4B,KAAKy3B,QAAQ9V,cAAc3hB,KAAKgxC,iBAGzC8F,GAAe91C,UAAUy3B,iBAAmB,SAASC,UAC5C74B,EAAKgE,QAAQ7D,KAAKqxC,UAAUvxC,EAAGE,KAAKy3C,OAAQz3C,KAAKg1C,eAAiBh1C,KAAKqxC,UAAU5pB,EAAGznB,KAAK47B,QAAQ94B,IAAI41B,IAG9Goe,GAAe91C,UAAU23B,kBAAoB,SAASD,UAC7CA,EAAS14B,KAAKqxC,UAAUtxC,GAGjC+2C,GAAe91C,UAAU43B,wBAA0B,SAASjH,QACrDggB,eAAiB3xC,KAAKw3B,QAAQ1a,QAAQ5L,iBACtC0gC,eAAiB5xC,KAAKy3B,QAAQ3a,QAAQ5L,iBACtC2gC,WAAa7xC,KAAKw3B,QAAQ7a,eAC1Bm1B,WAAa9xC,KAAKy3B,QAAQ9a,eAC1Bo1B,QAAU/xC,KAAKw3B,QAAQ3a,YACvBm1B,QAAUhyC,KAAKy3B,QAAQ5a,WAExBmK,EAAKhnB,KAAKw3B,QAAQxa,WAAWrN,EAC7B8kB,EAAKz0B,KAAKw3B,QAAQxa,WAAW/a,EAC7BmzB,EAAKp1B,KAAKw3B,QAAQza,WAAWvb,EAC7BkoB,EAAK1pB,KAAKw3B,QAAQza,WAAW5a,EAE7B8kB,EAAKjnB,KAAKy3B,QAAQza,WAAWrN,EAC7B+kB,EAAK10B,KAAKy3B,QAAQza,WAAW/a,EAC7BozB,EAAKr1B,KAAKy3B,QAAQ1a,WAAWvb,EAC7BooB,EAAK5pB,KAAKy3B,QAAQ1a,WAAW5a,EAE7B0wC,EAAKriC,EAAIlP,IAAImzB,GACbqe,EAAKtiC,EAAIlP,IAAIozB,GAGbxK,EAAK1Z,EAAIgD,QAAQq/B,EAAIhzC,EAAKgD,IAAI7C,KAAK8wC,eAAgB9wC,KAAK2xC,iBACxDxnB,EAAK3Z,EAAIgD,QAAQs/B,EAAIjzC,EAAKgD,IAAI7C,KAAKgxC,eAAgBhxC,KAAK4xC,iBACxDppC,EAAI3I,EAAKwB,OACbmH,EAAEhG,WAAW,EAAGykB,EAAI,EAAGkD,GACvB3hB,EAAE7F,WAAW,EAAGqkB,EAAI,EAAGkD,OAEnBoK,EAAKt0B,KAAK6xC,WAAYtd,EAAKv0B,KAAK8xC,WAChCllC,EAAK5M,KAAK+xC,QAASvd,EAAKx0B,KAAKgyC,aAI1BpW,OAASprB,EAAIgD,QAAQq/B,EAAI7yC,KAAKm3C,oBAC9BS,KAAO/3C,EAAK8D,MAAM9D,EAAKyC,IAAIkG,EAAG0hB,GAAKlqB,KAAK47B,aACxCic,KAAOh4C,EAAK8D,MAAMwmB,EAAInqB,KAAK47B,aAE3B2Z,YAAcjhB,EAAKC,EAAK3nB,EAAK5M,KAAK43C,KAAO53C,KAAK43C,KAAOpjB,EAAKx0B,KAAK63C,KAC9D73C,KAAK63C,KACP73C,KAAKu1C,YAAc,SAChBA,YAAc,EAAMv1C,KAAKu1C,kBAM3BkC,OAASjnC,EAAIgD,QAAQq/B,EAAI7yC,KAAKq3C,oBAE9BK,KAAO73C,EAAK8D,MAAM9D,EAAKyC,IAAIkG,EAAG0hB,GAAKlqB,KAAKy3C,aACxCE,KAAO93C,EAAK8D,MAAMwmB,EAAInqB,KAAKy3C,QAEnB53C,EAAK8D,MAAMumB,EAAIlqB,KAAKy3C,YAE7BthB,EAAM7B,EAAKC,EAAK3nB,EAAK5M,KAAK03C,KAAO13C,KAAK03C,KAAOljB,EAAKx0B,KAAK23C,KAAO33C,KAAK23C,KACnEthB,EAAMzpB,EAAK5M,KAAK03C,KAAOljB,EAAKx0B,KAAK23C,KACjCS,EAAMxrC,EAAK5M,KAAK03C,KAAO13C,KAAK43C,KAAOpjB,EAAKx0B,KAAK23C,KAAO33C,KAAK63C,KACzDzhB,EAAMxpB,EAAK4nB,EACJ,GAAP4B,IAEFA,EAAM,OAEJiiB,EAAMzrC,EAAK5M,KAAK43C,KAAOpjB,EAAKx0B,KAAK63C,KACjCS,EAAMhkB,EAAKC,EAAK3nB,EAAK5M,KAAK43C,KAAO53C,KAAK43C,KAAOpjB,EAAKx0B,KAAK63C,KAAO73C,KAAK63C,aAElEC,IAAI35B,GAAGpc,IAAIo0B,EAAKE,EAAK+hB,QACrBN,IAAI15B,GAAGrc,IAAIs0B,EAAKD,EAAKiiB,QACrBP,IAAInwB,GAAG5lB,IAAIq2C,EAAKC,EAAKC,GAIxBt4C,KAAKq1C,cAAe,KAElBkD,EAAmB14C,EAAK6D,IAAI1D,KAAK47B,OAAQpzB,GACzC9I,EAAKqE,IAAI/D,KAAKu3C,mBAAqBv3C,KAAKs3C,oBAAsB,EAAMhzC,EAAS0C,gBAC1EwuC,aAheO,EAkeH+C,GAAoBv4C,KAAKs3C,mBAperB,GAqeTt3C,KAAKw1C,oBACFA,aAteM,OAueNnE,UAAU5pB,EAAI,GAGZ8wB,GAAoBv4C,KAAKu3C,mBAzerB,GA0eTv3C,KAAKw1C,oBACFA,aA3eM,OA4eNnE,UAAU5pB,EAAI,SAIhB+tB,aAlfS,OAmfTnE,UAAU5pB,EAAI,aAIhB+tB,aAvfW,OAwfXnE,UAAU5pB,EAAI,KAGK,GAAtBznB,KAAKs1C,qBACFN,eAAiB,GAGpBrjB,EAAKO,aAAc,MAEhBmf,UAAUvuC,IAAI6uB,EAAKQ,cACnB6iB,gBAAkBrjB,EAAKQ,YAExB6C,EAAIn1B,EAAKgE,QAAQ7D,KAAKqxC,UAAUvxC,EAAGE,KAAKy3C,OAAQz3C,KAAKg1C,eACnDh1C,KAAKqxC,UAAU5pB,EAAGznB,KAAK47B,QACzB4c,EAAKx4C,KAAKqxC,UAAUvxC,EAAIE,KAAK03C,KAAO13C,KAAKqxC,UAAUtxC,GAChDC,KAAKg1C,eAAiBh1C,KAAKqxC,UAAU5pB,GAAKznB,KAAK43C,KAClDa,EAAKz4C,KAAKqxC,UAAUvxC,EAAIE,KAAK23C,KAAO33C,KAAKqxC,UAAUtxC,GAChDC,KAAKg1C,eAAiBh1C,KAAKqxC,UAAU5pB,GAAKznB,KAAK63C,KAEtDziB,EAAGxyB,OAAO0xB,EAAIU,GACdtL,GAAM9c,EAAK4rC,EAEXnjB,EAAG5yB,OAAO8xB,EAAIS,GACdpL,GAAM4K,EAAKikB,YAENpH,UAAUvvC,eACVkzC,eAAiB,OAGnBxd,QAAQza,WAAWvb,EAAEO,IAAIqzB,QACzBoC,QAAQza,WAAW5a,EAAIunB,OACvB+N,QAAQ1a,WAAWvb,EAAEO,IAAIszB,QACzBoC,QAAQ1a,WAAW5a,EAAIynB,GAG9BktB,GAAe91C,UAAU63B,yBAA2B,SAASlH,OACvDyD,EAAKp1B,KAAKw3B,QAAQza,WAAWvb,EAC7BkoB,EAAK1pB,KAAKw3B,QAAQza,WAAW5a,EAC7BkzB,EAAKr1B,KAAKy3B,QAAQ1a,WAAWvb,EAC7BooB,EAAK5pB,KAAKy3B,QAAQ1a,WAAW5a,EAE7BmyB,EAAKt0B,KAAK6xC,WACVtd,EAAKv0B,KAAK8xC,WACVllC,EAAK5M,KAAK+xC,QACVvd,EAAKx0B,KAAKgyC,WAGVhyC,KAAKs1C,eApiBO,GAoiBUt1C,KAAKw1C,aAA6B,KACtDlC,EAAOzzC,EAAK6D,IAAI1D,KAAK47B,OAAQ/7B,EAAKgD,IAAIwyB,EAAID,IAAOp1B,KAAK63C,KAAOjuB,EAC3D5pB,KAAK43C,KAAOluB,EACdxG,EAAUljB,KAAKu1C,aAAev1C,KAAKo1C,aAAe9B,GAClDe,EAAar0C,KAAKg1C,eAClBV,EAAa3iB,EAAK+K,GAAK18B,KAAKw3C,qBAC3BxC,eAAiBt1C,EAAKoB,MAAMd,KAAKg1C,eAAiB9xB,GAClDoxB,EAAYA,GACjBpxB,EAAUljB,KAAKg1C,eAAiBX,MAE5Brf,EAAIn1B,EAAKiD,IAAIogB,EAASljB,KAAK47B,QAC3B4c,EAAKt1B,EAAUljB,KAAK43C,KACpBa,EAAKv1B,EAAUljB,KAAK63C,KAExBziB,EAAGxyB,OAAO0xB,EAAIU,GACdtL,GAAM9c,EAAK4rC,EAEXnjB,EAAG5yB,OAAO8xB,EAAIS,GACdpL,GAAM4K,EAAKikB,MAGTlC,EAAQ12C,EAAKwB,UACjBk1C,EAAMz2C,GAAKD,EAAK6D,IAAI1D,KAAKy3C,OAAQpiB,GAAMr1B,KAAK23C,KAAO/tB,EACnD2sB,EAAMz2C,GAAKD,EAAK6D,IAAI1D,KAAKy3C,OAAQriB,GAAMp1B,KAAK03C,KAAOhuB,EACnD6sB,EAAMx2C,EAAI6pB,EAAKF,EAEX1pB,KAAKq1C,eAjkBS,GAikBQr1C,KAAKw1C,aAA+B,KAExDgB,EAAQ,EACZA,GAAS32C,EAAK6D,IAAI1D,KAAK47B,OAAQvG,GAAMr1B,KAAK63C,KAAOjuB,EACjD4sB,GAAS32C,EAAK6D,IAAI1D,KAAK47B,OAAQxG,GAAMp1B,KAAK43C,KAAOluB,EAE7C4pB,EAAO9rB,EAAK+uB,EAAMz2C,EAAGy2C,EAAMx2C,EAAGy2C,OAE9BkC,EAAKlxB,EAAKxnB,KAAKqxC,WACfsH,EAAK34C,KAAK83C,IAAI5pB,QAAQ1G,EAAK1jB,IAAIwvC,SAC9BjC,UAAU/uC,IAAIq2C,GA1kBJ,GA4kBX34C,KAAKw1C,kBACFnE,UAAU5pB,EAAI/nB,EAAKmB,IAAIb,KAAKqxC,UAAU5pB,EAAG,GA5kBjC,GA6kBJznB,KAAKw1C,oBACTnE,UAAU5pB,EAAI/nB,EAAKkB,IAAIZ,KAAKqxC,UAAU5pB,EAAG,QAK5CvlB,EAAIrC,EAAKgE,SAAS,EAAG0yC,IAASv2C,KAAKqxC,UAAU5pB,EAAIixB,EAAGjxB,GAAI5nB,EAAKyB,IAAItB,KAAK83C,IAAInwB,GAAG7nB,EAAGE,KAAK83C,IAAInwB,GAAG5nB,IAC5F64C,EAAM/4C,EAAKyC,IAAItC,KAAK83C,IAAI3pB,QAAQjsB,GAAIrC,EAAKyB,IAAIo3C,EAAG54C,EAAG44C,EAAG34C,SACrDsxC,UAAUvxC,EAAI84C,EAAI94C,OAClBuxC,UAAUtxC,EAAI64C,EAAI74C,EAEvB44C,EAAKnxB,EAAK3kB,IAAI7C,KAAKqxC,UAAWqH,GAE1B1jB,EAAIn1B,EAAKgE,QAAQ80C,EAAG74C,EAAGE,KAAKy3C,OAAQkB,EAAGlxB,EAAGznB,KAAK47B,QAC/C4c,EAAKG,EAAG74C,EAAIE,KAAK03C,KAAOiB,EAAG54C,EAAI44C,EAAGlxB,EAAIznB,KAAK43C,KAC3Ca,EAAKE,EAAG74C,EAAIE,KAAK23C,KAAOgB,EAAG54C,EAAI44C,EAAGlxB,EAAIznB,KAAK63C,KAE/CziB,EAAGxyB,OAAO0xB,EAAIU,GACdtL,GAAM9c,EAAK4rC,EAEXnjB,EAAG5yB,OAAO8xB,EAAIS,GACdpL,GAAM4K,EAAKikB,MACN,CAEDE,EAAK34C,KAAK83C,IAAI3pB,QAAQtuB,EAAKiE,IAAIyyC,SAC9BlF,UAAUvxC,GAAK64C,EAAG74C,OAClBuxC,UAAUtxC,GAAK44C,EAAG54C,EAEnBi1B,EAAIn1B,EAAKiD,IAAI61C,EAAG74C,EAAGE,KAAKy3C,QACxBe,EAAKG,EAAG74C,EAAIE,KAAK03C,KAAOiB,EAAG54C,EAC3B04C,EAAKE,EAAG74C,EAAIE,KAAK23C,KAAOgB,EAAG54C,EAE/Bq1B,EAAGxyB,OAAO0xB,EAAIU,GACdtL,GAAM9c,EAAK4rC,EAEXnjB,EAAG5yB,OAAO8xB,EAAIS,GACdpL,GAAM4K,EAAKikB,OAGRjhB,QAAQza,WAAWvb,EAAI4zB,OACvBoC,QAAQza,WAAW5a,EAAIunB,OACvB+N,QAAQ1a,WAAWvb,EAAI6zB,OACvBoC,QAAQ1a,WAAW5a,EAAIynB,GAG9BktB,GAAe91C,UAAU83B,yBAA2B,SAASnH,OACvD3K,EAAKhnB,KAAKw3B,QAAQxa,WAAWrN,EAC7B8kB,EAAKz0B,KAAKw3B,QAAQxa,WAAW/a,EAC7BglB,EAAKjnB,KAAKy3B,QAAQza,WAAWrN,EAC7B+kB,EAAK10B,KAAKy3B,QAAQza,WAAW/a,EAE7B4wC,EAAKriC,EAAIlP,IAAImzB,GACbqe,EAAKtiC,EAAIlP,IAAIozB,GAEbJ,EAAKt0B,KAAK6xC,WACVtd,EAAKv0B,KAAK8xC,WACVllC,EAAK5M,KAAK+xC,QACVvd,EAAKx0B,KAAKgyC,QAGV9nB,EAAK1Z,EAAIgD,QAAQq/B,EAAIhzC,EAAKgD,IAAI7C,KAAK8wC,eAAgB9wC,KAAK2xC,iBACxDxnB,EAAK3Z,EAAIgD,QAAQs/B,EAAIjzC,EAAKgD,IAAI7C,KAAKgxC,eAAgBhxC,KAAK4xC,iBACxDppC,EAAI3I,EAAKgD,IAAIhD,EAAKyC,IAAI2kB,EAAIkD,GAAKtqB,EAAKyC,IAAI0kB,EAAIkD,IAE5CgtB,EAAO1mC,EAAIgD,QAAQq/B,EAAI7yC,KAAKm3C,eAC5Bpc,EAAKl7B,EAAK8D,MAAM9D,EAAKyC,IAAIkG,EAAG0hB,GAAKgtB,GACjClc,EAAKn7B,EAAK8D,MAAMwmB,EAAI+sB,GACpB5G,EAAO9/B,EAAIgD,QAAQq/B,EAAI7yC,KAAKq3C,eAE5Bzc,EAAK/6B,EAAK8D,MAAM9D,EAAKyC,IAAIkG,EAAG0hB,GAAKomB,GACjC7V,EAAK56B,EAAK8D,MAAMwmB,EAAImmB,GAEpBptB,EAAUsE,IACVqxB,EAAKh5C,EAAKwB,OACdw3C,EAAG/4C,EAAID,EAAK6D,IAAI4sC,EAAM9nC,GACtBqwC,EAAG94C,EAAI20B,EAAKD,EAAKz0B,KAAK80C,qBAElBgE,EAAcp5C,EAAKqE,IAAI80C,EAAG/4C,GAC1B82C,EAAel3C,EAAKqE,IAAI80C,EAAG94C,GAE3BiH,EAAa1C,EAAS0C,WACtBU,EAAsBpD,EAASoD,oBAE/BwU,GAAS,EACT68B,EAAK,KACL/4C,KAAKq1C,cAAe,KAElBtX,EAAcl+B,EAAK6D,IAAIwzC,EAAM1uC,GAC7B9I,EAAKqE,IAAI/D,KAAKu3C,mBAAqBv3C,KAAKs3C,oBAAsB,EAAMtwC,GAEtE+xC,EAAKr5C,EAAKoB,MAAMi9B,GAAcr2B,EAAqBA,GACnDoxC,EAAcp5C,EAAKmB,IAAIi4C,EAAap5C,EAAKqE,IAAIg6B,IAC7C7hB,GAAS,GAEA6hB,GAAe/9B,KAAKs3C,oBAE7ByB,EAAKr5C,EAAKoB,MAAMi9B,EAAc/9B,KAAKs3C,mBAAqBtwC,GACnDU,EAAqB,GAC1BoxC,EAAcp5C,EACTmB,IAAIi4C,EAAa94C,KAAKs3C,mBAAqBvZ,GAChD7hB,GAAS,GAEA6hB,GAAe/9B,KAAKu3C,qBAE7BwB,EAAKr5C,EAAKoB,MAAMi9B,EAAc/9B,KAAKu3C,mBAAqBvwC,EAAY,EAChEU,GACJoxC,EAAcp5C,EACTmB,IAAIi4C,EAAa/a,EAAc/9B,KAAKu3C,oBACzCr7B,GAAS,MAITA,EAAQ,KACNia,EAAM7B,EAAKC,EAAK3nB,EAAKguB,EAAKA,EAAKpG,EAAKiG,EAAKA,EACzCpE,EAAMzpB,EAAKguB,EAAKpG,EAAKiG,EACrB2d,EAAMxrC,EAAKguB,EAAKG,EAAKvG,EAAKiG,EAAKO,EAExB,IADP5E,EAAMxpB,EAAK4nB,KAGb4B,EAAM,OAEJiiB,EAAMzrC,EAAKmuB,EAAKvG,EAAKwG,EACrBsd,EAAMhkB,EAAKC,EAAK3nB,EAAKmuB,EAAKA,EAAKvG,EAAKwG,EAAKA,GAEzCjG,EAAI,IAAIrN,GACVvJ,GAAGpc,IAAIo0B,EAAKE,EAAK+hB,GACnBrjB,EAAE3W,GAAGrc,IAAIs0B,EAAKD,EAAKiiB,GACnBtjB,EAAEpN,GAAG5lB,IAAIq2C,EAAKC,EAAKC,OAEfvrC,EAAIya,IACRza,EAAEjN,EAAI+4C,EAAG/4C,EACTiN,EAAEhN,EAAI84C,EAAG94C,EACTgN,EAAE0a,EAAIsxB,EAEN71B,EAAU6R,EAAE7G,QAAQ1G,EAAK1jB,IAAIiJ,QACxB,KAGDqpB,EAKArB,EAPAoB,EAAM7B,EAAKC,EAAK3nB,EAAKguB,EAAKA,EAAKpG,EAAKiG,EAAKA,EACzCpE,EAAMzpB,EAAKguB,EAAKpG,EAAKiG,EAEd,IADPrE,EAAMxpB,EAAK4nB,KAEb4B,EAAM,IAGJrB,EAAI,IAAI7W,GACVC,GAAGpc,IAAIo0B,EAAKE,GACdtB,EAAE3W,GAAGrc,IAAIs0B,EAAKD,OAEV4iB,EAAWjkB,EAAE1Q,MAAMxkB,EAAKiE,IAAI+0C,IAChC31B,EAAQpjB,EAAIk5C,EAASl5C,EACrBojB,EAAQnjB,EAAIi5C,EAASj5C,EACrBmjB,EAAQuE,EAAI,MAGVuN,EAAIn1B,EAAKgE,QAAQqf,EAAQpjB,EAAGwwC,EAAMptB,EAAQuE,EAAGyvB,GAC7CsB,EAAKt1B,EAAQpjB,EAAI86B,EAAK1X,EAAQnjB,EAAImjB,EAAQuE,EAAIsT,EAC9C0d,EAAKv1B,EAAQpjB,EAAI26B,EAAKvX,EAAQnjB,EAAImjB,EAAQuE,EAAIuT,SAElDhU,EAAGpkB,OAAO0xB,EAAIU,GACdP,GAAM7nB,EAAK4rC,EACXvxB,EAAGxkB,OAAO8xB,EAAIS,GACdN,GAAMF,EAAKikB,OAENjhB,QAAQxa,WAAWrN,EAAIqX,OACvBwQ,QAAQxa,WAAW/a,EAAIwyB,OACvBgD,QAAQza,WAAWrN,EAAIsX,OACvBwQ,QAAQza,WAAW/a,EAAIyyB,EAErBokB,GAAex0C,EAAS0C,YACxB4vC,GAAgBtyC,EAAS4C,aCpvBlC+xC,GAAUjT,KAAO,aACjBzO,GAAMviB,MAAMikC,GAAUjT,MAAQiT,GAE9BA,GAAUlT,OAASxO,GACnB0hB,GAAUj4C,UAAYjC,OAAOa,OAAOq5C,GAAUlT,OAAO/kC,WAerD,IAAIyvC,GAAW,CACbzS,MAAQ,GAoBV,SAASib,GAAUniC,EAAK8a,EAAOC,EAAOqnB,EAAQC,EAAQnb,QAC9Ch+B,gBAAgBi5C,WACb,IAAIA,GAAUniC,EAAK8a,EAAOC,EAAOqnB,EAAQC,EAAQnb,OAyBtDob,EAAaC,EAtBjBviC,EAAMC,EAAQD,EAAK25B,IACnBlZ,GAAMyM,KAAKhkC,KAAM8W,EAAK8a,EAAOC,GAC7BD,EAAQ5xB,KAAKw3B,QACb3F,EAAQ7xB,KAAKy3B,aAERhmB,OAASwnC,GAAUjT,UAOnBsT,SAAWJ,GAAkBpiC,EAAIoiC,YACjCK,SAAWJ,GAAkBriC,EAAIqiC,YACjCK,QAAU95C,EAAKS,SAAS69B,GAASA,EAAQlnB,EAAIknB,WAE7Cyb,QAAUz5C,KAAKs5C,SAAS/jC,eACxBmkC,QAAU15C,KAAKu5C,SAAShkC,eASxBokC,QAAU35C,KAAKs5C,SAASlhB,gBACxBZ,QAAUx3B,KAAKs5C,SAASjhB,eAGzB5R,EAAMzmB,KAAKw3B,QAAQrf,KACnBsc,EAAKz0B,KAAKw3B,QAAQ1a,QAAQ7a,EAC1B23C,EAAM55C,KAAK25C,QAAQxhC,KACnB0hC,EAAK75C,KAAK25C,QAAQ78B,QAAQ7a,KAE1BjC,KAAKy5C,UAAYlF,GAAcvO,KAAM,KACnC8T,EAAW95C,KAAKs5C,cACfS,eAAiBD,EAAShJ,oBAC1BA,eAAiBgJ,EAAS9I,oBAC1BgJ,kBAAoBF,EAAShF,sBAC7BmF,aAAep6C,EAAKwB,OAEzB+3C,EAAc3kB,EAAKolB,EAAK75C,KAAKg6C,sBACxB,KACDE,EAAYl6C,KAAKs5C,cAChBS,eAAiBG,EAAUpJ,oBAC3BA,eAAiBoJ,EAAUlJ,oBAC3BgJ,kBAAoBE,EAAUpF,sBAC9BmF,aAAeC,EAAU/C,kBAE1BgD,EAAKn6C,KAAK+5C,eACVjqB,EAAKtf,EAAIoD,SAASgmC,EAAI7oC,EAAGlR,EAAKyC,IAAIkO,EAAI1N,IAAI2jB,EAAI1V,EAAG/Q,KAAK8wC,gBAAiBjxC,EAAKgD,IAAI4jB,EAAIrc,EAAGwvC,EAAIxvC,KAC/FgvC,EAAcv5C,EAAK6D,IAAIosB,EAAI9vB,KAAKi6C,cAAgBp6C,EAAK6D,IAAIy2C,EAAIn6C,KAAKi6C,mBAG/DG,QAAUp6C,KAAKu5C,SAASnhB,gBACxBX,QAAUz3B,KAAKu5C,SAASlhB,eAGzB1R,EAAM3mB,KAAKy3B,QAAQtf,KACnBuc,EAAK10B,KAAKy3B,QAAQ3a,QAAQ7a,EAC1Bo4C,EAAMr6C,KAAKo6C,QAAQjiC,KACnBmiC,EAAKt6C,KAAKo6C,QAAQt9B,QAAQ7a,KAE1BjC,KAAK05C,UAAYnF,GAAcvO,KAAM,CACnC8T,EAAW95C,KAAKu5C,cACfgB,eAAiBT,EAAShJ,oBAC1BE,eAAiB8I,EAAS9I,oBAC1BwJ,kBAAoBV,EAAShF,sBAC7B2F,aAAe56C,EAAKwB,OAEzBg4C,EAAc3kB,EAAK4lB,EAAKt6C,KAAKw6C,sBACxB,CACDN,EAAYl6C,KAAKu5C,cAChBgB,eAAiBL,EAAUpJ,oBAC3BE,eAAiBkJ,EAAUlJ,oBAC3BwJ,kBAAoBN,EAAUpF,sBAC9B2F,aAAeP,EAAU/C,kBAE1BuD,EAAK16C,KAAKu6C,eACVxqB,EAAKvf,EAAIoD,SAASymC,EAAItpC,EAAGlR,EAAKyC,IAAIkO,EAAI1N,IAAI6jB,EAAI5V,EAAG/Q,KAAKgxC,gBAAiBnxC,EAAKgD,IAAI8jB,EAAIvc,EAAGiwC,EAAIjwC,KAC/FivC,EAAcx5C,EAAK6D,IAAIqsB,EAAI/vB,KAAKy6C,cAAgB56C,EAAK6D,IAAIg3C,EAAI16C,KAAKy6C,mBAG/DE,WAAavB,EAAcp5C,KAAKw5C,QAAUH,OAE1ChI,UAAY,OAGZuJ,MAAO56C,KAAK66C,MAAO76C,KAAK86C,MAAO96C,KAAK+6C,WACpCC,KAAMh7C,KAAKi7C,KAAMj7C,KAAKk7C,KAAMl7C,KAAKm7C,UACjCC,KAAMp7C,KAAKq7C,KAAMr7C,KAAKs7C,KAAMt7C,KAAKu7C,UACjCC,OAAQx7C,KAAKy7C,YACbC,MAAO17C,KAAK27C,MAAO37C,KAAK47C,MAAO57C,KAAK67C,WACpCn/B,OAsBPu8B,GAAUj4C,UAAUC,WAAa,iBACxB,CACLmU,KAAMpV,KAAKyR,OACXmgB,MAAO5xB,KAAKw3B,QACZ3F,MAAO7xB,KAAKy3B,QACZE,iBAAkB33B,KAAKujB,mBAEvB21B,OAAQl5C,KAAKs5C,SACbH,OAAQn5C,KAAKu5C,SACbvb,MAAOh+B,KAAKw5C,UAMhBP,GAAU/3C,aAAe,SAASC,EAAMyZ,EAAO1F,UAC7C/T,EAAOpC,OAAOC,OAAO,GAAImC,IACpBywB,MAAQ1c,EAAQgG,EAAM/Z,EAAKywB,MAAOhX,GACvCzZ,EAAK0wB,MAAQ3c,EAAQgG,EAAM/Z,EAAK0wB,MAAOjX,GACvCzZ,EAAK+3C,OAAShkC,EAAQqiB,GAAOp2B,EAAK+3C,OAAQt+B,GAC1CzZ,EAAKg4C,OAASjkC,EAAQqiB,GAAOp2B,EAAKg4C,OAAQv+B,GAC9B,IAAIq+B,GAAU93C,IAQ5B83C,GAAUj4C,UAAU86C,UAAY,kBACvB97C,KAAKs5C,UAMdL,GAAUj4C,UAAU+6C,UAAY,kBACvB/7C,KAAKu5C,UAMdN,GAAUj4C,UAAUg7C,SAAW,SAAShe,QAEjCwb,QAAUxb,GAGjBib,GAAUj4C,UAAUi7C,SAAW,kBACtBj8C,KAAKw5C,SAGdP,GAAUj4C,UAAUu3B,WAAa,kBACxBv4B,KAAKw3B,QAAQ7V,cAAc3hB,KAAK8wC,iBAGzCmI,GAAUj4C,UAAUw3B,WAAa,kBACxBx4B,KAAKy3B,QAAQ9V,cAAc3hB,KAAKgxC,iBAGzCiI,GAAUj4C,UAAUy3B,iBAAmB,SAASC,UACvC74B,EAAKiD,IAAI9C,KAAKqxC,UAAWrxC,KAAKw7C,QAAQ14C,IAAI41B,IAGnDugB,GAAUj4C,UAAU23B,kBAAoB,SAASD,UAExCA,GADC14B,KAAKqxC,UAAYrxC,KAAK07C,QAIhCzC,GAAUj4C,UAAU43B,wBAA0B,SAASjH,QAChDipB,MAAQ56C,KAAKw3B,QAAQ1a,QAAQ5L,iBAC7B2pC,MAAQ76C,KAAKy3B,QAAQ3a,QAAQ5L,iBAC7B4pC,MAAQ96C,KAAK25C,QAAQ78B,QAAQ5L,iBAC7B6pC,MAAQ/6C,KAAKo6C,QAAQt9B,QAAQ5L,iBAC7B8pC,KAAOh7C,KAAKw3B,QAAQ7a,eACpBs+B,KAAOj7C,KAAKy3B,QAAQ9a,eACpBu+B,KAAOl7C,KAAK25C,QAAQh9B,eACpBw+B,KAAOn7C,KAAKo6C,QAAQz9B,eACpBy+B,KAAOp7C,KAAKw3B,QAAQ3a,YACpBw+B,KAAOr7C,KAAKy3B,QAAQ5a,YACpBy+B,KAAOt7C,KAAK25C,QAAQ98B,YACpB0+B,KAAOv7C,KAAKo6C,QAAQv9B,WAErB4X,EAAKz0B,KAAKw3B,QAAQxa,WAAW/a,EAC7BmzB,EAAKp1B,KAAKw3B,QAAQza,WAAWvb,EAC7BkoB,EAAK1pB,KAAKw3B,QAAQza,WAAW5a,EAE7BuyB,EAAK10B,KAAKy3B,QAAQza,WAAW/a,EAC7BozB,EAAKr1B,KAAKy3B,QAAQ1a,WAAWvb,EAC7BooB,EAAK5pB,KAAKy3B,QAAQ1a,WAAW5a,EAE7B03C,EAAK75C,KAAK25C,QAAQ38B,WAAW/a,EAC7Bi6C,EAAKl8C,KAAK25C,QAAQ58B,WAAWvb,EAC7B26C,EAAKn8C,KAAK25C,QAAQ58B,WAAW5a,EAE7Bm4C,EAAKt6C,KAAKo6C,QAAQp9B,WAAW/a,EAC7Bm6C,EAAKp8C,KAAKo6C,QAAQr9B,WAAWvb,EAC7BuI,EAAK/J,KAAKo6C,QAAQr9B,WAAW5a,EAE7B0wC,EAAKriC,EAAIlP,IAAImzB,GACbqe,EAAKtiC,EAAIlP,IAAIozB,GACb2nB,EAAK7rC,EAAIlP,IAAIu4C,GACbyC,EAAK9rC,EAAIlP,IAAIg5C,WAEZ59B,OAAS,EAEV1c,KAAKy5C,SAAWlF,GAAcvO,UAC3BwV,OAAS37C,EAAKwB,YACdq6C,MAAQ,OACRE,MAAQ,OACRl/B,QAAU1c,KAAKo7C,KAAOp7C,KAAKs7C,SAC3B,KACDjT,EAAI73B,EAAIgD,QAAQ6oC,EAAIr8C,KAAKi6C,cACzBsC,EAAK/rC,EAAIiD,OAAO4oC,EAAIr8C,KAAK+5C,eAAgB/5C,KAAK86C,OAC9C5wB,EAAK1Z,EAAIiD,OAAOo/B,EAAI7yC,KAAK8wC,eAAgB9wC,KAAK46C,YAC7CY,OAASnT,OACTuT,MAAQ/7C,EAAK8D,MAAM44C,EAAIlU,QACvBqT,MAAQ77C,EAAK8D,MAAMumB,EAAIme,QACvB3rB,QAAU1c,KAAKk7C,KAAOl7C,KAAKg7C,KAAOh7C,KAAKs7C,KAAOt7C,KAAK47C,MAAQ57C,KAAK47C,MAAQ57C,KAAKo7C,KAAOp7C,KAAK07C,MAAQ17C,KAAK07C,SAGzG17C,KAAK05C,SAAWnF,GAAcvO,UAC3ByV,OAAS57C,EAAKwB,YACds6C,MAAQ37C,KAAKw5C,aACbqC,MAAQ77C,KAAKw5C,aACb98B,QAAU1c,KAAKw5C,QAAUx5C,KAAKw5C,SAAWx5C,KAAKq7C,KAAOr7C,KAAKu7C,UAC1D,CACDlT,EAAI73B,EAAIgD,QAAQ8oC,EAAIt8C,KAAKy6C,kBACzB+B,EAAKhsC,EAAIiD,OAAO6oC,EAAIt8C,KAAKu6C,eAAgBv6C,KAAK+6C,OAC9C5wB,EAAK3Z,EAAIiD,OAAOq/B,EAAI9yC,KAAKgxC,eAAgBhxC,KAAK66C,YAC7CY,OAAS57C,EAAKiD,IAAI9C,KAAKw5C,QAASnR,QAChCwT,MAAQ77C,KAAKw5C,QAAU35C,EAAK8D,MAAM64C,EAAInU,QACtCsT,MAAQ37C,KAAKw5C,QAAU35C,EAAK8D,MAAMwmB,EAAIke,QACtC3rB,QAAU1c,KAAKw5C,QAAUx5C,KAAKw5C,SAAWx5C,KAAKm7C,KAAOn7C,KAAKi7C,MAAQj7C,KAAKu7C,KAAOv7C,KAAK67C,MAAQ77C,KAAK67C,MAAQ77C,KAAKq7C,KAAOr7C,KAAK27C,MAAQ37C,KAAK27C,WAIxIj/B,OAAS1c,KAAK0c,OAAS,EAAM,EAAM1c,KAAK0c,OAAS,EAElDiV,EAAKO,cACPkD,EAAG3yB,OAAOzC,KAAKg7C,KAAOh7C,KAAKqxC,UAAWrxC,KAAKw7C,QAC3C9xB,GAAM1pB,KAAKo7C,KAAOp7C,KAAKqxC,UAAYrxC,KAAK07C,MAExCrmB,EAAG5yB,OAAOzC,KAAKi7C,KAAOj7C,KAAKqxC,UAAWrxC,KAAKy7C,QAC3C7xB,GAAM5pB,KAAKq7C,KAAOr7C,KAAKqxC,UAAYrxC,KAAK27C,MAExCO,EAAGt5C,OAAO5C,KAAKk7C,KAAOl7C,KAAKqxC,UAAWrxC,KAAKw7C,QAC3CW,GAAMn8C,KAAKs7C,KAAOt7C,KAAKqxC,UAAYrxC,KAAK47C,MAExCQ,EAAGx5C,OAAO5C,KAAKm7C,KAAOn7C,KAAKqxC,UAAWrxC,KAAKy7C,QAC3C1xC,GAAM/J,KAAKu7C,KAAOv7C,KAAKqxC,UAAYrxC,KAAK67C,YAGnCxK,UAAY,OAGd7Z,QAAQza,WAAWvb,EAAEO,IAAIqzB,QACzBoC,QAAQza,WAAW5a,EAAIunB,OACvB+N,QAAQ1a,WAAWvb,EAAEO,IAAIszB,QACzBoC,QAAQ1a,WAAW5a,EAAIynB,OACvB+vB,QAAQ58B,WAAWvb,EAAEO,IAAIm6C,QACzBvC,QAAQ58B,WAAW5a,EAAIg6C,OACvB/B,QAAQr9B,WAAWvb,EAAEO,IAAIq6C,QACzBhC,QAAQr9B,WAAW5a,EAAI4H,GAG9BkvC,GAAUj4C,UAAU63B,yBAA2B,SAASlH,OAClDyD,EAAKp1B,KAAKw3B,QAAQza,WAAWvb,EAC7BkoB,EAAK1pB,KAAKw3B,QAAQza,WAAW5a,EAC7BkzB,EAAKr1B,KAAKy3B,QAAQ1a,WAAWvb,EAC7BooB,EAAK5pB,KAAKy3B,QAAQ1a,WAAW5a,EAC7B+5C,EAAKl8C,KAAK25C,QAAQ58B,WAAWvb,EAC7B26C,EAAKn8C,KAAK25C,QAAQ58B,WAAW5a,EAC7Bi6C,EAAKp8C,KAAKo6C,QAAQr9B,WAAWvb,EAC7BuI,EAAK/J,KAAKo6C,QAAQr9B,WAAW5a,EAE7BmxC,EAAOzzC,EAAK6D,IAAI1D,KAAKw7C,OAAQpmB,GAAMv1B,EAAK6D,IAAI1D,KAAKw7C,OAAQU,GACvDr8C,EAAK6D,IAAI1D,KAAKy7C,OAAQpmB,GAAMx1B,EAAK6D,IAAI1D,KAAKy7C,OAAQW,GACxD9I,GAAStzC,KAAK07C,MAAQhyB,EAAK1pB,KAAK47C,MAAQO,GACjCn8C,KAAK27C,MAAQ/xB,EAAK5pB,KAAK67C,MAAQ9xC,OAElCmZ,GAAWljB,KAAK0c,OAAS42B,OACxBjC,WAAanuB,EAElBkS,EAAG3yB,OAAOzC,KAAKg7C,KAAO93B,EAASljB,KAAKw7C,QACpC9xB,GAAM1pB,KAAKo7C,KAAOl4B,EAAUljB,KAAK07C,MACjCrmB,EAAG5yB,OAAOzC,KAAKi7C,KAAO/3B,EAASljB,KAAKy7C,QACpC7xB,GAAM5pB,KAAKq7C,KAAOn4B,EAAUljB,KAAK27C,MACjCO,EAAGt5C,OAAO5C,KAAKk7C,KAAOh4B,EAASljB,KAAKw7C,QACpCW,GAAMn8C,KAAKs7C,KAAOp4B,EAAUljB,KAAK47C,MACjCQ,EAAGx5C,OAAO5C,KAAKm7C,KAAOj4B,EAASljB,KAAKy7C,QACpC1xC,GAAM/J,KAAKu7C,KAAOr4B,EAAUljB,KAAK67C,WAE5BrkB,QAAQza,WAAWvb,EAAEO,IAAIqzB,QACzBoC,QAAQza,WAAW5a,EAAIunB,OACvB+N,QAAQ1a,WAAWvb,EAAEO,IAAIszB,QACzBoC,QAAQ1a,WAAW5a,EAAIynB,OACvB+vB,QAAQ58B,WAAWvb,EAAEO,IAAIm6C,QACzBvC,QAAQ58B,WAAW5a,EAAIg6C,OACvB/B,QAAQr9B,WAAWvb,EAAEO,IAAIq6C,QACzBhC,QAAQr9B,WAAW5a,EAAI4H,GAG9BkvC,GAAUj4C,UAAU83B,yBAA2B,SAASnH,OAiBlDynB,EAAaC,EAEboD,EAAMC,EACNC,EAAKC,EAAKC,EAAKC,EAnBf91B,EAAKhnB,KAAKw3B,QAAQxa,WAAWrN,EAC7B8kB,EAAKz0B,KAAKw3B,QAAQxa,WAAW/a,EAC7BglB,EAAKjnB,KAAKy3B,QAAQza,WAAWrN,EAC7B+kB,EAAK10B,KAAKy3B,QAAQza,WAAW/a,EAC7B86C,EAAK/8C,KAAK25C,QAAQ38B,WAAWrN,EAC7BkqC,EAAK75C,KAAK25C,QAAQ38B,WAAW/a,EAC7B+6C,EAAKh9C,KAAKo6C,QAAQp9B,WAAWrN,EAC7B2qC,EAAKt6C,KAAKo6C,QAAQp9B,WAAW/a,EAE7B4wC,EAAKriC,EAAIlP,IAAImzB,GACbqe,EAAKtiC,EAAIlP,IAAIozB,GACb2nB,EAAK7rC,EAAIlP,IAAIu4C,GACbyC,EAAK9rC,EAAIlP,IAAIg5C,GAQbv8B,EAAO,KAEP/d,KAAKy5C,SAAWlF,GAAcvO,KAChCyW,EAAO58C,EAAKwB,OACZs7C,EAAM,EACNE,EAAM,EACN9+B,GAAQ/d,KAAKo7C,KAAOp7C,KAAKs7C,KAEzBlC,EAAc3kB,EAAKolB,EAAK75C,KAAKg6C,sBACxB,KACD3R,EAAI73B,EAAIgD,QAAQ6oC,EAAIr8C,KAAKi6C,cACzBsC,EAAK/rC,EAAIiD,OAAO4oC,EAAIr8C,KAAK+5C,eAAgB/5C,KAAK86C,OAC9C5wB,EAAK1Z,EAAIiD,OAAOo/B,EAAI7yC,KAAK8wC,eAAgB9wC,KAAK46C,OAClD6B,EAAOpU,EACPwU,EAAMh9C,EAAK8D,MAAM44C,EAAIlU,GACrBsU,EAAM98C,EAAK8D,MAAMumB,EAAIme,GACrBtqB,GAAQ/d,KAAKk7C,KAAOl7C,KAAKg7C,KAAOh7C,KAAKs7C,KAAOuB,EAAMA,EAAM78C,KAAKo7C,KAAOuB,EAAMA,MAEtExC,EAAKt6C,EAAKgD,IAAI7C,KAAK+5C,eAAgB/5C,KAAK86C,OACxChrB,EAAKtf,EAAIoD,SAASyoC,EAAIx8C,EAAKyC,IAAI4nB,EAAIrqB,EAAKgD,IAAImkB,EAAI+1B,KACpD3D,EAAcv5C,EAAK6D,IAAI7D,EAAKgD,IAAIitB,EAAIqqB,GAAKn6C,KAAKi6C,iBAG5Cj6C,KAAK05C,SAAWnF,GAAcvO,KAChC0W,EAAO78C,EAAKwB,OACZu7C,EAAM58C,KAAKw5C,QACXsD,EAAM98C,KAAKw5C,QACXz7B,GAAQ/d,KAAKw5C,QAAUx5C,KAAKw5C,SAAWx5C,KAAKq7C,KAAOr7C,KAAKu7C,MAExDlC,EAAc3kB,EAAK4lB,EAAKt6C,KAAKw6C,sBACxB,CACDnS,EAAI73B,EAAIgD,QAAQ8oC,EAAIt8C,KAAKy6C,kBACzB+B,EAAKhsC,EAAIiD,OAAO6oC,EAAIt8C,KAAKu6C,eAAgBv6C,KAAK+6C,OAC9C5wB,EAAK3Z,EAAIiD,OAAOq/B,EAAI9yC,KAAKgxC,eAAgBhxC,KAAK66C,OAClD6B,EAAO78C,EAAKiD,IAAI9C,KAAKw5C,QAASnR,GAC9ByU,EAAM98C,KAAKw5C,QAAU35C,EAAK8D,MAAM64C,EAAInU,GACpCuU,EAAM58C,KAAKw5C,QAAU35C,EAAK8D,MAAMwmB,EAAIke,GACpCtqB,GAAQ/d,KAAKw5C,QAAUx5C,KAAKw5C,SAAWx5C,KAAKm7C,KAAOn7C,KAAKi7C,MAAQj7C,KAAKu7C,KAC/DuB,EAAMA,EAAM98C,KAAKq7C,KAAOuB,EAAMA,MAEhClC,EAAK76C,EAAKgD,IAAI7C,KAAKu6C,eAAgBv6C,KAAK+6C,OACxChrB,EAAKvf,EAAIoD,SAAS0oC,EAAIz8C,EAAKyC,IAAI6nB,EAAItqB,EAAKgD,IAAIokB,EAAI+1B,KACpD3D,EAAcx5C,EAAK6D,IAAIqsB,EAAI/vB,KAAKy6C,cAC1B56C,EAAK6D,IAAIg3C,EAAI16C,KAAKy6C,kBAGtB1tC,EAAKqsC,EAAcp5C,KAAKw5C,QAAUH,EAAer5C,KAAK26C,WAEtDz3B,EAAU,SACVnF,EAAO,IACTmF,GAAWnW,EAAIgR,GAGjBiJ,EAAGvkB,OAAOzC,KAAKg7C,KAAO93B,EAASu5B,GAC/BhoB,GAAMz0B,KAAKo7C,KAAOl4B,EAAUy5B,EAC5B11B,EAAGxkB,OAAOzC,KAAKi7C,KAAO/3B,EAASw5B,GAC/BhoB,GAAM10B,KAAKq7C,KAAOn4B,EAAU05B,EAC5BG,EAAGn6C,OAAO5C,KAAKk7C,KAAOh4B,EAASu5B,GAC/B5C,GAAM75C,KAAKs7C,KAAOp4B,EAAU25B,EAC5BG,EAAGp6C,OAAO5C,KAAKm7C,KAAOj4B,EAASw5B,GAC/BpC,GAAMt6C,KAAKu7C,KAAOr4B,EAAU45B,OAEvBtlB,QAAQxa,WAAWrN,EAAE5N,IAAIilB,QACzBwQ,QAAQxa,WAAW/a,EAAIwyB,OACvBgD,QAAQza,WAAWrN,EAAE5N,IAAIklB,QACzBwQ,QAAQza,WAAW/a,EAAIyyB,OACvBilB,QAAQ38B,WAAWrN,EAAE5N,IAAIg7C,QACzBpD,QAAQ38B,WAAW/a,EAAI43C,OACvBO,QAAQp9B,WAAWrN,EAAE5N,IAAIi7C,QACzB5C,QAAQp9B,WAAW/a,EAAIq4C,EA3EV,EA8EGh2C,EAAS0C,YC5chCi2C,GAAWjX,KAAO,cAClBzO,GAAMviB,MAAMioC,GAAWjX,MAAQiX,GAE/BA,GAAWlX,OAASxO,GACpB0lB,GAAWj8C,UAAYjC,OAAOa,OAAOq9C,GAAWlX,OAAO/kC,WAevD,IAAIyvC,GAAW,CACb+C,SAAW,EACXC,UAAY,EACZyJ,iBAAmB,IAYrB,SAASD,GAAWnmC,EAAK8a,EAAOC,QACxB7xB,gBAAgBi9C,WACb,IAAIA,GAAWnmC,EAAK8a,EAAOC,GAGpC/a,EAAMC,EAAQD,EAAK25B,IACnBlZ,GAAMyM,KAAKhkC,KAAM8W,EAAK8a,EAAOC,GAC7BD,EAAQ5xB,KAAKw3B,QACb3F,EAAQ7xB,KAAKy3B,aAERhmB,OAASwrC,GAAWjX,UAEpBmX,eAAiBz9C,EAAKS,SAAS2W,EAAIsmC,cAAgBtmC,EAAIsmC,aAAexrB,EAAM7N,cAAc8N,EAAM1Q,oBAChGk8B,gBAAkB39C,EAAKS,SAAS2W,EAAIwmC,eAAiBxmC,EAAIwmC,cAAgBzrB,EAAM3e,WAAa0e,EAAM1e,gBAElGygC,gBAAkB9zC,EAAKwB,YACvBuyC,iBAAmB,OAEnBC,WAAa/8B,EAAI08B,cACjBM,YAAch9B,EAAI28B,eAClB8J,mBAAqBzmC,EAAIomC,sBAGzBzL,UACAC,UACAC,oBACAC,oBACA4L,mBACAC,oBACA5L,gBACAC,gBACAC,aACAC,aACA+B,kBACAC,cAePiJ,GAAWj8C,UAAUC,WAAa,iBACzB,CACLmU,KAAMpV,KAAKyR,OACXmgB,MAAO5xB,KAAKw3B,QACZ3F,MAAO7xB,KAAKy3B,QACZE,iBAAkB33B,KAAKujB,mBAEvBiwB,SAAUxzC,KAAK6zC,WACfJ,UAAWzzC,KAAK8zC,YAChBoJ,iBAAkBl9C,KAAKu9C,mBAEvBH,aAAcp9C,KAAKm9C,eACnBG,cAAet9C,KAAKq9C,kBAIxBJ,GAAW/7C,aAAe,SAASC,EAAMyZ,EAAO1F,UAC9C/T,EAAOpC,OAAOC,OAAO,GAAImC,IACpBywB,MAAQ1c,EAAQgG,EAAM/Z,EAAKywB,MAAOhX,GACvCzZ,EAAK0wB,MAAQ3c,EAAQgG,EAAM/Z,EAAK0wB,MAAOjX,GAC3B,IAAIqiC,GAAW97C,IAO7B87C,GAAWj8C,UAAUmxC,YAAc,SAASr7B,GACtCA,EAAI85B,aACDE,eAAe/uC,IAAI/B,KAAKw3B,QAAQzT,cAAcjN,EAAI85B,UAC9C95B,EAAIi6B,mBACRD,eAAe/uC,IAAI+U,EAAIi6B,cAG1Bj6B,EAAI+5B,aACDG,eAAejvC,IAAI/B,KAAKy3B,QAAQ1T,cAAcjN,EAAI+5B,UAC9C/5B,EAAIm6B,mBACRD,eAAejvC,IAAI+U,EAAIm6B,eAOhCgM,GAAWj8C,UAAUizC,YAAc,SAAStxB,QAErCkxB,WAAalxB,GAMpBs6B,GAAWj8C,UAAUkzC,YAAc,kBAC1Bl0C,KAAK6zC,YAMdoJ,GAAWj8C,UAAUmzC,aAAe,SAASnxB,QAEtC8wB,YAAc9wB,GAMrBi6B,GAAWj8C,UAAUozC,aAAe,kBAC3Bp0C,KAAK8zC,aAMdmJ,GAAWj8C,UAAU08C,oBAAsB,SAASC,QAE7CJ,mBAAqBI,GAM5BV,GAAWj8C,UAAU48C,oBAAsB,kBAClC59C,KAAKu9C,oBAMdN,GAAWj8C,UAAU68C,gBAAkB,SAAST,GAC1CA,EAAat9C,GAAKE,KAAKm9C,eAAer9C,GACnCs9C,EAAar9C,GAAKC,KAAKm9C,eAAep9C,SACtCy3B,QAAQhf,UAAS,QACjBif,QAAQjf,UAAS,QACjB2kC,eAAiBC,IAI1BH,GAAWj8C,UAAU88C,gBAAkB,kBAC9B99C,KAAKm9C,gBAMdF,GAAWj8C,UAAU+8C,iBAAmB,SAAST,GAC3CA,GAAiBt9C,KAAKq9C,uBACnB7lB,QAAQhf,UAAS,QACjBif,QAAQjf,UAAS,QACjB6kC,gBAAkBC,IAI3BL,GAAWj8C,UAAUg9C,iBAAmB,kBAC/Bh+C,KAAKq9C,iBAGdJ,GAAWj8C,UAAUu3B,WAAa,kBACzBv4B,KAAKw3B,QAAQrW,eAGtB87B,GAAWj8C,UAAUw3B,WAAa,kBACzBx4B,KAAKy3B,QAAQtW,eAGtB87B,GAAWj8C,UAAUy3B,iBAAmB,SAASC,UACxC74B,EAAKiD,IAAI41B,EAAQ14B,KAAK2zC,kBAG/BsJ,GAAWj8C,UAAU23B,kBAAoB,SAASD,UACzCA,EAAS14B,KAAK4zC,kBAGvBqJ,GAAWj8C,UAAU43B,wBAA0B,SAASjH,QACjDggB,eAAiB3xC,KAAKw3B,QAAQ1a,QAAQ5L,iBACtC0gC,eAAiB5xC,KAAKy3B,QAAQ3a,QAAQ5L,iBACtC2gC,WAAa7xC,KAAKw3B,QAAQ7a,eAC1Bm1B,WAAa9xC,KAAKy3B,QAAQ9a,eAC1Bo1B,QAAU/xC,KAAKw3B,QAAQ3a,YACvBm1B,QAAUhyC,KAAKy3B,QAAQ5a,WAExBmK,EAAKhnB,KAAKw3B,QAAQxa,WAAWrN,EAC7B8kB,EAAKz0B,KAAKw3B,QAAQxa,WAAW/a,EAC7BmzB,EAAKp1B,KAAKw3B,QAAQza,WAAWvb,EAC7BkoB,EAAK1pB,KAAKw3B,QAAQza,WAAW5a,EAE7B8kB,EAAKjnB,KAAKy3B,QAAQza,WAAWrN,EAC7B+kB,EAAK10B,KAAKy3B,QAAQza,WAAW/a,EAC7BozB,EAAKr1B,KAAKy3B,QAAQ1a,WAAWvb,EAC7BooB,EAAK5pB,KAAKy3B,QAAQ1a,WAAW5a,EAE7B0wC,EAAKriC,EAAIlP,IAAImzB,GAAKqe,EAAKtiC,EAAIlP,IAAIozB,QAG9B+c,KAAOjhC,EAAIgD,QAAQq/B,EAAIhzC,EAAKiE,IAAI9D,KAAK2xC,sBACrCD,KAAOlhC,EAAIgD,QAAQs/B,EAAIjzC,EAAKiE,IAAI9D,KAAK4xC,qBAWtCtd,EAAKt0B,KAAK6xC,WACVtd,EAAKv0B,KAAK8xC,WACVllC,EAAK5M,KAAK+xC,QACVvd,EAAKx0B,KAAKgyC,QAEVjd,EAAI,IAAI7W,KACZ6W,EAAE5W,GAAGre,EAAIw0B,EAAKC,EAAK3nB,EAAK5M,KAAKyxC,KAAK1xC,EAAIC,KAAKyxC,KAAK1xC,EAAIy0B,EAAKx0B,KAAK0xC,KAAK3xC,EAC7DC,KAAK0xC,KAAK3xC,EAChBg1B,EAAE5W,GAAGpe,GAAK6M,EAAK5M,KAAKyxC,KAAK3xC,EAAIE,KAAKyxC,KAAK1xC,EAAIy0B,EAAKx0B,KAAK0xC,KAAK5xC,EAAIE,KAAK0xC,KAAK3xC,EACxEg1B,EAAE3W,GAAGte,EAAIi1B,EAAE5W,GAAGpe,EACdg1B,EAAE3W,GAAGre,EAAIu0B,EAAKC,EAAK3nB,EAAK5M,KAAKyxC,KAAK3xC,EAAIE,KAAKyxC,KAAK3xC,EAAI00B,EAAKx0B,KAAK0xC,KAAK5xC,EAC7DE,KAAK0xC,KAAK5xC,OAEXi0C,aAAehf,EAAE7Q,kBAEjB8vB,cAAgBpnC,EAAK4nB,EACtBx0B,KAAKg0C,cAAgB,SAClBA,cAAgB,EAAMh0C,KAAKg0C,oBAG7BwJ,cAAgB39C,EAAKwB,YACrBm8C,cAAch7C,WAAW,EAAGykB,EAAI,EAAGjnB,KAAK0xC,WACxC8L,cAAc76C,WAAW,EAAGqkB,EAAI,EAAGhnB,KAAKyxC,WACxC+L,cAAc36C,IAAI2N,EAAIgD,QAAQq/B,EAAI7yC,KAAKm9C,sBAEvCM,eAAiB/oB,EAAKD,EAAKz0B,KAAKq9C,gBAEjC1rB,EAAKO,aAAc,MAEhByhB,gBAAgB7wC,IAAI6uB,EAAKQ,cACzByhB,kBAAoBjiB,EAAKQ,YAE1B6C,EAAIn1B,EAAKyB,IAAItB,KAAK2zC,gBAAgB7zC,EAAGE,KAAK2zC,gBAAgB5zC,GAE9Dq1B,EAAGxyB,OAAO0xB,EAAIU,GACdtL,GAAM9c,GAAM/M,EAAK8D,MAAM3D,KAAKyxC,KAAMzc,GAAKh1B,KAAK4zC,kBAE5Cve,EAAG5yB,OAAO8xB,EAAIS,GACdpL,GAAM4K,GAAM30B,EAAK8D,MAAM3D,KAAK0xC,KAAM1c,GAAKh1B,KAAK4zC,4BAGvCD,gBAAgB7xC,eAChB8xC,iBAAmB,OAGrBpc,QAAQza,WAAWvb,EAAI4zB,OACvBoC,QAAQza,WAAW5a,EAAIunB,OACvB+N,QAAQ1a,WAAWvb,EAAI6zB,OACvBoC,QAAQ1a,WAAW5a,EAAIynB,GAG9BqzB,GAAWj8C,UAAU63B,yBAA2B,SAASlH,OACnDyD,EAAKp1B,KAAKw3B,QAAQza,WAAWvb,EAC7BkoB,EAAK1pB,KAAKw3B,QAAQza,WAAW5a,EAC7BkzB,EAAKr1B,KAAKy3B,QAAQ1a,WAAWvb,EAC7BooB,EAAK5pB,KAAKy3B,QAAQ1a,WAAW5a,EAE7BmyB,EAAKt0B,KAAK6xC,WAAYtd,EAAKv0B,KAAK8xC,WAChCllC,EAAK5M,KAAK+xC,QAASvd,EAAKx0B,KAAKgyC,QAE7BpiC,EAAI+hB,EAAK+K,GACTuhB,EAAQtsB,EAAK+G,OAIX4a,EAAO1pB,EAAKF,EAAKu0B,EAAQj+C,KAAKu9C,mBAAqBv9C,KAAKy9C,eACxDv6B,GAAWljB,KAAKg0C,cAAgBV,EAEhCe,EAAar0C,KAAK4zC,iBAClBU,EAAa1kC,EAAI5P,KAAK8zC,iBACrBF,iBAAmBl0C,EAAKoB,MAAMd,KAAK4zC,iBAAmB1wB,GACtDoxB,EAAYA,GAGjB5qB,GAAM9c,GAFNsW,EAAUljB,KAAK4zC,iBAAmBS,GAGlCzqB,GAAM4K,EAAKtR,GAKPowB,EAAOzzC,EAAKwB,QACXmB,WAAW,EAAG6yB,EAAI,EAAGx1B,EAAK8D,MAAMimB,EAAI5pB,KAAK0xC,OAC9C4B,EAAK3wC,WAAW,EAAGyyB,EAAI,EAAGv1B,EAAK8D,MAAM+lB,EAAI1pB,KAAKyxC,OAC9C6B,EAAK7wC,OAAOw7C,EAAQj+C,KAAKu9C,mBAAoBv9C,KAAKw9C,eAE9Ct6B,EAAUrjB,EAAKiE,IAAIoa,EAAM1K,QAAQxT,KAAK+zC,aAAcT,IACpDe,EAAax0C,EAAK0B,MAAMvB,KAAK2zC,sBAC5BA,gBAAgBrxC,IAAI4gB,GAErBoxB,EAAa1kC,EAAI5P,KAAK6zC,gBAErBF,gBAAgB7yC,MAAMwzC,GAE3BpxB,EAAUrjB,EAAKgD,IAAI7C,KAAK2zC,gBAAiBU,GAEzCjf,EAAGxyB,OAAO0xB,EAAIpR,GACdwG,GAAM9c,EAAK/M,EAAK8D,MAAM3D,KAAKyxC,KAAMvuB,GAEjCmS,EAAG5yB,OAAO8xB,EAAIrR,GACd0G,GAAM4K,EAAK30B,EAAK8D,MAAM3D,KAAK0xC,KAAMxuB,QAG9BsU,QAAQza,WAAWvb,EAAI4zB,OACvBoC,QAAQza,WAAW5a,EAAIunB,OACvB+N,QAAQ1a,WAAWvb,EAAI6zB,OACvBoC,QAAQ1a,WAAW5a,EAAIynB,GAG9BqzB,GAAWj8C,UAAU83B,yBAA2B,SAASnH,UAChD,GCxWTusB,GAAWlY,KAAO,cAClBzO,GAAMviB,MAAMkpC,GAAWlY,MAAQkY,GAE/BA,GAAWnY,OAASxO,GACpB2mB,GAAWl9C,UAAYjC,OAAOa,OAAOs+C,GAAWnY,OAAO/kC,WAmBvD,IAAIyvC,GAAW,CACb+C,SAAW,EACX9C,YAAc,EACdC,aAAe,IAgBjB,SAASuN,GAAWpnC,EAAK8a,EAAOC,EAAOgI,QAC/B75B,gBAAgBk+C,WACb,IAAIA,GAAWpnC,EAAK8a,EAAOC,EAAOgI,GAG3C/iB,EAAMC,EAAQD,EAAK25B,IACnBlZ,GAAMyM,KAAKhkC,KAAM8W,EAAK8a,EAAOC,GAC7BD,EAAQ5xB,KAAKw3B,QACb3F,EAAQ7xB,KAAKy3B,aAERhmB,OAASysC,GAAWlY,UAMpBmY,UAAYtkB,EAASh6B,EAAK0B,MAAMs4B,GAAU/iB,EAAI+iB,QAAUh6B,EAAKwB,YAC7D2vC,eAAiBpgC,EAAUgD,SAASie,EAAMpd,eAAgBzU,KAAKm+C,gBAE/DtK,WAAa/8B,EAAI08B,cACjBnC,UAAYxxC,EAAKwB,YAEjB8vC,cAAgBr6B,EAAI45B,iBACpBU,eAAiBt6B,EAAI65B,kBAErByN,OAAS,OACT9M,QAAU,OAGVI,KAAO7xC,EAAKwB,YACZuwC,eAAiB/xC,EAAKwB,YACtBywC,WAAa,OACbE,QAAU,OACVj0B,KAAO,IAAIG,OACXmgC,IAAMx+C,EAAKwB,OAWlB68C,GAAWl9C,UAAUC,WAAa,iBACzB,CACLmU,KAAMpV,KAAKyR,OACXmgB,MAAO5xB,KAAKw3B,QACZ3F,MAAO7xB,KAAKy3B,QACZE,iBAAkB33B,KAAKujB,mBAEvBsW,OAAQ75B,KAAKm+C,UACb3K,SAAUxzC,KAAK6zC,WACfnD,YAAa1wC,KAAKmxC,cAClBR,aAAc3wC,KAAKoxC,eAEnBkN,cAAet+C,KAAKgxC,iBAIxBkN,GAAWh9C,aAAe,SAASC,EAAMyZ,EAAO1F,IAC9C/T,EAAOpC,OAAOC,OAAO,GAAImC,IACpBywB,MAAQ1c,EAAQgG,EAAM/Z,EAAKywB,MAAOhX,GACvCzZ,EAAK0wB,MAAQ3c,EAAQgG,EAAM/Z,EAAK0wB,MAAOjX,GACvCzZ,EAAK04B,OAASh6B,EAAKsB,EAAK04B,YACpBvW,EAAQ,IAAI46B,GAAW/8C,UACvBA,EAAKm9C,gBACPh7B,EAAM0tB,eAAiB7vC,EAAKm9C,eAEvBh7B,GAMT46B,GAAWl9C,UAAUu9C,UAAY,SAAS1kB,GACV,GAA1B75B,KAAKy3B,QAAQ5W,gBACV4W,QAAQjf,UAAS,QAEnB2lC,UAAYt+C,EAAK0B,MAAMs4B,IAG9BqkB,GAAWl9C,UAAUw9C,UAAY,kBACxBx+C,KAAKm+C,WAMdD,GAAWl9C,UAAUizC,YAAc,SAAStxB,QACrCkxB,WAAalxB,GAGpBu7B,GAAWhK,YAAc,kBAChBl0C,KAAK6zC,YAMdqK,GAAWl9C,UAAUwxC,aAAe,SAASC,QACtCtB,cAAgBsB,GAGvByL,GAAWl9C,UAAU0xC,aAAe,kBAC3B1yC,KAAKmxC,eAMd+M,GAAWl9C,UAAU2xC,gBAAkB,SAAS3U,QACzCoT,eAAiBpT,GAGxBkgB,GAAWl9C,UAAU4xC,gBAAkB,kBAC9B5yC,KAAKoxC,gBAGd8M,GAAWl9C,UAAUu3B,WAAa,kBACzB14B,EAAK0B,MAAMvB,KAAKm+C,YAGzBD,GAAWl9C,UAAUw3B,WAAa,kBACzBx4B,KAAKy3B,QAAQ9V,cAAc3hB,KAAKgxC,iBAGzCkN,GAAWl9C,UAAUy3B,iBAAmB,SAASC,UACxC74B,EAAKiD,IAAI41B,EAAQ14B,KAAKqxC,YAG/B6M,GAAWl9C,UAAU23B,kBAAoB,SAASD,UAChC,EAATA,GAGTwlB,GAAWl9C,UAAU6N,YAAc,SAASC,QACrCqvC,UAAUt7C,IAAIiM,IAGrBovC,GAAWl9C,UAAU43B,wBAA0B,SAASjH,QACjDigB,eAAiB5xC,KAAKy3B,QAAQ3a,QAAQ5L,iBACtC4gC,WAAa9xC,KAAKy3B,QAAQ9a,eAC1Bq1B,QAAUhyC,KAAKy3B,QAAQ5a,WAExBhM,EAAW7Q,KAAKy3B,QAAQza,WACxByhC,EAAWz+C,KAAKy3B,QAAQ1a,WAExBkK,EAAKpW,EAASlB,EACd+kB,EAAK7jB,EAAS5O,EACdozB,EAAKopB,EAASj9C,EACdooB,EAAK60B,EAASt8C,EAEd2wC,EAAKtiC,EAAIlP,IAAIozB,GAEb3W,EAAO/d,KAAKy3B,QAAQnV,UAGpB4wB,EAAQ,EAAMxzC,EAAKyH,GAAKnH,KAAKmxC,cAG7B3oC,EAAI,EAAMuV,EAAO/d,KAAKoxC,eAAiB8B,EAGvCC,EAAIp1B,GAAQm1B,EAAQA,GAKpBtjC,EAAI+hB,EAAK+K,QAER4U,QAAU1hC,GAAKpH,EAAIoH,EAAIujC,GACR,GAAhBnzC,KAAKsxC,eACFA,QAAU,EAAMtxC,KAAKsxC,cAEvB8M,OAASxuC,EAAIujC,EAAInzC,KAAKsxC,aAGtBI,KAAOlhC,EAAIgD,QAAQs/B,EAAIjzC,EAAKgD,IAAI7C,KAAKgxC,eAAgBhxC,KAAK4xC,qBAO3D7c,EAAI,IAAI7W,EACZ6W,EAAE5W,GAAGre,EAAIE,KAAK8xC,WAAa9xC,KAAKgyC,QAAUhyC,KAAK0xC,KAAK3xC,EAAIC,KAAK0xC,KAAK3xC,EAC5DC,KAAKsxC,QACXvc,EAAE5W,GAAGpe,GAAKC,KAAKgyC,QAAUhyC,KAAK0xC,KAAK5xC,EAAIE,KAAK0xC,KAAK3xC,EACjDg1B,EAAE3W,GAAGte,EAAIi1B,EAAE5W,GAAGpe,EACdg1B,EAAE3W,GAAGre,EAAIC,KAAK8xC,WAAa9xC,KAAKgyC,QAAUhyC,KAAK0xC,KAAK5xC,EAAIE,KAAK0xC,KAAK5xC,EAC5DE,KAAKsxC,aAEN50B,OAASqY,EAAE7Q,kBAEXm6B,IAAIt8C,IAAIklB,QACRo3B,IAAI77C,WAAW,EAAGxC,KAAK0xC,MAAO,EAAG1xC,KAAKm+C,gBACtCE,IAAIv7C,IAAI9C,KAAKo+C,QAGlBx0B,GAAM,IAEF+H,EAAKO,mBACFmf,UAAUvuC,IAAI6uB,EAAKQ,SACxBkD,EAAG5yB,OAAOzC,KAAK8xC,WAAY9xC,KAAKqxC,WAChCznB,GAAM5pB,KAAKgyC,QAAUnyC,EAAK8D,MAAM3D,KAAK0xC,KAAM1xC,KAAKqxC,iBAG3CA,UAAUvvC,UAGjB28C,EAASj9C,EAAEO,IAAIszB,GACfopB,EAASt8C,EAAIynB,GAGfs0B,GAAWl9C,UAAU63B,yBAA2B,SAASlH,OACnD8sB,EAAWz+C,KAAKy3B,QAAQ1a,WACxBsY,EAAKx1B,EAAK0B,MAAMk9C,EAASj9C,GACzBooB,EAAK60B,EAASt8C,EAIdmxC,EAAOzzC,EAAK8D,MAAMimB,EAAI5pB,KAAK0xC,MAC/B4B,EAAKhxC,IAAI+yB,GAETie,EAAK9wC,WAAW,EAAGxC,KAAKq+C,IAAKr+C,KAAKsxC,QAAStxC,KAAKqxC,WAChDiC,EAAKxvC,UAEDof,EAAUhF,EAAM1K,QAAQxT,KAAK0c,OAAQ42B,GAErCe,EAAax0C,EAAK0B,MAAMvB,KAAKqxC,gBAC5BA,UAAU/uC,IAAI4gB,OACfoxB,EAAa3iB,EAAK+K,GAAK18B,KAAK6zC,gBAC3BxC,UAAUvwC,MAAMwzC,GACrBpxB,EAAUrjB,EAAKgD,IAAI7C,KAAKqxC,UAAWgD,GAEnChf,EAAG5yB,OAAOzC,KAAK8xC,WAAY5uB,GAC3B0G,GAAM5pB,KAAKgyC,QAAUnyC,EAAK8D,MAAM3D,KAAK0xC,KAAMxuB,GAE3Cu7B,EAASj9C,EAAEO,IAAIszB,GACfopB,EAASt8C,EAAIynB,GAGfs0B,GAAWl9C,UAAU83B,yBAA2B,SAASnH,UAChD,GC5RT+sB,GAAY1Y,KAAO,eACnB0Y,GAAYC,kBAAoB,EAChCpnB,GAAMviB,MAAM0pC,GAAY1Y,MAAQ0Y,GAEhCA,GAAY3Y,OAASxO,GACrBmnB,GAAY19C,UAAYjC,OAAOa,OAAO8+C,GAAY3Y,OAAO/kC,WAkBzD,IAAI49C,GAAiB,CACnBjnB,kBAAmB,GAkBrB,SAAS+mB,GAAY5nC,EAAK8a,EAAOC,EAAOgtB,EAASC,EAASlO,EAASC,EAAS7S,QACpEh+B,gBAAgB0+C,WACb,IAAIA,GAAY5nC,EAAK8a,EAAOC,EAAOgtB,EAASC,EAASlO,EAASC,EAAS7S,GAGhFlnB,EAAMC,EAAQD,EAAK8nC,IACnBrnB,GAAMyM,KAAKhkC,KAAM8W,EAAK8a,EAAOC,GAC7BD,EAAQ5xB,KAAKw3B,QACb3F,EAAQ7xB,KAAKy3B,aAERhmB,OAASitC,GAAY1Y,UACrB+Y,gBAAkBF,IAAoB/nC,EAAIkoC,eAAiBn/C,EAAKyB,KAAK,EAAK,SAC1E29C,gBAAkBH,IAAoBhoC,EAAIooC,eAAiBr/C,EAAKyB,IAAI,EAAK,SACzEwvC,eAAiBF,EAAUhf,EAAM7N,cAAc6sB,GAAW95B,EAAIi6B,cAAgBlxC,EAAKyB,KAAK,EAAK,QAC7F0vC,eAAiBH,EAAUhf,EAAM9N,cAAc8sB,GAAW/5B,EAAIm6B,cAAgBpxC,EAAKyB,IAAI,EAAK,QAC5F69C,UAAYz/C,EAAKS,SAAS2W,EAAIsoC,SAAWtoC,EAAIsoC,QAAUv/C,EAAKuD,SAASwtC,EAASiO,QAC9EQ,UAAY3/C,EAAKS,SAAS2W,EAAIwoC,SAAWxoC,EAAIwoC,QAAUz/C,EAAKuD,SAASytC,EAASiO,QAC9EtF,QAAU95C,EAAKS,SAAS69B,GAASA,EAAQlnB,EAAIknB,WAI7C2c,WAAa36C,KAAKm/C,UAAYn/C,KAAKw5C,QAAUx5C,KAAKq/C,eAElDhO,UAAY,OAGZkO,UACAC,UACA/N,UACAC,UACAC,oBACAC,oBACAC,gBACAC,gBACAC,aACAC,aACAt1B,OAgBPgiC,GAAY19C,UAAUC,WAAa,iBAC1B,CACLmU,KAAMpV,KAAKyR,OACXmgB,MAAO5xB,KAAKw3B,QACZ3F,MAAO7xB,KAAKy3B,QACZE,iBAAkB33B,KAAKujB,mBAEvBy7B,cAAeh/C,KAAK++C,gBACpBG,cAAel/C,KAAKi/C,gBACpBlO,aAAc/wC,KAAK8wC,eACnBG,aAAcjxC,KAAKgxC,eACnBoO,QAASp/C,KAAKm/C,UACdG,QAASt/C,KAAKq/C,UACdrhB,MAAOh+B,KAAKw5C,UAIhBkF,GAAYx9C,aAAe,SAASC,EAAMyZ,EAAO1F,UAC/C/T,EAAOpC,OAAOC,OAAO,GAAImC,IACpBywB,MAAQ1c,EAAQgG,EAAM/Z,EAAKywB,MAAOhX,GACvCzZ,EAAK0wB,MAAQ3c,EAAQgG,EAAM/Z,EAAK0wB,MAAOjX,GAC3B,IAAI8jC,GAAYv9C,IAO9Bu9C,GAAY19C,UAAUy+C,iBAAmB,kBAChCz/C,KAAK++C,iBAMdL,GAAY19C,UAAU0+C,iBAAmB,kBAChC1/C,KAAKi/C,iBAMdP,GAAY19C,UAAU2+C,WAAa,kBAC1B3/C,KAAKm/C,WAMdT,GAAY19C,UAAU4+C,WAAa,kBAC1B5/C,KAAKq/C,WAMdX,GAAY19C,UAAUi7C,SAAW,kBACxBj8C,KAAKw5C,SAMdkF,GAAY19C,UAAU6+C,kBAAoB,eACpCz1C,EAAIpK,KAAKw3B,QAAQ7V,cAAc3hB,KAAK8wC,gBACpCjmC,EAAI7K,KAAK++C,uBACNl/C,EAAKuD,SAASgH,EAAGS,IAM1B6zC,GAAY19C,UAAU8+C,kBAAoB,eACpC11C,EAAIpK,KAAKy3B,QAAQ9V,cAAc3hB,KAAKgxC,gBACpCnmC,EAAI7K,KAAKi/C,uBACNp/C,EAAKuD,SAASgH,EAAGS,IAG1B6zC,GAAY19C,UAAU6N,YAAc,SAASC,QACtCiwC,gBAAgBl8C,IAAIiM,QACpBmwC,gBAAgBp8C,IAAIiM,IAG3B4vC,GAAY19C,UAAUu3B,WAAa,kBAC1Bv4B,KAAKw3B,QAAQ7V,cAAc3hB,KAAK8wC,iBAGzC4N,GAAY19C,UAAUw3B,WAAa,kBAC1Bx4B,KAAKy3B,QAAQ9V,cAAc3hB,KAAKgxC,iBAGzC0N,GAAY19C,UAAUy3B,iBAAmB,SAASC,UACzC74B,EAAKiD,IAAI9C,KAAKqxC,UAAWrxC,KAAKw/C,MAAM18C,IAAI41B,IAGjDgmB,GAAY19C,UAAU23B,kBAAoB,SAASD,UAC1C,GAGTgmB,GAAY19C,UAAU43B,wBAA0B,SAASjH,QAClDggB,eAAiB3xC,KAAKw3B,QAAQ1a,QAAQ5L,iBACtC0gC,eAAiB5xC,KAAKy3B,QAAQ3a,QAAQ5L,iBACtC2gC,WAAa7xC,KAAKw3B,QAAQ7a,eAC1Bm1B,WAAa9xC,KAAKy3B,QAAQ9a,eAC1Bo1B,QAAU/xC,KAAKw3B,QAAQ3a,YACvBm1B,QAAUhyC,KAAKy3B,QAAQ5a,WAExBmK,EAAKhnB,KAAKw3B,QAAQxa,WAAWrN,EAC7B8kB,EAAKz0B,KAAKw3B,QAAQxa,WAAW/a,EAC7BmzB,EAAKp1B,KAAKw3B,QAAQza,WAAWvb,EAC7BkoB,EAAK1pB,KAAKw3B,QAAQza,WAAW5a,EAE7B8kB,EAAKjnB,KAAKy3B,QAAQza,WAAWrN,EAC7B+kB,EAAK10B,KAAKy3B,QAAQza,WAAW/a,EAC7BozB,EAAKr1B,KAAKy3B,QAAQ1a,WAAWvb,EAC7BooB,EAAK5pB,KAAKy3B,QAAQ1a,WAAW5a,EAE7B0wC,EAAKriC,EAAIlP,IAAImzB,GACbqe,EAAKtiC,EAAIlP,IAAIozB,QAEZ+c,KAAOjhC,EAAIgD,QAAQq/B,EAAIhzC,EAAKgD,IAAI7C,KAAK8wC,eAAgB9wC,KAAK2xC,sBAC1DD,KAAOlhC,EAAIgD,QAAQs/B,EAAIjzC,EAAKgD,IAAI7C,KAAKgxC,eAAgBhxC,KAAK4xC,sBAG1D2N,KAAO1/C,EAAKgD,IAAIhD,EAAKyC,IAAI0kB,EAAIhnB,KAAKyxC,MAAOzxC,KAAK++C,sBAC9CS,KAAO3/C,EAAKgD,IAAIhD,EAAKyC,IAAI2kB,EAAIjnB,KAAK0xC,MAAO1xC,KAAKi/C,qBAE/CG,EAAUp/C,KAAKu/C,KAAKjgD,SACpBggD,EAAUt/C,KAAKw/C,KAAKlgD,SAEpB8/C,EAAU,GAAO96C,EAAS0C,gBACvBu4C,KAAKz8C,IAAI,EAAMs8C,QAEfG,KAAKz9C,UAGRw9C,EAAU,GAAOh7C,EAAS0C,gBACvBw4C,KAAK18C,IAAI,EAAMw8C,QAEfE,KAAK19C,cAIRi+C,EAAMlgD,EAAK8D,MAAM3D,KAAKyxC,KAAMzxC,KAAKu/C,MACjCS,EAAMngD,EAAK8D,MAAM3D,KAAK0xC,KAAM1xC,KAAKw/C,MAEjClrB,EAAKt0B,KAAK6xC,WAAa7xC,KAAK+xC,QAAUgO,EAAMA,EAC5CxrB,EAAKv0B,KAAK8xC,WAAa9xC,KAAKgyC,QAAUgO,EAAMA,UAE3CtjC,OAAS4X,EAAKt0B,KAAKw5C,QAAUx5C,KAAKw5C,QAAUjlB,EAE7Cv0B,KAAK0c,OAAS,SACXA,OAAS,EAAM1c,KAAK0c,QAGvBiV,EAAKO,aAAc,MAEhBmf,WAAa1f,EAAKQ,YAGnB8tB,EAAKpgD,EAAKiD,KAAK9C,KAAKqxC,UAAWrxC,KAAKu/C,MACpCW,EAAKrgD,EAAKiD,KAAK9C,KAAKw5C,QAAUx5C,KAAKqxC,UAAWrxC,KAAKw/C,MAEvDpqB,EAAG3yB,OAAOzC,KAAK6xC,WAAYoO,GAC3Bv2B,GAAM1pB,KAAK+xC,QAAUlyC,EAAK8D,MAAM3D,KAAKyxC,KAAMwO,GAE3C5qB,EAAG5yB,OAAOzC,KAAK8xC,WAAYoO,GAC3Bt2B,GAAM5pB,KAAKgyC,QAAUnyC,EAAK8D,MAAM3D,KAAK0xC,KAAMwO,aAGtC7O,UAAY,OAGd7Z,QAAQza,WAAWvb,EAAI4zB,OACvBoC,QAAQza,WAAW5a,EAAIunB,OACvB+N,QAAQ1a,WAAWvb,EAAI6zB,OACvBoC,QAAQ1a,WAAW5a,EAAIynB,GAG9B80B,GAAY19C,UAAU63B,yBAA2B,SAASlH,OACpDyD,EAAKp1B,KAAKw3B,QAAQza,WAAWvb,EAC7BkoB,EAAK1pB,KAAKw3B,QAAQza,WAAW5a,EAC7BkzB,EAAKr1B,KAAKy3B,QAAQ1a,WAAWvb,EAC7BooB,EAAK5pB,KAAKy3B,QAAQ1a,WAAW5a,EAE7BixC,EAAMvzC,EAAKyC,IAAI8yB,EAAIv1B,EAAK8D,MAAM+lB,EAAI1pB,KAAKyxC,OACvC4B,EAAMxzC,EAAKyC,IAAI+yB,EAAIx1B,EAAK8D,MAAMimB,EAAI5pB,KAAK0xC,OAEvC4B,GAAQzzC,EAAK6D,IAAI1D,KAAKu/C,KAAMnM,GAAOpzC,KAAKw5C,QACtC35C,EAAK6D,IAAI1D,KAAKw/C,KAAMnM,GACtBnwB,GAAWljB,KAAK0c,OAAS42B,OACxBjC,WAAanuB,MAEd+8B,EAAKpgD,EAAKiD,KAAKogB,EAASljB,KAAKu/C,MAC7BW,EAAKrgD,EAAKiD,KAAK9C,KAAKw5C,QAAUt2B,EAASljB,KAAKw/C,MAChDpqB,EAAG3yB,OAAOzC,KAAK6xC,WAAYoO,GAC3Bv2B,GAAM1pB,KAAK+xC,QAAUlyC,EAAK8D,MAAM3D,KAAKyxC,KAAMwO,GAC3C5qB,EAAG5yB,OAAOzC,KAAK8xC,WAAYoO,GAC3Bt2B,GAAM5pB,KAAKgyC,QAAUnyC,EAAK8D,MAAM3D,KAAK0xC,KAAMwO,QAEtC1oB,QAAQza,WAAWvb,EAAI4zB,OACvBoC,QAAQza,WAAW5a,EAAIunB,OACvB+N,QAAQ1a,WAAWvb,EAAI6zB,OACvBoC,QAAQ1a,WAAW5a,EAAIynB,GAG9B80B,GAAY19C,UAAU83B,yBAA2B,SAASnH,OACpD3K,EAAKhnB,KAAKw3B,QAAQxa,WAAWrN,EAC7B8kB,EAAKz0B,KAAKw3B,QAAQxa,WAAW/a,EAC7BglB,EAAKjnB,KAAKy3B,QAAQza,WAAWrN,EAC7B+kB,EAAK10B,KAAKy3B,QAAQza,WAAW/a,EAE7B4wC,EAAKriC,EAAIlP,IAAImzB,GAAKqe,EAAKtiC,EAAIlP,IAAIozB,GAE/BxK,EAAK1Z,EAAIgD,QAAQq/B,EAAIhzC,EAAKgD,IAAI7C,KAAK8wC,eAAgB9wC,KAAK2xC,iBACxDxnB,EAAK3Z,EAAIgD,QAAQs/B,EAAIjzC,EAAKgD,IAAI7C,KAAKgxC,eAAgBhxC,KAAK4xC,iBAGxDuO,EAAKtgD,EAAKgD,IAAIhD,EAAKyC,IAAI0kB,EAAIhnB,KAAKyxC,MAAOzxC,KAAK++C,iBAC5CqB,EAAKvgD,EAAKgD,IAAIhD,EAAKyC,IAAI2kB,EAAIjnB,KAAK0xC,MAAO1xC,KAAKi/C,iBAE5CG,EAAUe,EAAG7gD,SACbggD,EAAUc,EAAG9gD,SAEb8/C,EAAU,GAAO96C,EAAS0C,WAC5Bm5C,EAAGr9C,IAAI,EAAMs8C,GAEbe,EAAGr+C,UAGDw9C,EAAU,GAAOh7C,EAAS0C,WAC5Bo5C,EAAGt9C,IAAI,EAAMw8C,GAEbc,EAAGt+C,cAIDi+C,EAAMlgD,EAAK8D,MAAMumB,EAAIi2B,GACrBH,EAAMngD,EAAK8D,MAAMwmB,EAAIi2B,GAErB9rB,EAAKt0B,KAAK6xC,WAAa7xC,KAAK+xC,QAAUgO,EAAMA,EAC5CxrB,EAAKv0B,KAAK8xC,WAAa9xC,KAAKgyC,QAAUgO,EAAMA,EAE5CjiC,EAAOuW,EAAKt0B,KAAKw5C,QAAUx5C,KAAKw5C,QAAUjlB,EAE1CxW,EAAO,IACTA,EAAO,EAAMA,OAGXhR,EAAI/M,KAAK26C,WAAayE,EAAUp/C,KAAKw5C,QAAU8F,EAC/CxG,EAAcp5C,EAAKqE,IAAIgJ,GAEvBmW,GAAWnF,EAAOhR,EAElBkzC,EAAKpgD,EAAKiD,KAAKogB,EAASi9B,GACxBD,EAAKrgD,EAAKiD,KAAK9C,KAAKw5C,QAAUt2B,EAASk9B,UAE3Cp5B,EAAGvkB,OAAOzC,KAAK6xC,WAAYoO,GAC3BxrB,GAAMz0B,KAAK+xC,QAAUlyC,EAAK8D,MAAMumB,EAAI+1B,GACpCh5B,EAAGxkB,OAAOzC,KAAK8xC,WAAYoO,GAC3BxrB,GAAM10B,KAAKgyC,QAAUnyC,EAAK8D,MAAMwmB,EAAI+1B,QAE/B1oB,QAAQxa,WAAWrN,EAAIqX,OACvBwQ,QAAQxa,WAAW/a,EAAIwyB,OACvBgD,QAAQza,WAAWrN,EAAIsX,OACvBwQ,QAAQza,WAAW/a,EAAIyyB,EAErBokB,EAAcx0C,EAAS0C,YCrWhCq5C,GAAUra,KAAO,aACjBzO,GAAMviB,MAAMqrC,GAAUra,MAAQqa,GAE9BA,GAAUta,OAASxO,GACnB8oB,GAAUr/C,UAAYjC,OAAOa,OAAOygD,GAAUta,OAAO/kC,WAgBrD,IAAIyvC,GAAW,CACb6P,UAAY,GAkBd,SAASD,GAAUvpC,EAAK8a,EAAOC,EAAO6hB,QAC9B1zC,gBAAgBqgD,WACb,IAAIA,GAAUvpC,EAAK8a,EAAOC,EAAO6hB,GAG1C58B,EAAMC,EAAQD,EAAK25B,IACnBlZ,GAAMyM,KAAKhkC,KAAM8W,EAAK8a,EAAOC,GAC7BD,EAAQ5xB,KAAKw3B,QACb3F,EAAQ7xB,KAAKy3B,aAERhmB,OAAS4uC,GAAUra,UACnB8K,eAAiB4C,EAAS9hB,EAAM7N,cAAc2vB,GAAU58B,EAAIi6B,cAAgBlxC,EAAKyB,KAAK,EAAK,QAC3F0vC,eAAiB0C,EAAS7hB,EAAM9N,cAAc2vB,GAAU58B,EAAIm6B,cAAgBpxC,EAAKyB,IAAI,EAAK,QAE1Fi/C,YAAczpC,EAAIwpC,eAElB5jC,OAAS,OACT20B,UAAY,OACZH,SAAW,OACXsP,QA/Da,OAkEbhP,SACAC,UACAC,UACAC,oBACAC,oBACAC,gBACAC,gBACAC,aACAC,aACAt1B,OAWP2jC,GAAUr/C,UAAUC,WAAa,iBACxB,CACLmU,KAAMpV,KAAKyR,OACXmgB,MAAO5xB,KAAKw3B,QACZ3F,MAAO7xB,KAAKy3B,QACZE,iBAAkB33B,KAAKujB,mBAEvBwtB,aAAc/wC,KAAK8wC,eACnBG,aAAcjxC,KAAKgxC,eACnBsP,UAAWtgD,KAAKugD,cAIpBF,GAAUn/C,aAAe,SAASC,EAAMyZ,EAAO1F,UAC7C/T,EAAOpC,OAAOC,OAAO,GAAImC,IACpBywB,MAAQ1c,EAAQgG,EAAM/Z,EAAKywB,MAAOhX,GACvCzZ,EAAK0wB,MAAQ3c,EAAQgG,EAAM/Z,EAAK0wB,MAAOjX,GAC3B,IAAIylC,GAAUl/C,IAO5Bk/C,GAAUr/C,UAAUoxC,gBAAkB,kBAC7BpyC,KAAK8wC,gBAMduP,GAAUr/C,UAAUqxC,gBAAkB,kBAC7BryC,KAAKgxC,gBAMdqP,GAAUr/C,UAAUy/C,aAAe,SAASnhD,QACrCihD,YAAcjhD,GAGrB+gD,GAAUr/C,UAAU0/C,aAAe,kBAC1B1gD,KAAKugD,aAGdF,GAAUr/C,UAAU2/C,cAAgB,kBAE3B3gD,KAAKwgD,SAGdH,GAAUr/C,UAAUu3B,WAAa,kBACxBv4B,KAAKw3B,QAAQ7V,cAAc3hB,KAAK8wC,iBAGzCuP,GAAUr/C,UAAUw3B,WAAa,kBACxBx4B,KAAKy3B,QAAQ9V,cAAc3hB,KAAKgxC,iBAGzCqP,GAAUr/C,UAAUy3B,iBAAmB,SAASC,UACvC74B,EAAKiD,IAAI9C,KAAKqxC,UAAWrxC,KAAKwxC,KAAK1uC,IAAI41B,IAGhD2nB,GAAUr/C,UAAU23B,kBAAoB,SAASD,UACxC,GAGT2nB,GAAUr/C,UAAU43B,wBAA0B,SAASjH,QAChDggB,eAAiB3xC,KAAKw3B,QAAQ1a,QAAQ5L,iBACtC0gC,eAAiB5xC,KAAKy3B,QAAQ3a,QAAQ5L,iBACtC2gC,WAAa7xC,KAAKw3B,QAAQ7a,eAC1Bm1B,WAAa9xC,KAAKy3B,QAAQ9a,eAC1Bo1B,QAAU/xC,KAAKw3B,QAAQ3a,YACvBm1B,QAAUhyC,KAAKy3B,QAAQ5a,WAExBmK,EAAKhnB,KAAKw3B,QAAQxa,WAAWrN,EAC7B8kB,EAAKz0B,KAAKw3B,QAAQxa,WAAW/a,EAC7BmzB,EAAKp1B,KAAKw3B,QAAQza,WAAWvb,EAC7BkoB,EAAK1pB,KAAKw3B,QAAQza,WAAW5a,EAE7B8kB,EAAKjnB,KAAKy3B,QAAQza,WAAWrN,EAC7B+kB,EAAK10B,KAAKy3B,QAAQza,WAAW/a,EAC7BozB,EAAKr1B,KAAKy3B,QAAQ1a,WAAWvb,EAC7BooB,EAAK5pB,KAAKy3B,QAAQ1a,WAAW5a,EAE7B0wC,EAAKriC,EAAIlP,IAAImzB,GACbqe,EAAKtiC,EAAIlP,IAAIozB,QAEZ+c,KAAOjhC,EAAIiD,OAAOo/B,EAAI7yC,KAAK8wC,eAAgB9wC,KAAK2xC,qBAChDD,KAAOlhC,EAAIiD,OAAOq/B,EAAI9yC,KAAKgxC,eAAgBhxC,KAAK4xC,qBAChDJ,IAAM3xC,EAAKwB,YACXmwC,IAAIhvC,WAAW,EAAGykB,EAAI,EAAGjnB,KAAK0xC,WAC9BF,IAAI7uC,WAAW,EAAGqkB,EAAI,EAAGhnB,KAAKyxC,WAE9BP,SAAWlxC,KAAKwxC,IAAIlyC,aAErByN,EAAI/M,KAAKkxC,SAAWlxC,KAAKugD,oBAEtBC,QADHzzC,EAAI,EArLS,EAFC,IA6Ld/M,KAAKkxC,SAAW5sC,EAAS0C,wBAGtBwqC,IAAI1vC,eACJ4a,OAAS,YACT20B,UAAY,QAJZG,IAAI1uC,IAAI,EAAM9C,KAAKkxC,cAStB0P,EAAM/gD,EAAK8D,MAAM3D,KAAKyxC,KAAMzxC,KAAKwxC,KACjCqP,EAAMhhD,EAAK8D,MAAM3D,KAAK0xC,KAAM1xC,KAAKwxC,KACjCyB,EAAUjzC,KAAK6xC,WAAa7xC,KAAK+xC,QAAU6O,EAAMA,EAAM5gD,KAAK8xC,WAC1D9xC,KAAKgyC,QAAU6O,EAAMA,UAEtBnkC,OAAoB,GAAXu2B,EAAiB,EAAMA,EAAU,EAE3CthB,EAAKO,aAAc,MAEhBmf,WAAa1f,EAAKQ,YAEnB6C,EAAIn1B,EAAKiD,IAAI9C,KAAKqxC,UAAWrxC,KAAKwxC,KAEtCpc,EAAGxyB,OAAO5C,KAAK6xC,WAAY7c,GAC3BtL,GAAM1pB,KAAK+xC,QAAUlyC,EAAK8D,MAAM3D,KAAKyxC,KAAMzc,GAE3CK,EAAG5yB,OAAOzC,KAAK8xC,WAAY9c,GAC3BpL,GAAM5pB,KAAKgyC,QAAUnyC,EAAK8D,MAAM3D,KAAK0xC,KAAM1c,aAGtCqc,UAAY,OAGd7Z,QAAQza,WAAWvb,EAAEO,IAAIqzB,QACzBoC,QAAQza,WAAW5a,EAAIunB,OACvB+N,QAAQ1a,WAAWvb,EAAEO,IAAIszB,QACzBoC,QAAQ1a,WAAW5a,EAAIynB,GAG9By2B,GAAUr/C,UAAU63B,yBAA2B,SAASlH,OAClDyD,EAAKp1B,KAAKw3B,QAAQza,WAAWvb,EAC7BkoB,EAAK1pB,KAAKw3B,QAAQza,WAAW5a,EAC7BkzB,EAAKr1B,KAAKy3B,QAAQ1a,WAAWvb,EAC7BooB,EAAK5pB,KAAKy3B,QAAQ1a,WAAW5a,EAG7BixC,EAAMvzC,EAAK+D,SAASwxB,EAAI1L,EAAI1pB,KAAKyxC,MACjC4B,EAAMxzC,EAAK+D,SAASyxB,EAAIzL,EAAI5pB,KAAK0xC,MACjC3kC,EAAI/M,KAAKkxC,SAAWlxC,KAAKugD,YACzBjN,EAAOzzC,EAAK6D,IAAI1D,KAAKwxC,IAAK3xC,EAAKgD,IAAIwwC,EAAKD,IAGxCrmC,EAAI,IACNumC,GAAQ3hB,EAAK+G,OAAS3rB,OAGpBmW,GAAWljB,KAAK0c,OAAS42B,EACzBe,EAAar0C,KAAKqxC,eACjBA,UAAY3xC,EAAKkB,IAAI,EAAKZ,KAAKqxC,UAAYnuB,GAChDA,EAAUljB,KAAKqxC,UAAYgD,MAEvBrf,EAAIn1B,EAAKiD,IAAIogB,EAASljB,KAAKwxC,KAC/Bpc,EAAGxyB,OAAO5C,KAAK6xC,WAAY7c,GAC3BtL,GAAM1pB,KAAK+xC,QAAUlyC,EAAK8D,MAAM3D,KAAKyxC,KAAMzc,GAC3CK,EAAG5yB,OAAOzC,KAAK8xC,WAAY9c,GAC3BpL,GAAM5pB,KAAKgyC,QAAUnyC,EAAK8D,MAAM3D,KAAK0xC,KAAM1c,QAEtCwC,QAAQza,WAAWvb,EAAI4zB,OACvBoC,QAAQza,WAAW5a,EAAIunB,OACvB+N,QAAQ1a,WAAWvb,EAAI6zB,OACvBoC,QAAQ1a,WAAW5a,EAAIynB,GAG9By2B,GAAUr/C,UAAU83B,yBAA2B,SAASnH,OAClD3K,EAAKhnB,KAAKw3B,QAAQxa,WAAWrN,EAC7B8kB,EAAKz0B,KAAKw3B,QAAQxa,WAAW/a,EAC7BglB,EAAKjnB,KAAKy3B,QAAQza,WAAWrN,EAC7B+kB,EAAK10B,KAAKy3B,QAAQza,WAAW/a,EAE7B4wC,EAAKriC,EAAIlP,IAAImzB,GACbqe,EAAKtiC,EAAIlP,IAAIozB,GAEbxK,EAAK1Z,EAAIiD,OAAOo/B,EAAI7yC,KAAK8wC,eAAgB9wC,KAAK2xC,gBAC9CxnB,EAAK3Z,EAAIiD,OAAOq/B,EAAI9yC,KAAKgxC,eAAgBhxC,KAAK4xC,gBAC9CvJ,EAAIxoC,EAAKwB,OACbgnC,EAAE7lC,WAAW,EAAGykB,EAAI,EAAGkD,GACvBke,EAAE1lC,WAAW,EAAGqkB,EAAI,EAAGkD,OAEnB5qB,EAAS+oC,EAAEnlC,YACX6J,EAAIzN,EAASU,KAAKugD,YAEtBxzC,EAAIrN,EAAKoB,MAAMiM,EAAG,EAAKzI,EAASoD,yBAE5Bwb,GAAWljB,KAAK0c,OAAS3P,EACzBioB,EAAIn1B,EAAKiD,IAAIogB,EAASmlB,UAE1BrhB,EAAGpkB,OAAO5C,KAAK6xC,WAAY7c,GAC3BP,GAAMz0B,KAAK+xC,QAAUlyC,EAAK8D,MAAMumB,EAAI8K,GACpC/N,EAAGxkB,OAAOzC,KAAK8xC,WAAY9c,GAC3BN,GAAM10B,KAAKgyC,QAAUnyC,EAAK8D,MAAMwmB,EAAI6K,QAE/BwC,QAAQxa,WAAWrN,EAAE5N,IAAIilB,QACzBwQ,QAAQxa,WAAW/a,EAAIwyB,OACvBgD,QAAQza,WAAWrN,EAAE5N,IAAIklB,QACzBwQ,QAAQza,WAAW/a,EAAIyyB,EAErBp1B,EAASU,KAAKugD,YAAcj8C,EAAS0C,YCvS9C85C,GAAU9a,KAAO,aACjBzO,GAAMviB,MAAM8rC,GAAU9a,MAAQ8a,GAE9BA,GAAU/a,OAASxO,GACnBupB,GAAU9/C,UAAYjC,OAAOa,OAAOkhD,GAAU/a,OAAO/kC,WAmBrD,IAAIyvC,GAAW,CACbC,YAAc,EACdC,aAAe,GAWjB,SAASmQ,GAAUhqC,EAAK8a,EAAOC,EAAO6hB,QAC9B1zC,gBAAgB8gD,WACb,IAAIA,GAAUhqC,EAAK8a,EAAOC,EAAO6hB,GAG1C58B,EAAMC,EAAQD,EAAK25B,IACnBlZ,GAAMyM,KAAKhkC,KAAM8W,EAAK8a,EAAOC,GAC7BD,EAAQ5xB,KAAKw3B,QACb3F,EAAQ7xB,KAAKy3B,aAERhmB,OAASqvC,GAAU9a,UAEnB8K,eAAiBjxC,EAAK0B,MAAMmyC,EAAS9hB,EAAM7N,cAAc2vB,GAAU58B,EAAIi6B,cAAgBlxC,EAAKwB,aAC5F2vC,eAAiBnxC,EAAK0B,MAAMmyC,EAAS7hB,EAAM9N,cAAc2vB,GAAU58B,EAAIm6B,cAAgBpxC,EAAKwB,aAC5FyzC,iBAAmBp1C,EAAKS,SAAS2W,EAAIi+B,gBAAkBj+B,EAAIi+B,eAAiBljB,EAAM3e,WAAa0e,EAAM1e,gBAErGi+B,cAAgBr6B,EAAI45B,iBACpBU,eAAiBt6B,EAAI65B,kBAErBU,UAAY7pB,SAEZ+pB,OAAS,OACTD,QAAU,OAGVG,UACAC,UACAC,oBACAC,oBACAC,gBACAC,gBACAC,aACAC,aACAt1B,OAAS,IAAIgL,EAiBpBo5B,GAAU9/C,UAAUC,WAAa,iBACxB,CACLmU,KAAMpV,KAAKyR,OACXmgB,MAAO5xB,KAAKw3B,QACZ3F,MAAO7xB,KAAKy3B,QACZE,iBAAkB33B,KAAKujB,mBAEvBmtB,YAAa1wC,KAAKmxC,cAClBR,aAAc3wC,KAAKoxC,eAEnBL,aAAc/wC,KAAK8wC,eACnBG,aAAcjxC,KAAKgxC,eACnB+D,eAAgB/0C,KAAK80C,mBAIzBgM,GAAU5/C,aAAe,SAASC,EAAMyZ,EAAO1F,UAC7C/T,EAAOpC,OAAOC,OAAO,GAAImC,IACpBywB,MAAQ1c,EAAQgG,EAAM/Z,EAAKywB,MAAOhX,GACvCzZ,EAAK0wB,MAAQ3c,EAAQgG,EAAM/Z,EAAK0wB,MAAOjX,GAC3B,IAAIkmC,GAAU3/C,IAO5B2/C,GAAU9/C,UAAUmxC,YAAc,SAASr7B,GACrCA,EAAI85B,aACDE,eAAe/uC,IAAI/B,KAAKw3B,QAAQzT,cAAcjN,EAAI85B,UAC9C95B,EAAIi6B,mBACRD,eAAe/uC,IAAI+U,EAAIi6B,cAG1Bj6B,EAAI+5B,aACDG,eAAejvC,IAAI/B,KAAKy3B,QAAQ1T,cAAcjN,EAAI+5B,UAC9C/5B,EAAIm6B,mBACRD,eAAejvC,IAAI+U,EAAIm6B,eAOhC6P,GAAU9/C,UAAUoxC,gBAAkB,kBAC7BpyC,KAAK8wC,gBAMdgQ,GAAU9/C,UAAUqxC,gBAAkB,kBAC7BryC,KAAKgxC,gBAMd8P,GAAU9/C,UAAUy0C,kBAAoB,kBAC/Bz1C,KAAK80C,kBAMdgM,GAAU9/C,UAAUwxC,aAAe,SAASC,QACrCtB,cAAgBsB,GAGvBqO,GAAU9/C,UAAU0xC,aAAe,kBAC1B1yC,KAAKmxC,eAMd2P,GAAU9/C,UAAU2xC,gBAAkB,SAAS3U,QACxCoT,eAAiBpT,GAGxB8iB,GAAU9/C,UAAU4xC,gBAAkB,kBAC7B5yC,KAAKoxC,gBAGd0P,GAAU9/C,UAAUu3B,WAAa,kBACxBv4B,KAAKw3B,QAAQ7V,cAAc3hB,KAAK8wC,iBAGzCgQ,GAAU9/C,UAAUw3B,WAAa,kBACxBx4B,KAAKy3B,QAAQ9V,cAAc3hB,KAAKgxC,iBAGzC8P,GAAU9/C,UAAUy3B,iBAAmB,SAASC,UACvC74B,EAAKyB,IAAItB,KAAKqxC,UAAUvxC,EAAGE,KAAKqxC,UAAUtxC,GAAG+C,IAAI41B,IAG1DooB,GAAU9/C,UAAU23B,kBAAoB,SAASD,UACxCA,EAAS14B,KAAKqxC,UAAU5pB,GAGjCq5B,GAAU9/C,UAAU43B,wBAA0B,SAASjH,QAChDggB,eAAiB3xC,KAAKw3B,QAAQ1a,QAAQ5L,iBACtC0gC,eAAiB5xC,KAAKy3B,QAAQ3a,QAAQ5L,iBACtC2gC,WAAa7xC,KAAKw3B,QAAQ7a,eAC1Bm1B,WAAa9xC,KAAKy3B,QAAQ9a,eAC1Bo1B,QAAU/xC,KAAKw3B,QAAQ3a,YACvBm1B,QAAUhyC,KAAKy3B,QAAQ5a,WAExB4X,EAAKz0B,KAAKw3B,QAAQxa,WAAW/a,EAC7BmzB,EAAKp1B,KAAKw3B,QAAQza,WAAWvb,EAC7BkoB,EAAK1pB,KAAKw3B,QAAQza,WAAW5a,EAE7BuyB,EAAK10B,KAAKy3B,QAAQza,WAAW/a,EAC7BozB,EAAKr1B,KAAKy3B,QAAQ1a,WAAWvb,EAC7BooB,EAAK5pB,KAAKy3B,QAAQ1a,WAAW5a,EAE7B0wC,EAAKriC,EAAIlP,IAAImzB,GAAKqe,EAAKtiC,EAAIlP,IAAIozB,QAE9B+c,KAAOjhC,EAAIgD,QAAQq/B,EAAIhzC,EAAKgD,IAAI7C,KAAK8wC,eAAgB9wC,KAAK2xC,sBAC1DD,KAAOlhC,EAAIgD,QAAQs/B,EAAIjzC,EAAKgD,IAAI7C,KAAKgxC,eAAgBhxC,KAAK4xC,qBAW3Dtd,EAAKt0B,KAAK6xC,WACVtd,EAAKv0B,KAAK8xC,WACVllC,EAAK5M,KAAK+xC,QACVvd,EAAKx0B,KAAKgyC,QAEVjd,EAAI,IAAIrN,KACZqN,EAAE5W,GAAGre,EAAIw0B,EAAKC,EAAKv0B,KAAKyxC,KAAK1xC,EAAIC,KAAKyxC,KAAK1xC,EAAI6M,EAAK5M,KAAK0xC,KAAK3xC,EAAIC,KAAK0xC,KAAK3xC,EACtEy0B,EACNO,EAAE3W,GAAGte,GAAKE,KAAKyxC,KAAK1xC,EAAIC,KAAKyxC,KAAK3xC,EAAI8M,EAAK5M,KAAK0xC,KAAK3xC,EAAIC,KAAK0xC,KAAK5xC,EAAI00B,EACvEO,EAAEpN,GAAG7nB,GAAKE,KAAKyxC,KAAK1xC,EAAI6M,EAAK5M,KAAK0xC,KAAK3xC,EAAIy0B,EAC3CO,EAAE5W,GAAGpe,EAAIg1B,EAAE3W,GAAGte,EACdi1B,EAAE3W,GAAGre,EAAIu0B,EAAKC,EAAKv0B,KAAKyxC,KAAK3xC,EAAIE,KAAKyxC,KAAK3xC,EAAI8M,EAAK5M,KAAK0xC,KAAK5xC,EAAIE,KAAK0xC,KAAK5xC,EACtE00B,EACNO,EAAEpN,GAAG5nB,EAAIC,KAAKyxC,KAAK3xC,EAAI8M,EAAK5M,KAAK0xC,KAAK5xC,EAAI00B,EAC1CO,EAAE5W,GAAGsJ,EAAIsN,EAAEpN,GAAG7nB,EACdi1B,EAAE3W,GAAGqJ,EAAIsN,EAAEpN,GAAG5nB,EACdg1B,EAAEpN,GAAGF,EAAI7a,EAAK4nB,EAEVx0B,KAAKmxC,cAAgB,EAAK,CAC5Bpc,EAAEvG,aAAaxuB,KAAK0c,YAEhBqkC,EAAOn0C,EAAK4nB,EACZzxB,EAAIg+C,EAAO,EAAM,EAAMA,EAAO,EAE9Bh0C,EAAI2nB,EAAKD,EAAKz0B,KAAK80C,iBAGnB5B,EAAQ,EAAMxzC,EAAKyH,GAAKnH,KAAKmxC,cAG7B3oC,EAAI,EAAMzF,EAAI/C,KAAKoxC,eAAiB8B,EAGpCC,EAAIpwC,EAAImwC,EAAQA,EAGhBtjC,EAAI+hB,EAAK+K,QACR4U,QAAU1hC,GAAKpH,EAAIoH,EAAIujC,QACvB7B,QAA0B,GAAhBtxC,KAAKsxC,QAAiB,EAAMtxC,KAAKsxC,QAAU,OACrDC,OAASxkC,EAAI6C,EAAIujC,EAAInzC,KAAKsxC,QAE/ByP,GAAQ/gD,KAAKsxC,aACR50B,OAAOiL,GAAGF,EAAY,GAARs5B,EAAc,EAAMA,EAAO,OAC3B,GAAVhsB,EAAEpN,GAAGF,GACdsN,EAAEvG,aAAaxuB,KAAK0c,aACf40B,QAAU,OACVC,OAAS,IAEdxc,EAAErG,gBAAgB1uB,KAAK0c,aAClB40B,QAAU,OACVC,OAAS,MAGZ5f,EAAKO,aAAc,MAEhBmf,UAAUvuC,IAAI6uB,EAAKQ,aAEpB6C,EAAIn1B,EAAKyB,IAAItB,KAAKqxC,UAAUvxC,EAAGE,KAAKqxC,UAAUtxC,GAElDq1B,EAAGxyB,OAAO0xB,EAAIU,GACdtL,GAAM9c,GAAM/M,EAAK8D,MAAM3D,KAAKyxC,KAAMzc,GAAKh1B,KAAKqxC,UAAU5pB,GAEtD4N,EAAG5yB,OAAO8xB,EAAIS,GACdpL,GAAM4K,GAAM30B,EAAK8D,MAAM3D,KAAK0xC,KAAM1c,GAAKh1B,KAAKqxC,UAAU5pB,aAGjD4pB,UAAUvvC,eAGZ01B,QAAQza,WAAWvb,EAAI4zB,OACvBoC,QAAQza,WAAW5a,EAAIunB,OACvB+N,QAAQ1a,WAAWvb,EAAI6zB,OACvBoC,QAAQ1a,WAAW5a,EAAIynB,GAG9Bk3B,GAAU9/C,UAAU63B,yBAA2B,SAASlH,OAClDyD,EAAKp1B,KAAKw3B,QAAQza,WAAWvb,EAC7BkoB,EAAK1pB,KAAKw3B,QAAQza,WAAW5a,EAC7BkzB,EAAKr1B,KAAKy3B,QAAQ1a,WAAWvb,EAC7BooB,EAAK5pB,KAAKy3B,QAAQ1a,WAAW5a,EAE7BmyB,EAAKt0B,KAAK6xC,WACVtd,EAAKv0B,KAAK8xC,WACVllC,EAAK5M,KAAK+xC,QACVvd,EAAKx0B,KAAKgyC,WAEVhyC,KAAKmxC,cAAgB,EAAK,KACxBqF,EAAQ5sB,EAAKF,EAEbs3B,GAAYhhD,KAAK0c,OAAOiL,GAAGF,GACxB+uB,EAAQx2C,KAAKuxC,OAASvxC,KAAKsxC,QAAUtxC,KAAKqxC,UAAU5pB,QACtD4pB,UAAU5pB,GAAKu5B,EAEpBt3B,GAAM9c,EAAKo0C,EACXp3B,GAAM4K,EAAKwsB,GAEPzK,EAAQ12C,EAAKwB,QACXmB,WAAW,EAAG6yB,EAAI,EAAGx1B,EAAK8D,MAAMimB,EAAI5pB,KAAK0xC,OAC/C6E,EAAM5zC,WAAW,EAAGyyB,EAAI,EAAGv1B,EAAK8D,MAAM+lB,EAAI1pB,KAAKyxC,WAE3CuH,EAAWn5C,EAAKiE,IAAI4jB,EAAMlU,QAAQxT,KAAK0c,OAAQ65B,SAC9ClF,UAAUvxC,GAAKk5C,EAASl5C,OACxBuxC,UAAUtxC,GAAKi5C,EAASj5C,MAEzBi1B,EAAIn1B,EAAK0B,MAAMy3C,GAEnB5jB,EAAGxyB,OAAO0xB,EAAIU,GACdtL,GAAM9c,EAAK/M,EAAK8D,MAAM3D,KAAKyxC,KAAMzc,GAEjCK,EAAG5yB,OAAO8xB,EAAIS,GACdpL,GAAM4K,EAAK30B,EAAK8D,MAAM3D,KAAK0xC,KAAM1c,OAC5B,KACDuhB,GAAAA,EAAQ12C,EAAKwB,QACXmB,WAAW,EAAG6yB,EAAI,EAAGx1B,EAAK8D,MAAMimB,EAAI5pB,KAAK0xC,OAC/C6E,EAAM5zC,WAAW,EAAGyyB,EAAI,EAAGv1B,EAAK8D,MAAM+lB,EAAI1pB,KAAKyxC,OAC3C+E,EAAQ5sB,EAAKF,MACb4pB,EAAO9rB,EAAK+uB,EAAMz2C,EAAGy2C,EAAMx2C,EAAGy2C,GAE9BtzB,EAAUsE,EAAK1jB,IAAI4jB,EAAMoH,QAAQ9uB,KAAK0c,OAAQ42B,SAC7CjC,UAAU/uC,IAAI4gB,GAEf8R,EAAIn1B,EAAKyB,IAAI4hB,EAAQpjB,EAAGojB,EAAQnjB,GAEpCq1B,EAAGxyB,OAAO0xB,EAAIU,GACdtL,GAAM9c,GAAM/M,EAAK8D,MAAM3D,KAAKyxC,KAAMzc,GAAK9R,EAAQuE,GAE/C4N,EAAG5yB,OAAO8xB,EAAIS,GACdpL,GAAM4K,GAAM30B,EAAK8D,MAAM3D,KAAK0xC,KAAM1c,GAAK9R,EAAQuE,QAG5C+P,QAAQza,WAAWvb,EAAI4zB,OACvBoC,QAAQza,WAAW5a,EAAIunB,OACvB+N,QAAQ1a,WAAWvb,EAAI6zB,OACvBoC,QAAQ1a,WAAW5a,EAAIynB,GAG9Bk3B,GAAU9/C,UAAU83B,yBAA2B,SAASnH,OAclDglB,EAAeC,EAbf5vB,EAAKhnB,KAAKw3B,QAAQxa,WAAWrN,EAC7B8kB,EAAKz0B,KAAKw3B,QAAQxa,WAAW/a,EAC7BglB,EAAKjnB,KAAKy3B,QAAQza,WAAWrN,EAC7B+kB,EAAK10B,KAAKy3B,QAAQza,WAAW/a,EAE7B4wC,EAAKriC,EAAIlP,IAAImzB,GAAKqe,EAAKtiC,EAAIlP,IAAIozB,GAE/BJ,EAAKt0B,KAAK6xC,WAAYtd,EAAKv0B,KAAK8xC,WAChCllC,EAAK5M,KAAK+xC,QAASvd,EAAKx0B,KAAKgyC,QAE7B9nB,EAAK1Z,EAAIgD,QAAQq/B,EAAIhzC,EAAKgD,IAAI7C,KAAK8wC,eAAgB9wC,KAAK2xC,iBACxDxnB,EAAK3Z,EAAIgD,QAAQs/B,EAAIjzC,EAAKgD,IAAI7C,KAAKgxC,eAAgBhxC,KAAK4xC,iBAIxD7c,EAAI,IAAIrN,KACZqN,EAAE5W,GAAGre,EAAIw0B,EAAKC,EAAKrK,EAAGnqB,EAAImqB,EAAGnqB,EAAI6M,EAAKud,EAAGpqB,EAAIoqB,EAAGpqB,EAAIy0B,EACpDO,EAAE3W,GAAGte,GAAKoqB,EAAGnqB,EAAImqB,EAAGpqB,EAAI8M,EAAKud,EAAGpqB,EAAIoqB,EAAGrqB,EAAI00B,EAC3CO,EAAEpN,GAAG7nB,GAAKoqB,EAAGnqB,EAAI6M,EAAKud,EAAGpqB,EAAIy0B,EAC7BO,EAAE5W,GAAGpe,EAAIg1B,EAAE3W,GAAGte,EACdi1B,EAAE3W,GAAGre,EAAIu0B,EAAKC,EAAKrK,EAAGpqB,EAAIoqB,EAAGpqB,EAAI8M,EAAKud,EAAGrqB,EAAIqqB,EAAGrqB,EAAI00B,EACpDO,EAAEpN,GAAG5nB,EAAImqB,EAAGpqB,EAAI8M,EAAKud,EAAGrqB,EAAI00B,EAC5BO,EAAE5W,GAAGsJ,EAAIsN,EAAEpN,GAAG7nB,EACdi1B,EAAE3W,GAAGqJ,EAAIsN,EAAEpN,GAAG5nB,EACdg1B,EAAEpN,GAAGF,EAAI7a,EAAK4nB,EAEVx0B,KAAKmxC,cAAgB,EAAK,EACxB0H,EAAKh5C,EAAKwB,QACXmB,WAAW,EAAGykB,EAAI,EAAGkD,GACxB0uB,EAAGl2C,WAAW,EAAGqkB,EAAI,EAAGkD,GAExBysB,EAAgBkC,EAAGv5C,SACnBs3C,EAAe,MAEX5hB,EAAIn1B,EAAKiE,IAAIixB,EAAE5G,QAAQ0qB,IAE3B7xB,EAAGpkB,OAAO0xB,EAAIU,GACdP,GAAM7nB,EAAK/M,EAAK8D,MAAMumB,EAAI8K,GAE1B/N,EAAGxkB,OAAO8xB,EAAIS,GACdN,GAAMF,EAAK30B,EAAK8D,MAAMwmB,EAAI6K,OACrB,KACD6jB,GAAAA,EAAKh5C,EAAKwB,QACXmB,WAAW,EAAGykB,EAAI,EAAGkD,GACxB0uB,EAAGl2C,WAAW,EAAGqkB,EAAI,EAAGkD,OAEpB6uB,EAAKrkB,EAAKD,EAAKz0B,KAAK80C,iBAExB6B,EAAgBkC,EAAGv5C,SACnBs3C,EAAel3C,EAAKqE,IAAIg1C,OAEpBhsC,EAAIya,EAAKqxB,EAAG/4C,EAAG+4C,EAAG94C,EAAGg5C,GAErB71B,EAAUsE,OACVuN,EAAEpN,GAAGF,EAAI,EACXvE,EAAUsE,EAAK1jB,IAAIixB,EAAE7G,QAAQnhB,QACxB,KACDi0C,EAAWnhD,EAAKiE,IAAIixB,EAAE5G,QAAQ0qB,IAClC31B,EAAQnhB,IAAIi/C,EAASlhD,EAAGkhD,EAASjhD,EAAG,GAGlCi1B,EAAIn1B,EAAKyB,IAAI4hB,EAAQpjB,EAAGojB,EAAQnjB,GAEpCinB,EAAGpkB,OAAO0xB,EAAIU,GACdP,GAAM7nB,GAAM/M,EAAK8D,MAAMumB,EAAI8K,GAAK9R,EAAQuE,GAExCR,EAAGxkB,OAAO8xB,EAAIS,GACdN,GAAMF,GAAM30B,EAAK8D,MAAMwmB,EAAI6K,GAAK9R,EAAQuE,eAGrC+P,QAAQxa,WAAWrN,EAAIqX,OACvBwQ,QAAQxa,WAAW/a,EAAIwyB,OACvBgD,QAAQza,WAAWrN,EAAIsX,OACvBwQ,QAAQza,WAAW/a,EAAIyyB,EAErBiiB,GAAiBryC,EAAS0C,YAC1B4vC,GAAgBtyC,EAAS4C,aC7alC+5C,GAAWjb,KAAO,cAClBzO,GAAMviB,MAAMisC,GAAWjb,MAAQib,GAE/BA,GAAWlb,OAASxO,GACpB0pB,GAAWjgD,UAAYjC,OAAOa,OAAOqhD,GAAWlb,OAAO/kC,WAuBvD,IAAIyvC,GAAW,CACboE,aAAc,EACdH,eAAiB,EACjBC,WAAa,EACbjE,YAAc,EACdC,aAAe,IAajB,SAASsQ,GAAWnqC,EAAK8a,EAAOC,EAAO6hB,EAAQwD,QACvCl3C,gBAAgBihD,WACb,IAAIA,GAAWnqC,EAAK8a,EAAOC,EAAO6hB,EAAQwD,GAGnDpgC,EAAMC,EAAQD,EAAK25B,IACnBlZ,GAAMyM,KAAKhkC,KAAM8W,EAAK8a,EAAOC,GAC7BD,EAAQ5xB,KAAKw3B,QACb3F,EAAQ7xB,KAAKy3B,aAERhmB,OAASwvC,GAAWjb,UAEpB8K,eAAiBjxC,EAAK0B,MAAMmyC,EAAS9hB,EAAM7N,cAAc2vB,GAAU58B,EAAIi6B,cAAgBlxC,EAAKwB,aAC5F2vC,eAAiBnxC,EAAK0B,MAAMmyC,EAAS7hB,EAAM9N,cAAc2vB,GAAU58B,EAAIm6B,cAAgBpxC,EAAKwB,aAC5F81C,cAAgBt3C,EAAK0B,MAAM21C,EAAOtlB,EAAM5N,eAAekzB,GAAQpgC,EAAIsgC,YAActgC,EAAIoqC,WAAarhD,EAAKyB,IAAI,EAAK,SAChH+1C,cAAgBx3C,EAAK8D,MAAM,EAAK3D,KAAKm3C,oBAErCz6B,OAAS,OACT20B,UAAY,OACZkE,YAAc,OACdP,eAAiB,OACjBmM,aAAe,OACfC,gBAAkB,OAElBjM,iBAAmBr+B,EAAI49B,oBACvBU,aAAet+B,EAAI69B,gBACnBW,cAAgBx+B,EAAI+9B,iBAEpB1D,cAAgBr6B,EAAI45B,iBACpBU,eAAiBt6B,EAAI65B,kBAErBY,OAAS,OACTD,QAAU,OAGVK,oBACAC,oBACAC,gBACAC,gBACAC,aACAC,aAEAqP,KAAOxhD,EAAKwB,YACZigD,KAAOzhD,EAAKwB,YACZkgD,WACAC,WACAC,WACAC,MAsBPT,GAAWjgD,UAAUC,WAAa,iBACzB,CACLmU,KAAMpV,KAAKyR,OACXmgB,MAAO5xB,KAAKw3B,QACZ3F,MAAO7xB,KAAKy3B,QACZE,iBAAkB33B,KAAKujB,mBAEvBsxB,YAAa70C,KAAKs1C,cAClBZ,eAAgB10C,KAAKm1C,iBACrBR,WAAY30C,KAAKo1C,aACjB1E,YAAa1wC,KAAKmxC,cAClBR,aAAc3wC,KAAKoxC,eAEnBL,aAAc/wC,KAAK8wC,eACnBG,aAAcjxC,KAAKgxC,eACnBoG,WAAYp3C,KAAKm3C,gBAIrB8J,GAAW//C,aAAe,SAASC,EAAMyZ,EAAO1F,UAC9C/T,EAAOpC,OAAOC,OAAO,GAAImC,IACpBywB,MAAQ1c,EAAQgG,EAAM/Z,EAAKywB,MAAOhX,GACvCzZ,EAAK0wB,MAAQ3c,EAAQgG,EAAM/Z,EAAK0wB,MAAOjX,GAC3B,IAAIqmC,GAAW9/C,IAO7B8/C,GAAWjgD,UAAUmxC,YAAc,SAASr7B,GACtCA,EAAI85B,aACDE,eAAe/uC,IAAI/B,KAAKw3B,QAAQzT,cAAcjN,EAAI85B,UAC9C95B,EAAIi6B,mBACRD,eAAe/uC,IAAI+U,EAAIi6B,cAG1Bj6B,EAAI+5B,aACDG,eAAejvC,IAAI/B,KAAKy3B,QAAQ1T,cAAcjN,EAAI+5B,UAC9C/5B,EAAIm6B,mBACRD,eAAejvC,IAAI+U,EAAIm6B,cAG1Bn6B,EAAIsgC,kBACDD,cAAcp1C,IAAI+U,EAAIsgC,iBACtBC,cAAct1C,IAAIlC,EAAK8D,MAAM,EAAKmT,EAAIsgC,eAO/C6J,GAAWjgD,UAAUoxC,gBAAkB,kBAC9BpyC,KAAK8wC,gBAMdmQ,GAAWjgD,UAAUqxC,gBAAkB,kBAC9BryC,KAAKgxC,gBAMdiQ,GAAWjgD,UAAU+2C,cAAgB,kBAC5B/3C,KAAKm3C,eAMd8J,GAAWjgD,UAAUg3C,oBAAsB,eACrC5Y,EAAKp/B,KAAKw3B,QACV6H,EAAKr/B,KAAKy3B,QAEV3H,EAAKsP,EAAGzd,cAAc3hB,KAAK8wC,gBAC3B/gB,EAAKsP,EAAG1d,cAAc3hB,KAAKgxC,gBAC3BxoC,EAAI3I,EAAKgD,IAAIktB,EAAID,GACjBonB,EAAO9X,EAAGvb,eAAe7jB,KAAKm3C,sBAEhBt3C,EAAK6D,IAAI8E,EAAG0uC,IAOhC+J,GAAWjgD,UAAU20C,cAAgB,eAC/BjsB,EAAK1pB,KAAKw3B,QAAQpa,yBACbpd,KAAKy3B,QAAQra,kBACVsM,GAMdu3B,GAAWjgD,UAAU40C,eAAiB,kBAC7B51C,KAAKs1C,eAMd2L,GAAWjgD,UAAU6zC,YAAc,SAASn0B,QACrC8W,QAAQhf,UAAS,QACjBif,QAAQjf,UAAS,QACjB88B,cAAgB50B,GAMvBugC,GAAWjgD,UAAU80C,cAAgB,SAASjjB,QACvC2E,QAAQhf,UAAS,QACjBif,QAAQjf,UAAS,QACjB48B,aAAeviB,GAMtBouB,GAAWjgD,UAAU+0C,cAAgB,kBAC5B/1C,KAAKo1C,cAMd6L,GAAWjgD,UAAUg1C,kBAAoB,SAAShzB,QAC3CwU,QAAQhf,UAAS,QACjBif,QAAQjf,UAAS,QACjB28B,iBAAmBnyB,GAG1Bi+B,GAAWjgD,UAAUi1C,kBAAoB,kBAChCj2C,KAAKm1C,kBAMd8L,GAAWjgD,UAAU60C,eAAiB,SAASnd,UACtCA,EAAS14B,KAAKg1C,gBAOvBiM,GAAWjgD,UAAU2gD,qBAAuB,SAASlP,QAC9CtB,cAAgBsB,GAGvBwO,GAAWjgD,UAAU4gD,qBAAuB,kBACnC5hD,KAAKmxC,eAMd8P,GAAWjgD,UAAU6gD,sBAAwB,SAAS7jB,QAC/CoT,eAAiBpT,GAGxBijB,GAAWjgD,UAAU8gD,sBAAwB,kBACpC9hD,KAAKoxC,gBAGd6P,GAAWjgD,UAAUu3B,WAAa,kBACzBv4B,KAAKw3B,QAAQ7V,cAAc3hB,KAAK8wC,iBAGzCmQ,GAAWjgD,UAAUw3B,WAAa,kBACzBx4B,KAAKy3B,QAAQ9V,cAAc3hB,KAAKgxC,iBAGzCiQ,GAAWjgD,UAAUy3B,iBAAmB,SAASC,UACxC74B,EAAKgE,QAAQ7D,KAAKqxC,UAAWrxC,KAAKshD,KAAMthD,KAAKohD,gBAAiBphD,KAAKqhD,MAAMv+C,IAAI41B,IAGtFuoB,GAAWjgD,UAAU23B,kBAAoB,SAASD,UACzCA,EAAS14B,KAAKg1C,gBAGvBiM,GAAWjgD,UAAU43B,wBAA0B,SAASjH,QACjDggB,eAAiB3xC,KAAKw3B,QAAQ1a,QAAQ5L,iBACtC0gC,eAAiB5xC,KAAKy3B,QAAQ3a,QAAQ5L,iBACtC2gC,WAAa7xC,KAAKw3B,QAAQ7a,eAC1Bm1B,WAAa9xC,KAAKy3B,QAAQ9a,eAC1Bo1B,QAAU/xC,KAAKw3B,QAAQ3a,YACvBm1B,QAAUhyC,KAAKy3B,QAAQ5a,WAExByX,EAAKt0B,KAAK6xC,WACVtd,EAAKv0B,KAAK8xC,WACVllC,EAAK5M,KAAK+xC,QACVvd,EAAKx0B,KAAKgyC,QAEVhrB,EAAKhnB,KAAKw3B,QAAQxa,WAAWrN,EAC7B8kB,EAAKz0B,KAAKw3B,QAAQxa,WAAW/a,EAC7BmzB,EAAKp1B,KAAKw3B,QAAQza,WAAWvb,EAC7BkoB,EAAK1pB,KAAKw3B,QAAQza,WAAW5a,EAE7B8kB,EAAKjnB,KAAKy3B,QAAQza,WAAWrN,EAC7B+kB,EAAK10B,KAAKy3B,QAAQza,WAAW/a,EAC7BozB,EAAKr1B,KAAKy3B,QAAQ1a,WAAWvb,EAC7BooB,EAAK5pB,KAAKy3B,QAAQ1a,WAAW5a,EAE7B0wC,EAAKriC,EAAIlP,IAAImzB,GACbqe,EAAKtiC,EAAIlP,IAAIozB,GAGbxK,EAAK1Z,EAAIgD,QAAQq/B,EAAIhzC,EAAKgD,IAAI7C,KAAK8wC,eAAgB9wC,KAAK2xC,iBACxDxnB,EAAK3Z,EAAIgD,QAAQs/B,EAAIjzC,EAAKgD,IAAI7C,KAAKgxC,eAAgBhxC,KAAK4xC,qBACxDppC,EAAI3I,EAAKwB,QACXmB,WAAW,EAAGykB,EAAI,EAAGkD,GACvB3hB,EAAE7F,WAAW,EAAGqkB,EAAI,EAAGkD,QAIhBo3B,KAAO9wC,EAAIgD,QAAQq/B,EAAI7yC,KAAKq3C,oBAC5BoK,MAAQ5hD,EAAK8D,MAAM9D,EAAKyC,IAAIkG,EAAG0hB,GAAKlqB,KAAKshD,WACzCI,MAAQ7hD,EAAK8D,MAAMwmB,EAAInqB,KAAKshD,WAE5B5kC,OAAS4X,EAAKC,EAAK3nB,EAAK5M,KAAKyhD,MAAQzhD,KAAKyhD,MAAQjtB,EAAKx0B,KAAK0hD,MAC3D1hD,KAAK0hD,MAEP1hD,KAAK0c,OAAS,SACXA,OAAS,EAAM1c,KAAK0c,aAKxBykC,aAAe,OACf5P,OAAS,OACTD,QAAU,EACXtxC,KAAKmxC,cAAgB,EAAK,MACvBkQ,KAAO7wC,EAAIgD,QAAQq/B,EAAI7yC,KAAKm3C,oBAC5BoK,MAAQ1hD,EAAK8D,MAAM9D,EAAKyC,IAAIkG,EAAG0hB,GAAKlqB,KAAKqhD,WACzCG,MAAQ3hD,EAAK8D,MAAMwmB,EAAInqB,KAAKqhD,UAE7BpO,EAAU3e,EAAKC,EAAK3nB,EAAK5M,KAAKuhD,MAAQvhD,KAAKuhD,MAAQ/sB,EAAKx0B,KAAKwhD,MAC3DxhD,KAAKwhD,SAEPvO,EAAU,EAAK,MACZkO,aAAe,EAAMlO,MAEtBlmC,EAAIlN,EAAK6D,IAAI8E,EAAGxI,KAAKqhD,MAGrBnO,EAAQ,EAAMxzC,EAAKyH,GAAKnH,KAAKmxC,cAG7B3oC,EAAI,EAAMxI,KAAKmhD,aAAenhD,KAAKoxC,eAAiB8B,EAGpDC,EAAInzC,KAAKmhD,aAAejO,EAAQA,EAGhCtjC,EAAI+hB,EAAK+K,QACR4U,QAAU1hC,GAAKpH,EAAIoH,EAAIujC,GACxBnzC,KAAKsxC,QAAU,SACZA,QAAU,EAAMtxC,KAAKsxC,cAGvBC,OAASxkC,EAAI6C,EAAIujC,EAAInzC,KAAKsxC,aAE1B6P,aAAelO,EAAUjzC,KAAKsxC,QAC/BtxC,KAAKmhD,aAAe,SACjBA,aAAe,EAAMnhD,KAAKmhD,yBAI9BC,gBAAkB,KAIrBphD,KAAKs1C,oBACFC,YAAc3oC,EAAK4nB,EACpBx0B,KAAKu1C,YAAc,SAChBA,YAAc,EAAMv1C,KAAKu1C,oBAG3BA,YAAc,OACdP,eAAiB,GAGpBrjB,EAAKO,aAAc,MAEhBmf,WAAa1f,EAAKQ,aAClBivB,iBAAmBzvB,EAAKQ,aACxB6iB,gBAAkBrjB,EAAKQ,YAExB6C,EAAIn1B,EAAKgE,QAAQ7D,KAAKqxC,UAAWrxC,KAAKshD,KAAMthD,KAAKohD,gBAAiBphD,KAAKqhD,MACvE7I,EAAKx4C,KAAKqxC,UAAYrxC,KAAKyhD,MAAQzhD,KAAKohD,gBAAkBphD,KAAKuhD,MAAQvhD,KAAKg1C,eAC5EyD,EAAKz4C,KAAKqxC,UAAYrxC,KAAK0hD,MAAQ1hD,KAAKohD,gBAAkBphD,KAAKwhD,MAAQxhD,KAAKg1C,eAEhF5f,EAAGxyB,OAAO5C,KAAK6xC,WAAY7c,GAC3BtL,GAAM1pB,KAAK+xC,QAAUyG,EAErBnjB,EAAG5yB,OAAOzC,KAAK8xC,WAAY9c,GAC3BpL,GAAM5pB,KAAKgyC,QAAUyG,YAGhBpH,UAAY,OACZ+P,gBAAkB,OAClBpM,eAAiB,OAGnBxd,QAAQza,WAAWvb,EAAEO,IAAIqzB,QACzBoC,QAAQza,WAAW5a,EAAIunB,OACvB+N,QAAQ1a,WAAWvb,EAAEO,IAAIszB,QACzBoC,QAAQ1a,WAAW5a,EAAIynB,GAG9Bq3B,GAAWjgD,UAAU63B,yBAA2B,SAASlH,OACnD2C,EAAKt0B,KAAK6xC,WACVtd,EAAKv0B,KAAK8xC,WACVllC,EAAK5M,KAAK+xC,QACVvd,EAAKx0B,KAAKgyC,QAEV5c,EAAKp1B,KAAKw3B,QAAQza,WAAWvb,EAC7BkoB,EAAK1pB,KAAKw3B,QAAQza,WAAW5a,EAC7BkzB,EAAKr1B,KAAKy3B,QAAQ1a,WAAWvb,EAC7BooB,EAAK5pB,KAAKy3B,QAAQ1a,WAAW5a,EAI3BmxC,EAAOzzC,EAAK6D,IAAI1D,KAAKqhD,KAAMhsB,GAAMx1B,EAAK6D,IAAI1D,KAAKqhD,KAAMjsB,GAAMp1B,KAAKwhD,MAC9D53B,EAAK5pB,KAAKuhD,MAAQ73B,EACpBxG,GAAWljB,KAAKmhD,cACb7N,EAAOtzC,KAAKuxC,OAASvxC,KAAKsxC,QAAUtxC,KAAKohD,sBAC3CA,iBAAmBl+B,MAEpB8R,EAAIn1B,EAAKiD,IAAIogB,EAASljB,KAAKqhD,MAC3B7I,EAAKt1B,EAAUljB,KAAKuhD,MACpB9I,EAAKv1B,EAAUljB,KAAKwhD,MAExBpsB,EAAGxyB,OAAO0xB,EAAIU,GACdtL,GAAM9c,EAAK4rC,EAEXnjB,EAAG5yB,OAAO8xB,EAAIS,GAMVse,GALJ1pB,GAAM4K,EAAKikB,GAKK/uB,EAAK1pB,KAAKo1C,aACtBlyB,GAAWljB,KAAKu1C,YAAcjC,MAE9Be,EAAar0C,KAAKg1C,eAClBV,EAAa3iB,EAAK+K,GAAK18B,KAAKm1C,sBAC3BH,eAAiBt1C,EAAKoB,MAAMd,KAAKg1C,eAAiB9xB,GAClDoxB,EAAYA,GAGjB5qB,GAAM9c,GAFNsW,EAAUljB,KAAKg1C,eAAiBX,GAGhCzqB,GAAM4K,EAAKtR,EAKPowB,EAAOzzC,EAAK6D,IAAI1D,KAAKshD,KAAMjsB,GAAMx1B,EAAK6D,IAAI1D,KAAKshD,KAAMlsB,GAAMp1B,KAAK0hD,MAC9D93B,EAAK5pB,KAAKyhD,MAAQ/3B,EACpBxG,GAAWljB,KAAK0c,OAAS42B,OACxBjC,WAAanuB,EAEd8R,EAAIn1B,EAAKiD,IAAIogB,EAASljB,KAAKshD,MAC3B9I,EAAKt1B,EAAUljB,KAAKyhD,MACpBhJ,EAAKv1B,EAAUljB,KAAK0hD,MAExBtsB,EAAGxyB,OAAO0xB,EAAIU,GACdtL,GAAM9c,EAAK4rC,EAEXnjB,EAAG5yB,OAAO8xB,EAAIS,GACdpL,GAAM4K,EAAKikB,OAGRjhB,QAAQza,WAAWvb,EAAEO,IAAIqzB,QACzBoC,QAAQza,WAAW5a,EAAIunB,OACvB+N,QAAQ1a,WAAWvb,EAAEO,IAAIszB,QACzBoC,QAAQ1a,WAAW5a,EAAIynB,GAG9Bq3B,GAAWjgD,UAAU83B,yBAA2B,SAASnH,OACnD3K,EAAKhnB,KAAKw3B,QAAQxa,WAAWrN,EAC7B8kB,EAAKz0B,KAAKw3B,QAAQxa,WAAW/a,EAC7BglB,EAAKjnB,KAAKy3B,QAAQza,WAAWrN,EAC7B+kB,EAAK10B,KAAKy3B,QAAQza,WAAW/a,EAE7B4wC,EAAKriC,EAAIlP,IAAImzB,GACbqe,EAAKtiC,EAAIlP,IAAIozB,GAEbxK,EAAK1Z,EAAIgD,QAAQq/B,EAAIhzC,EAAKgD,IAAI7C,KAAK8wC,eAAgB9wC,KAAK2xC,iBACxDxnB,EAAK3Z,EAAIgD,QAAQs/B,EAAIjzC,EAAKgD,IAAI7C,KAAKgxC,eAAgBhxC,KAAK4xC,iBACxDppC,EAAI3I,EAAKwB,OACbmH,EAAEhG,WAAW,EAAGykB,EAAI,EAAGkD,GACvB3hB,EAAE7F,WAAW,EAAGqkB,EAAI,EAAGkD,OAYnBhH,EAVA6+B,EAAKvxC,EAAIgD,QAAQq/B,EAAI7yC,KAAKq3C,eAE1B2K,EAAMniD,EAAK8D,MAAM9D,EAAKyC,IAAIkG,EAAG0hB,GAAK63B,GAClCE,EAAMpiD,EAAK8D,MAAMwmB,EAAI43B,GAErBh1C,EAAIlN,EAAK6D,IAAI8E,EAAGu5C,GAEhB5O,EAAInzC,KAAK6xC,WAAa7xC,KAAK8xC,WAAa9xC,KAAK+xC,QAAU/xC,KAAKyhD,MAC1DzhD,KAAKyhD,MAAQzhD,KAAKgyC,QAAUhyC,KAAK0hD,MAAQ1hD,KAAK0hD,MAIlDx+B,EADO,GAALiwB,GACSpmC,EAAIomC,EAEL,MAGRne,EAAIn1B,EAAKiD,IAAIogB,EAAS6+B,GACtBvJ,EAAKt1B,EAAU8+B,EACfvJ,EAAKv1B,EAAU++B,SAEnBj7B,EAAGpkB,OAAO5C,KAAK6xC,WAAY7c,GAC3BP,GAAMz0B,KAAK+xC,QAAUyG,EACrBvxB,EAAGxkB,OAAOzC,KAAK8xC,WAAY9c,GAC3BN,GAAM10B,KAAKgyC,QAAUyG,OAEhBjhB,QAAQxa,WAAWrN,EAAE5N,IAAIilB,QACzBwQ,QAAQxa,WAAW/a,EAAIwyB,OACvBgD,QAAQza,WAAWrN,EAAE5N,IAAIklB,QACzBwQ,QAAQza,WAAW/a,EAAIyyB,EAErBh1B,EAAKqE,IAAIgJ,IAAMzI,EAAS0C,gBChhBpBk7C,GAAW,CACtBxY,gBAAAA,GACAplC,SAAAA,EACA2M,MAAAA,EACAoN,SAAAA,EACAkK,SAAAA,EACA2Q,aAAAA,GACA3yB,YAAAA,EACAkiB,MAAAA"}